// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSDevUpdateFromDIS.proto

#ifndef PROTOBUF_MSDevUpdateFromDIS_2eproto__INCLUDED
#define PROTOBUF_MSDevUpdateFromDIS_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace arges {
namespace file {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MSDevUpdateFromDIS_2eproto();
void protobuf_AssignDesc_MSDevUpdateFromDIS_2eproto();
void protobuf_ShutdownFile_MSDevUpdateFromDIS_2eproto();

class MSDevUpdateFromDIS;

// ===================================================================

class MSDevUpdateFromDIS : public ::google::protobuf::Message {
 public:
  MSDevUpdateFromDIS();
  virtual ~MSDevUpdateFromDIS();

  MSDevUpdateFromDIS(const MSDevUpdateFromDIS& from);

  inline MSDevUpdateFromDIS& operator=(const MSDevUpdateFromDIS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSDevUpdateFromDIS& default_instance();

  void Swap(MSDevUpdateFromDIS* other);

  // implements Message ----------------------------------------------

  MSDevUpdateFromDIS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSDevUpdateFromDIS& from);
  void MergeFrom(const MSDevUpdateFromDIS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string deviceId = 1;
  inline int deviceid_size() const;
  inline void clear_deviceid();
  static const int kDeviceIdFieldNumber = 1;
  inline const ::std::string& deviceid(int index) const;
  inline ::std::string* mutable_deviceid(int index);
  inline void set_deviceid(int index, const ::std::string& value);
  inline void set_deviceid(int index, const char* value);
  inline void set_deviceid(int index, const char* value, size_t size);
  inline ::std::string* add_deviceid();
  inline void add_deviceid(const ::std::string& value);
  inline void add_deviceid(const char* value);
  inline void add_deviceid(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& deviceid() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_deviceid();

  // required int32 operation = 2 [default = -1];
  inline bool has_operation() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 2;
  inline ::google::protobuf::int32 operation() const;
  inline void set_operation(::google::protobuf::int32 value);

  // required string respurl = 3 [default = ""];
  inline bool has_respurl() const;
  inline void clear_respurl();
  static const int kRespurlFieldNumber = 3;
  inline const ::std::string& respurl() const;
  inline void set_respurl(const ::std::string& value);
  inline void set_respurl(const char* value);
  inline void set_respurl(const char* value, size_t size);
  inline ::std::string* mutable_respurl();
  inline ::std::string* release_respurl();
  inline void set_allocated_respurl(::std::string* respurl);

  // optional int32 order = 4 [default = -1];
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 4;
  inline ::google::protobuf::int32 order() const;
  inline void set_order(::google::protobuf::int32 value);

  // required int32 mstype = 5 [default = -1];
  inline bool has_mstype() const;
  inline void clear_mstype();
  static const int kMstypeFieldNumber = 5;
  inline ::google::protobuf::int32 mstype() const;
  inline void set_mstype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.MSDevUpdateFromDIS)
 private:
  inline void set_has_operation();
  inline void clear_has_operation();
  inline void set_has_respurl();
  inline void clear_has_respurl();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_mstype();
  inline void clear_has_mstype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> deviceid_;
  ::std::string* respurl_;
  ::google::protobuf::int32 operation_;
  ::google::protobuf::int32 order_;
  ::google::protobuf::int32 mstype_;
  friend void  protobuf_AddDesc_MSDevUpdateFromDIS_2eproto();
  friend void protobuf_AssignDesc_MSDevUpdateFromDIS_2eproto();
  friend void protobuf_ShutdownFile_MSDevUpdateFromDIS_2eproto();

  void InitAsDefaultInstance();
  static MSDevUpdateFromDIS* default_instance_;
};
// ===================================================================


// ===================================================================

// MSDevUpdateFromDIS

// repeated string deviceId = 1;
inline int MSDevUpdateFromDIS::deviceid_size() const {
  return deviceid_.size();
}
inline void MSDevUpdateFromDIS::clear_deviceid() {
  deviceid_.Clear();
}
inline const ::std::string& MSDevUpdateFromDIS::deviceid(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.MSDevUpdateFromDIS.deviceId)
  return deviceid_.Get(index);
}
inline ::std::string* MSDevUpdateFromDIS::mutable_deviceid(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.MSDevUpdateFromDIS.deviceId)
  return deviceid_.Mutable(index);
}
inline void MSDevUpdateFromDIS::set_deviceid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.arges.file.proto.MSDevUpdateFromDIS.deviceId)
  deviceid_.Mutable(index)->assign(value);
}
inline void MSDevUpdateFromDIS::set_deviceid(int index, const char* value) {
  deviceid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.MSDevUpdateFromDIS.deviceId)
}
inline void MSDevUpdateFromDIS::set_deviceid(int index, const char* value, size_t size) {
  deviceid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.MSDevUpdateFromDIS.deviceId)
}
inline ::std::string* MSDevUpdateFromDIS::add_deviceid() {
  return deviceid_.Add();
}
inline void MSDevUpdateFromDIS::add_deviceid(const ::std::string& value) {
  deviceid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.arges.file.proto.MSDevUpdateFromDIS.deviceId)
}
inline void MSDevUpdateFromDIS::add_deviceid(const char* value) {
  deviceid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.arges.file.proto.MSDevUpdateFromDIS.deviceId)
}
inline void MSDevUpdateFromDIS::add_deviceid(const char* value, size_t size) {
  deviceid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.arges.file.proto.MSDevUpdateFromDIS.deviceId)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MSDevUpdateFromDIS::deviceid() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.MSDevUpdateFromDIS.deviceId)
  return deviceid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MSDevUpdateFromDIS::mutable_deviceid() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.MSDevUpdateFromDIS.deviceId)
  return &deviceid_;
}

// required int32 operation = 2 [default = -1];
inline bool MSDevUpdateFromDIS::has_operation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSDevUpdateFromDIS::set_has_operation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSDevUpdateFromDIS::clear_has_operation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSDevUpdateFromDIS::clear_operation() {
  operation_ = -1;
  clear_has_operation();
}
inline ::google::protobuf::int32 MSDevUpdateFromDIS::operation() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.MSDevUpdateFromDIS.operation)
  return operation_;
}
inline void MSDevUpdateFromDIS::set_operation(::google::protobuf::int32 value) {
  set_has_operation();
  operation_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.MSDevUpdateFromDIS.operation)
}

// required string respurl = 3 [default = ""];
inline bool MSDevUpdateFromDIS::has_respurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSDevUpdateFromDIS::set_has_respurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSDevUpdateFromDIS::clear_has_respurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSDevUpdateFromDIS::clear_respurl() {
  if (respurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    respurl_->clear();
  }
  clear_has_respurl();
}
inline const ::std::string& MSDevUpdateFromDIS::respurl() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.MSDevUpdateFromDIS.respurl)
  return *respurl_;
}
inline void MSDevUpdateFromDIS::set_respurl(const ::std::string& value) {
  set_has_respurl();
  if (respurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    respurl_ = new ::std::string;
  }
  respurl_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.MSDevUpdateFromDIS.respurl)
}
inline void MSDevUpdateFromDIS::set_respurl(const char* value) {
  set_has_respurl();
  if (respurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    respurl_ = new ::std::string;
  }
  respurl_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.MSDevUpdateFromDIS.respurl)
}
inline void MSDevUpdateFromDIS::set_respurl(const char* value, size_t size) {
  set_has_respurl();
  if (respurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    respurl_ = new ::std::string;
  }
  respurl_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.MSDevUpdateFromDIS.respurl)
}
inline ::std::string* MSDevUpdateFromDIS::mutable_respurl() {
  set_has_respurl();
  if (respurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    respurl_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.MSDevUpdateFromDIS.respurl)
  return respurl_;
}
inline ::std::string* MSDevUpdateFromDIS::release_respurl() {
  clear_has_respurl();
  if (respurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = respurl_;
    respurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSDevUpdateFromDIS::set_allocated_respurl(::std::string* respurl) {
  if (respurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete respurl_;
  }
  if (respurl) {
    set_has_respurl();
    respurl_ = respurl;
  } else {
    clear_has_respurl();
    respurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.MSDevUpdateFromDIS.respurl)
}

// optional int32 order = 4 [default = -1];
inline bool MSDevUpdateFromDIS::has_order() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSDevUpdateFromDIS::set_has_order() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSDevUpdateFromDIS::clear_has_order() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSDevUpdateFromDIS::clear_order() {
  order_ = -1;
  clear_has_order();
}
inline ::google::protobuf::int32 MSDevUpdateFromDIS::order() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.MSDevUpdateFromDIS.order)
  return order_;
}
inline void MSDevUpdateFromDIS::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.MSDevUpdateFromDIS.order)
}

// required int32 mstype = 5 [default = -1];
inline bool MSDevUpdateFromDIS::has_mstype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MSDevUpdateFromDIS::set_has_mstype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MSDevUpdateFromDIS::clear_has_mstype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MSDevUpdateFromDIS::clear_mstype() {
  mstype_ = -1;
  clear_has_mstype();
}
inline ::google::protobuf::int32 MSDevUpdateFromDIS::mstype() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.MSDevUpdateFromDIS.mstype)
  return mstype_;
}
inline void MSDevUpdateFromDIS::set_mstype(::google::protobuf::int32 value) {
  set_has_mstype();
  mstype_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.MSDevUpdateFromDIS.mstype)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace file
}  // namespace arges
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MSDevUpdateFromDIS_2eproto__INCLUDED
