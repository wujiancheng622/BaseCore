// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ResultMassageBean.proto

#ifndef PROTOBUF_ResultMassageBean_2eproto__INCLUDED
#define PROTOBUF_ResultMassageBean_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace arges {
namespace file {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ResultMassageBean_2eproto();
void protobuf_AssignDesc_ResultMassageBean_2eproto();
void protobuf_ShutdownFile_ResultMassageBean_2eproto();

class ResultMassage;

enum RESULT_TYPE {
  RESULT_ERR = -1,
  RESULT_OK = 0
};
bool RESULT_TYPE_IsValid(int value);
const RESULT_TYPE RESULT_TYPE_MIN = RESULT_ERR;
const RESULT_TYPE RESULT_TYPE_MAX = RESULT_OK;
const int RESULT_TYPE_ARRAYSIZE = RESULT_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* RESULT_TYPE_descriptor();
inline const ::std::string& RESULT_TYPE_Name(RESULT_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    RESULT_TYPE_descriptor(), value);
}
inline bool RESULT_TYPE_Parse(
    const ::std::string& name, RESULT_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RESULT_TYPE>(
    RESULT_TYPE_descriptor(), name, value);
}
// ===================================================================

class ResultMassage : public ::google::protobuf::Message {
 public:
  ResultMassage();
  virtual ~ResultMassage();

  ResultMassage(const ResultMassage& from);

  inline ResultMassage& operator=(const ResultMassage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResultMassage& default_instance();

  void Swap(ResultMassage* other);

  // implements Message ----------------------------------------------

  ResultMassage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResultMassage& from);
  void MergeFrom(const ResultMassage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1 [default = 0];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string describe = 2 [default = ""];
  inline bool has_describe() const;
  inline void clear_describe();
  static const int kDescribeFieldNumber = 2;
  inline const ::std::string& describe() const;
  inline void set_describe(const ::std::string& value);
  inline void set_describe(const char* value);
  inline void set_describe(const char* value, size_t size);
  inline ::std::string* mutable_describe();
  inline ::std::string* release_describe();
  inline void set_allocated_describe(::std::string* describe);

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.ResultMassage)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_describe();
  inline void clear_has_describe();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* describe_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_ResultMassageBean_2eproto();
  friend void protobuf_AssignDesc_ResultMassageBean_2eproto();
  friend void protobuf_ShutdownFile_ResultMassageBean_2eproto();

  void InitAsDefaultInstance();
  static ResultMassage* default_instance_;
};
// ===================================================================


// ===================================================================

// ResultMassage

// optional int32 result = 1 [default = 0];
inline bool ResultMassage::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResultMassage::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResultMassage::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResultMassage::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResultMassage::result() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ResultMassage.result)
  return result_;
}
inline void ResultMassage::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.ResultMassage.result)
}

// optional string describe = 2 [default = ""];
inline bool ResultMassage::has_describe() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResultMassage::set_has_describe() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResultMassage::clear_has_describe() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResultMassage::clear_describe() {
  if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_->clear();
  }
  clear_has_describe();
}
inline const ::std::string& ResultMassage::describe() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ResultMassage.describe)
  return *describe_;
}
inline void ResultMassage::set_describe(const ::std::string& value) {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.ResultMassage.describe)
}
inline void ResultMassage::set_describe(const char* value) {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.ResultMassage.describe)
}
inline void ResultMassage::set_describe(const char* value, size_t size) {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  describe_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.ResultMassage.describe)
}
inline ::std::string* ResultMassage::mutable_describe() {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.ResultMassage.describe)
  return describe_;
}
inline ::std::string* ResultMassage::release_describe() {
  clear_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = describe_;
    describe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ResultMassage::set_allocated_describe(::std::string* describe) {
  if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete describe_;
  }
  if (describe) {
    set_has_describe();
    describe_ = describe;
  } else {
    clear_has_describe();
    describe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.ResultMassage.describe)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace file
}  // namespace arges
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::arges::file::proto::RESULT_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::RESULT_TYPE>() {
  return ::com::arges::file::proto::RESULT_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ResultMassageBean_2eproto__INCLUDED
