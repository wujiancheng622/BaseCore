// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ParamMessageBean.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ParamMessageBean.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace arges {
namespace file {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* ParamMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ParamMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ParamMessageBean_2eproto() {
  protobuf_AddDesc_ParamMessageBean_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ParamMessageBean.proto");
  GOOGLE_CHECK(file != NULL);
  ParamMessage_descriptor_ = file->message_type(0);
  static const int ParamMessage_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamMessage, model_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamMessage, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamMessage, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamMessage, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamMessage, srcmodule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamMessage, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamMessage, sessionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamMessage, brokerurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamMessage, desturl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamMessage, rspip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamMessage, rspport_),
  };
  ParamMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ParamMessage_descriptor_,
      ParamMessage::default_instance_,
      ParamMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ParamMessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ParamMessageBean_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ParamMessage_descriptor_, &ParamMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ParamMessageBean_2eproto() {
  delete ParamMessage::default_instance_;
  delete ParamMessage_reflection_;
}

void protobuf_AddDesc_ParamMessageBean_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026ParamMessageBean.proto\022\024com.arges.file"
    ".proto\"\344\001\n\014ParamMessage\022\021\n\005model\030\001 \001(\005:\002"
    "-1\022\020\n\004Type\030\002 \001(\005:\002-1\022\020\n\004code\030\003 \001(\005:\002-1\022\021"
    "\n\007content\030\004 \001(\014:\000\022\025\n\tsrcModule\030\005 \001(\005:\002-1"
    "\022\020\n\006domain\030\006 \001(\t:\000\022\023\n\tsessionId\030\007 \001(\t:\000\022"
    "\023\n\tbrokerUrl\030\010 \001(\t:\000\022\021\n\007destUrl\030\t \001(\t:\000\022"
    "\017\n\005rspIp\030\n \001(\t:\000\022\023\n\007rspPort\030\013 \001(\005:\002-1", 277);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ParamMessageBean.proto", &protobuf_RegisterTypes);
  ParamMessage::default_instance_ = new ParamMessage();
  ParamMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ParamMessageBean_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ParamMessageBean_2eproto {
  StaticDescriptorInitializer_ParamMessageBean_2eproto() {
    protobuf_AddDesc_ParamMessageBean_2eproto();
  }
} static_descriptor_initializer_ParamMessageBean_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ParamMessage::kModelFieldNumber;
const int ParamMessage::kTypeFieldNumber;
const int ParamMessage::kCodeFieldNumber;
const int ParamMessage::kContentFieldNumber;
const int ParamMessage::kSrcModuleFieldNumber;
const int ParamMessage::kDomainFieldNumber;
const int ParamMessage::kSessionIdFieldNumber;
const int ParamMessage::kBrokerUrlFieldNumber;
const int ParamMessage::kDestUrlFieldNumber;
const int ParamMessage::kRspIpFieldNumber;
const int ParamMessage::kRspPortFieldNumber;
#endif  // !_MSC_VER

ParamMessage::ParamMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.ParamMessage)
}

void ParamMessage::InitAsDefaultInstance() {
}

ParamMessage::ParamMessage(const ParamMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.ParamMessage)
}

void ParamMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  model_ = -1;
  type_ = -1;
  code_ = -1;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcmodule_ = -1;
  domain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brokerurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desturl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rspip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rspport_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ParamMessage::~ParamMessage() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.ParamMessage)
  SharedDtor();
}

void ParamMessage::SharedDtor() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (domain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete domain_;
  }
  if (sessionid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sessionid_;
  }
  if (brokerurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete brokerurl_;
  }
  if (desturl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desturl_;
  }
  if (rspip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rspip_;
  }
  if (this != default_instance_) {
  }
}

void ParamMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParamMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ParamMessage_descriptor_;
}

const ParamMessage& ParamMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ParamMessageBean_2eproto();
  return *default_instance_;
}

ParamMessage* ParamMessage::default_instance_ = NULL;

ParamMessage* ParamMessage::New() const {
  return new ParamMessage;
}

void ParamMessage::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    model_ = -1;
    type_ = -1;
    code_ = -1;
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_->clear();
      }
    }
    srcmodule_ = -1;
    if (has_domain()) {
      if (domain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        domain_->clear();
      }
    }
    if (has_sessionid()) {
      if (sessionid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sessionid_->clear();
      }
    }
    if (has_brokerurl()) {
      if (brokerurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        brokerurl_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 1792) {
    if (has_desturl()) {
      if (desturl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        desturl_->clear();
      }
    }
    if (has_rspip()) {
      if (rspip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        rspip_->clear();
      }
    }
    rspport_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ParamMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.ParamMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 model = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &model_)));
          set_has_model();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Type;
        break;
      }

      // optional int32 Type = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_code;
        break;
      }

      // optional int32 code = 3 [default = -1];
      case 3: {
        if (tag == 24) {
         parse_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
          set_has_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_content;
        break;
      }

      // optional bytes content = 4 [default = ""];
      case 4: {
        if (tag == 34) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_srcModule;
        break;
      }

      // optional int32 srcModule = 5 [default = -1];
      case 5: {
        if (tag == 40) {
         parse_srcModule:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &srcmodule_)));
          set_has_srcmodule();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_domain;
        break;
      }

      // optional string domain = 6 [default = ""];
      case 6: {
        if (tag == 50) {
         parse_domain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "domain");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sessionId;
        break;
      }

      // optional string sessionId = 7 [default = ""];
      case 7: {
        if (tag == 58) {
         parse_sessionId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sessionid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_brokerUrl;
        break;
      }

      // optional string brokerUrl = 8 [default = ""];
      case 8: {
        if (tag == 66) {
         parse_brokerUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brokerurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->brokerurl().data(), this->brokerurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brokerurl");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_destUrl;
        break;
      }

      // optional string destUrl = 9 [default = ""];
      case 9: {
        if (tag == 74) {
         parse_destUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desturl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->desturl().data(), this->desturl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "desturl");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_rspIp;
        break;
      }

      // optional string rspIp = 10 [default = ""];
      case 10: {
        if (tag == 82) {
         parse_rspIp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rspip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rspip().data(), this->rspip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "rspip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_rspPort;
        break;
      }

      // optional int32 rspPort = 11 [default = -1];
      case 11: {
        if (tag == 88) {
         parse_rspPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rspport_)));
          set_has_rspport();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.ParamMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.ParamMessage)
  return false;
#undef DO_
}

void ParamMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.ParamMessage)
  // optional int32 model = 1 [default = -1];
  if (has_model()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->model(), output);
  }

  // optional int32 Type = 2 [default = -1];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional int32 code = 3 [default = -1];
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->code(), output);
  }

  // optional bytes content = 4 [default = ""];
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->content(), output);
  }

  // optional int32 srcModule = 5 [default = -1];
  if (has_srcmodule()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->srcmodule(), output);
  }

  // optional string domain = 6 [default = ""];
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->domain(), output);
  }

  // optional string sessionId = 7 [default = ""];
  if (has_sessionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sessionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sessionid(), output);
  }

  // optional string brokerUrl = 8 [default = ""];
  if (has_brokerurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->brokerurl().data(), this->brokerurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brokerurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->brokerurl(), output);
  }

  // optional string destUrl = 9 [default = ""];
  if (has_desturl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desturl().data(), this->desturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "desturl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->desturl(), output);
  }

  // optional string rspIp = 10 [default = ""];
  if (has_rspip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspip().data(), this->rspip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rspip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->rspip(), output);
  }

  // optional int32 rspPort = 11 [default = -1];
  if (has_rspport()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->rspport(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.ParamMessage)
}

::google::protobuf::uint8* ParamMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.ParamMessage)
  // optional int32 model = 1 [default = -1];
  if (has_model()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->model(), target);
  }

  // optional int32 Type = 2 [default = -1];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional int32 code = 3 [default = -1];
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->code(), target);
  }

  // optional bytes content = 4 [default = ""];
  if (has_content()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->content(), target);
  }

  // optional int32 srcModule = 5 [default = -1];
  if (has_srcmodule()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->srcmodule(), target);
  }

  // optional string domain = 6 [default = ""];
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->domain(), target);
  }

  // optional string sessionId = 7 [default = ""];
  if (has_sessionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sessionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sessionid(), target);
  }

  // optional string brokerUrl = 8 [default = ""];
  if (has_brokerurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->brokerurl().data(), this->brokerurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brokerurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->brokerurl(), target);
  }

  // optional string destUrl = 9 [default = ""];
  if (has_desturl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desturl().data(), this->desturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "desturl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->desturl(), target);
  }

  // optional string rspIp = 10 [default = ""];
  if (has_rspip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rspip().data(), this->rspip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rspip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->rspip(), target);
  }

  // optional int32 rspPort = 11 [default = -1];
  if (has_rspport()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->rspport(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.ParamMessage)
  return target;
}

int ParamMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 model = 1 [default = -1];
    if (has_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->model());
    }

    // optional int32 Type = 2 [default = -1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 code = 3 [default = -1];
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

    // optional bytes content = 4 [default = ""];
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->content());
    }

    // optional int32 srcModule = 5 [default = -1];
    if (has_srcmodule()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->srcmodule());
    }

    // optional string domain = 6 [default = ""];
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional string sessionId = 7 [default = ""];
    if (has_sessionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sessionid());
    }

    // optional string brokerUrl = 8 [default = ""];
    if (has_brokerurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->brokerurl());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string destUrl = 9 [default = ""];
    if (has_desturl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desturl());
    }

    // optional string rspIp = 10 [default = ""];
    if (has_rspip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rspip());
    }

    // optional int32 rspPort = 11 [default = -1];
    if (has_rspport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rspport());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParamMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ParamMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ParamMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ParamMessage::MergeFrom(const ParamMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_model()) {
      set_model(from.model());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_srcmodule()) {
      set_srcmodule(from.srcmodule());
    }
    if (from.has_domain()) {
      set_domain(from.domain());
    }
    if (from.has_sessionid()) {
      set_sessionid(from.sessionid());
    }
    if (from.has_brokerurl()) {
      set_brokerurl(from.brokerurl());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_desturl()) {
      set_desturl(from.desturl());
    }
    if (from.has_rspip()) {
      set_rspip(from.rspip());
    }
    if (from.has_rspport()) {
      set_rspport(from.rspport());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ParamMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParamMessage::CopyFrom(const ParamMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParamMessage::IsInitialized() const {

  return true;
}

void ParamMessage::Swap(ParamMessage* other) {
  if (other != this) {
    std::swap(model_, other->model_);
    std::swap(type_, other->type_);
    std::swap(code_, other->code_);
    std::swap(content_, other->content_);
    std::swap(srcmodule_, other->srcmodule_);
    std::swap(domain_, other->domain_);
    std::swap(sessionid_, other->sessionid_);
    std::swap(brokerurl_, other->brokerurl_);
    std::swap(desturl_, other->desturl_);
    std::swap(rspip_, other->rspip_);
    std::swap(rspport_, other->rspport_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ParamMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ParamMessage_descriptor_;
  metadata.reflection = ParamMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace file
}  // namespace arges
}  // namespace com

// @@protoc_insertion_point(global_scope)
