// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AlarmBean.proto

#ifndef PROTOBUF_AlarmBean_2eproto__INCLUDED
#define PROTOBUF_AlarmBean_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "DevInfoListBean.pb.h"
#include "ActionLinkBean.pb.h"
#include "TimeTemplateBean.pb.h"
#include "RaiseDustDataBean.pb.h"  // IWYU pragma: export
// @@protoc_insertion_point(includes)

namespace com {
namespace arges {
namespace file {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AlarmBean_2eproto();
void protobuf_AssignDesc_AlarmBean_2eproto();
void protobuf_ShutdownFile_AlarmBean_2eproto();

class ActionLinkData;
class AlarmSrcDevInfo;
class AlarmTypeData;
class AlarmTypeMassage;
class ActionTypeData;
class ActionTypeMassage;
class AlarmData;
class AlarmData_RaisuDustAlarm;
class AlarmMassage;
class AlarmPlanData;
class AlarmRuleData;
class AlarmPlanMassage;
class AlarmDataForDIS;
class GetAlarmDataForDIS;
class AlarmGetSrcsourceMassage;
class AlarmRecordData;
class AlarmRecordData_LinkVideoData;
class AlarmRecordData_RaiseAlarmData;
class AlarmRecordMessage;
class AlarmRecordMessage_AlarmParam;

enum DEVICE_TYPE_OF_ALARM_SROUCE {
  ALARM_DEVICE_SOURCE_IS_DEVICE = 1,
  ALARM_DEVICE_SOURCE_IS_VIDEO = 2,
  ALARM_DEVICE_SOURCE_IS_ALARMIN = 3,
  ALARM_DEVICE_SOURCE_IS_INTELLIGENT = 4
};
bool DEVICE_TYPE_OF_ALARM_SROUCE_IsValid(int value);
const DEVICE_TYPE_OF_ALARM_SROUCE DEVICE_TYPE_OF_ALARM_SROUCE_MIN = ALARM_DEVICE_SOURCE_IS_DEVICE;
const DEVICE_TYPE_OF_ALARM_SROUCE DEVICE_TYPE_OF_ALARM_SROUCE_MAX = ALARM_DEVICE_SOURCE_IS_INTELLIGENT;
const int DEVICE_TYPE_OF_ALARM_SROUCE_ARRAYSIZE = DEVICE_TYPE_OF_ALARM_SROUCE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DEVICE_TYPE_OF_ALARM_SROUCE_descriptor();
inline const ::std::string& DEVICE_TYPE_OF_ALARM_SROUCE_Name(DEVICE_TYPE_OF_ALARM_SROUCE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DEVICE_TYPE_OF_ALARM_SROUCE_descriptor(), value);
}
inline bool DEVICE_TYPE_OF_ALARM_SROUCE_Parse(
    const ::std::string& name, DEVICE_TYPE_OF_ALARM_SROUCE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DEVICE_TYPE_OF_ALARM_SROUCE>(
    DEVICE_TYPE_OF_ALARM_SROUCE_descriptor(), name, value);
}
enum RESULT_TYPE_OF_ALARM {
  ALARM_IS_OK = 1,
  ALARM_IS_ERROR = 2
};
bool RESULT_TYPE_OF_ALARM_IsValid(int value);
const RESULT_TYPE_OF_ALARM RESULT_TYPE_OF_ALARM_MIN = ALARM_IS_OK;
const RESULT_TYPE_OF_ALARM RESULT_TYPE_OF_ALARM_MAX = ALARM_IS_ERROR;
const int RESULT_TYPE_OF_ALARM_ARRAYSIZE = RESULT_TYPE_OF_ALARM_MAX + 1;

const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_ALARM_descriptor();
inline const ::std::string& RESULT_TYPE_OF_ALARM_Name(RESULT_TYPE_OF_ALARM value) {
  return ::google::protobuf::internal::NameOfEnum(
    RESULT_TYPE_OF_ALARM_descriptor(), value);
}
inline bool RESULT_TYPE_OF_ALARM_Parse(
    const ::std::string& name, RESULT_TYPE_OF_ALARM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RESULT_TYPE_OF_ALARM>(
    RESULT_TYPE_OF_ALARM_descriptor(), name, value);
}
enum REQUEST_TYPE_OF_ALARM_TYPE {
  ALARM_TYPE_GET_ALL = 1
};
bool REQUEST_TYPE_OF_ALARM_TYPE_IsValid(int value);
const REQUEST_TYPE_OF_ALARM_TYPE REQUEST_TYPE_OF_ALARM_TYPE_MIN = ALARM_TYPE_GET_ALL;
const REQUEST_TYPE_OF_ALARM_TYPE REQUEST_TYPE_OF_ALARM_TYPE_MAX = ALARM_TYPE_GET_ALL;
const int REQUEST_TYPE_OF_ALARM_TYPE_ARRAYSIZE = REQUEST_TYPE_OF_ALARM_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* REQUEST_TYPE_OF_ALARM_TYPE_descriptor();
inline const ::std::string& REQUEST_TYPE_OF_ALARM_TYPE_Name(REQUEST_TYPE_OF_ALARM_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    REQUEST_TYPE_OF_ALARM_TYPE_descriptor(), value);
}
inline bool REQUEST_TYPE_OF_ALARM_TYPE_Parse(
    const ::std::string& name, REQUEST_TYPE_OF_ALARM_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<REQUEST_TYPE_OF_ALARM_TYPE>(
    REQUEST_TYPE_OF_ALARM_TYPE_descriptor(), name, value);
}
enum RESULT_TYPE_OF_ALARM_TYPE {
  ALARM_TYPE_RESULT_IS_OK = 1,
  ALARM_TYPE_RESULT_IS_ERROR = 2
};
bool RESULT_TYPE_OF_ALARM_TYPE_IsValid(int value);
const RESULT_TYPE_OF_ALARM_TYPE RESULT_TYPE_OF_ALARM_TYPE_MIN = ALARM_TYPE_RESULT_IS_OK;
const RESULT_TYPE_OF_ALARM_TYPE RESULT_TYPE_OF_ALARM_TYPE_MAX = ALARM_TYPE_RESULT_IS_ERROR;
const int RESULT_TYPE_OF_ALARM_TYPE_ARRAYSIZE = RESULT_TYPE_OF_ALARM_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_ALARM_TYPE_descriptor();
inline const ::std::string& RESULT_TYPE_OF_ALARM_TYPE_Name(RESULT_TYPE_OF_ALARM_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    RESULT_TYPE_OF_ALARM_TYPE_descriptor(), value);
}
inline bool RESULT_TYPE_OF_ALARM_TYPE_Parse(
    const ::std::string& name, RESULT_TYPE_OF_ALARM_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RESULT_TYPE_OF_ALARM_TYPE>(
    RESULT_TYPE_OF_ALARM_TYPE_descriptor(), name, value);
}
enum REQUEST_TYPE_OF_ACTION_TYPE {
  ACTION_TYPE_GET_ALL = 1
};
bool REQUEST_TYPE_OF_ACTION_TYPE_IsValid(int value);
const REQUEST_TYPE_OF_ACTION_TYPE REQUEST_TYPE_OF_ACTION_TYPE_MIN = ACTION_TYPE_GET_ALL;
const REQUEST_TYPE_OF_ACTION_TYPE REQUEST_TYPE_OF_ACTION_TYPE_MAX = ACTION_TYPE_GET_ALL;
const int REQUEST_TYPE_OF_ACTION_TYPE_ARRAYSIZE = REQUEST_TYPE_OF_ACTION_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* REQUEST_TYPE_OF_ACTION_TYPE_descriptor();
inline const ::std::string& REQUEST_TYPE_OF_ACTION_TYPE_Name(REQUEST_TYPE_OF_ACTION_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    REQUEST_TYPE_OF_ACTION_TYPE_descriptor(), value);
}
inline bool REQUEST_TYPE_OF_ACTION_TYPE_Parse(
    const ::std::string& name, REQUEST_TYPE_OF_ACTION_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<REQUEST_TYPE_OF_ACTION_TYPE>(
    REQUEST_TYPE_OF_ACTION_TYPE_descriptor(), name, value);
}
enum RESULT_TYPE_OF_ACTION_TYPE {
  ACTION_TYPE_RESULT_IS_OK = 1,
  ACTION_TYPE_RESULT_IS_ERROR = 2
};
bool RESULT_TYPE_OF_ACTION_TYPE_IsValid(int value);
const RESULT_TYPE_OF_ACTION_TYPE RESULT_TYPE_OF_ACTION_TYPE_MIN = ACTION_TYPE_RESULT_IS_OK;
const RESULT_TYPE_OF_ACTION_TYPE RESULT_TYPE_OF_ACTION_TYPE_MAX = ACTION_TYPE_RESULT_IS_ERROR;
const int RESULT_TYPE_OF_ACTION_TYPE_ARRAYSIZE = RESULT_TYPE_OF_ACTION_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_ACTION_TYPE_descriptor();
inline const ::std::string& RESULT_TYPE_OF_ACTION_TYPE_Name(RESULT_TYPE_OF_ACTION_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    RESULT_TYPE_OF_ACTION_TYPE_descriptor(), value);
}
inline bool RESULT_TYPE_OF_ACTION_TYPE_Parse(
    const ::std::string& name, RESULT_TYPE_OF_ACTION_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RESULT_TYPE_OF_ACTION_TYPE>(
    RESULT_TYPE_OF_ACTION_TYPE_descriptor(), name, value);
}
enum FLAG_TYPE_OF_ALARM_DATA {
  ALARM_DATA_ALARM_OCCURS = 1,
  ALARM_DATA_ALARM_CANCEL = 2
};
bool FLAG_TYPE_OF_ALARM_DATA_IsValid(int value);
const FLAG_TYPE_OF_ALARM_DATA FLAG_TYPE_OF_ALARM_DATA_MIN = ALARM_DATA_ALARM_OCCURS;
const FLAG_TYPE_OF_ALARM_DATA FLAG_TYPE_OF_ALARM_DATA_MAX = ALARM_DATA_ALARM_CANCEL;
const int FLAG_TYPE_OF_ALARM_DATA_ARRAYSIZE = FLAG_TYPE_OF_ALARM_DATA_MAX + 1;

const ::google::protobuf::EnumDescriptor* FLAG_TYPE_OF_ALARM_DATA_descriptor();
inline const ::std::string& FLAG_TYPE_OF_ALARM_DATA_Name(FLAG_TYPE_OF_ALARM_DATA value) {
  return ::google::protobuf::internal::NameOfEnum(
    FLAG_TYPE_OF_ALARM_DATA_descriptor(), value);
}
inline bool FLAG_TYPE_OF_ALARM_DATA_Parse(
    const ::std::string& name, FLAG_TYPE_OF_ALARM_DATA* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FLAG_TYPE_OF_ALARM_DATA>(
    FLAG_TYPE_OF_ALARM_DATA_descriptor(), name, value);
}
enum USING_STAT_OF_ALARM_PLAN {
  ALARM_PLAN_IS_START = 1,
  ALARM_PLAN_IS_STOP = 0
};
bool USING_STAT_OF_ALARM_PLAN_IsValid(int value);
const USING_STAT_OF_ALARM_PLAN USING_STAT_OF_ALARM_PLAN_MIN = ALARM_PLAN_IS_STOP;
const USING_STAT_OF_ALARM_PLAN USING_STAT_OF_ALARM_PLAN_MAX = ALARM_PLAN_IS_START;
const int USING_STAT_OF_ALARM_PLAN_ARRAYSIZE = USING_STAT_OF_ALARM_PLAN_MAX + 1;

const ::google::protobuf::EnumDescriptor* USING_STAT_OF_ALARM_PLAN_descriptor();
inline const ::std::string& USING_STAT_OF_ALARM_PLAN_Name(USING_STAT_OF_ALARM_PLAN value) {
  return ::google::protobuf::internal::NameOfEnum(
    USING_STAT_OF_ALARM_PLAN_descriptor(), value);
}
inline bool USING_STAT_OF_ALARM_PLAN_Parse(
    const ::std::string& name, USING_STAT_OF_ALARM_PLAN* value) {
  return ::google::protobuf::internal::ParseNamedEnum<USING_STAT_OF_ALARM_PLAN>(
    USING_STAT_OF_ALARM_PLAN_descriptor(), name, value);
}
enum USER_TYPE_OF_ALARM_PLAN {
  ALARM_PLAN_WEST_IN_WEB = 1,
  ALARM_PLAN_WEST_IN_CS_CLIENT = 2
};
bool USER_TYPE_OF_ALARM_PLAN_IsValid(int value);
const USER_TYPE_OF_ALARM_PLAN USER_TYPE_OF_ALARM_PLAN_MIN = ALARM_PLAN_WEST_IN_WEB;
const USER_TYPE_OF_ALARM_PLAN USER_TYPE_OF_ALARM_PLAN_MAX = ALARM_PLAN_WEST_IN_CS_CLIENT;
const int USER_TYPE_OF_ALARM_PLAN_ARRAYSIZE = USER_TYPE_OF_ALARM_PLAN_MAX + 1;

const ::google::protobuf::EnumDescriptor* USER_TYPE_OF_ALARM_PLAN_descriptor();
inline const ::std::string& USER_TYPE_OF_ALARM_PLAN_Name(USER_TYPE_OF_ALARM_PLAN value) {
  return ::google::protobuf::internal::NameOfEnum(
    USER_TYPE_OF_ALARM_PLAN_descriptor(), value);
}
inline bool USER_TYPE_OF_ALARM_PLAN_Parse(
    const ::std::string& name, USER_TYPE_OF_ALARM_PLAN* value) {
  return ::google::protobuf::internal::ParseNamedEnum<USER_TYPE_OF_ALARM_PLAN>(
    USER_TYPE_OF_ALARM_PLAN_descriptor(), name, value);
}
enum RESULT_TYPE_OF_ALARM_PLAN {
  ALARM_PLAN_IS_CONFIG_OK = 1,
  ALARM_PLAN_IS_CONFIG_ERROR = 2
};
bool RESULT_TYPE_OF_ALARM_PLAN_IsValid(int value);
const RESULT_TYPE_OF_ALARM_PLAN RESULT_TYPE_OF_ALARM_PLAN_MIN = ALARM_PLAN_IS_CONFIG_OK;
const RESULT_TYPE_OF_ALARM_PLAN RESULT_TYPE_OF_ALARM_PLAN_MAX = ALARM_PLAN_IS_CONFIG_ERROR;
const int RESULT_TYPE_OF_ALARM_PLAN_ARRAYSIZE = RESULT_TYPE_OF_ALARM_PLAN_MAX + 1;

const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_ALARM_PLAN_descriptor();
inline const ::std::string& RESULT_TYPE_OF_ALARM_PLAN_Name(RESULT_TYPE_OF_ALARM_PLAN value) {
  return ::google::protobuf::internal::NameOfEnum(
    RESULT_TYPE_OF_ALARM_PLAN_descriptor(), value);
}
inline bool RESULT_TYPE_OF_ALARM_PLAN_Parse(
    const ::std::string& name, RESULT_TYPE_OF_ALARM_PLAN* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RESULT_TYPE_OF_ALARM_PLAN>(
    RESULT_TYPE_OF_ALARM_PLAN_descriptor(), name, value);
}
enum REQUEST_TYPE_OF_ALARM_PLAN {
  ALARM_PLAN_GET_ALL = 1,
  ALARM_PLAN_ADD = 2,
  ALARM_PLAN_UPDATE = 3,
  ALARM_PLAN_DELETE = 4,
  ALARM_PLAN_GET_BY_IDS = 6
};
bool REQUEST_TYPE_OF_ALARM_PLAN_IsValid(int value);
const REQUEST_TYPE_OF_ALARM_PLAN REQUEST_TYPE_OF_ALARM_PLAN_MIN = ALARM_PLAN_GET_ALL;
const REQUEST_TYPE_OF_ALARM_PLAN REQUEST_TYPE_OF_ALARM_PLAN_MAX = ALARM_PLAN_GET_BY_IDS;
const int REQUEST_TYPE_OF_ALARM_PLAN_ARRAYSIZE = REQUEST_TYPE_OF_ALARM_PLAN_MAX + 1;

const ::google::protobuf::EnumDescriptor* REQUEST_TYPE_OF_ALARM_PLAN_descriptor();
inline const ::std::string& REQUEST_TYPE_OF_ALARM_PLAN_Name(REQUEST_TYPE_OF_ALARM_PLAN value) {
  return ::google::protobuf::internal::NameOfEnum(
    REQUEST_TYPE_OF_ALARM_PLAN_descriptor(), value);
}
inline bool REQUEST_TYPE_OF_ALARM_PLAN_Parse(
    const ::std::string& name, REQUEST_TYPE_OF_ALARM_PLAN* value) {
  return ::google::protobuf::internal::ParseNamedEnum<REQUEST_TYPE_OF_ALARM_PLAN>(
    REQUEST_TYPE_OF_ALARM_PLAN_descriptor(), name, value);
}
enum RESULT_TYPE_OF_ALARM_GET_DEV {
  ALARM_GET_DEV_IS_OK = 1,
  ALARM_GET_DEV_IS_ERROR = 2
};
bool RESULT_TYPE_OF_ALARM_GET_DEV_IsValid(int value);
const RESULT_TYPE_OF_ALARM_GET_DEV RESULT_TYPE_OF_ALARM_GET_DEV_MIN = ALARM_GET_DEV_IS_OK;
const RESULT_TYPE_OF_ALARM_GET_DEV RESULT_TYPE_OF_ALARM_GET_DEV_MAX = ALARM_GET_DEV_IS_ERROR;
const int RESULT_TYPE_OF_ALARM_GET_DEV_ARRAYSIZE = RESULT_TYPE_OF_ALARM_GET_DEV_MAX + 1;

const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_ALARM_GET_DEV_descriptor();
inline const ::std::string& RESULT_TYPE_OF_ALARM_GET_DEV_Name(RESULT_TYPE_OF_ALARM_GET_DEV value) {
  return ::google::protobuf::internal::NameOfEnum(
    RESULT_TYPE_OF_ALARM_GET_DEV_descriptor(), value);
}
inline bool RESULT_TYPE_OF_ALARM_GET_DEV_Parse(
    const ::std::string& name, RESULT_TYPE_OF_ALARM_GET_DEV* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RESULT_TYPE_OF_ALARM_GET_DEV>(
    RESULT_TYPE_OF_ALARM_GET_DEV_descriptor(), name, value);
}
enum RESULT_TYPE_OF_GET_SRCSOURCE {
  ALARM_GET_SRCSOURCE_IS_OK = 1,
  ALARM_GET_SRCSOURCE_IS_ERROR = 2,
  ALARM_GET_SRCSOURCE_IS_NULL = 3
};
bool RESULT_TYPE_OF_GET_SRCSOURCE_IsValid(int value);
const RESULT_TYPE_OF_GET_SRCSOURCE RESULT_TYPE_OF_GET_SRCSOURCE_MIN = ALARM_GET_SRCSOURCE_IS_OK;
const RESULT_TYPE_OF_GET_SRCSOURCE RESULT_TYPE_OF_GET_SRCSOURCE_MAX = ALARM_GET_SRCSOURCE_IS_NULL;
const int RESULT_TYPE_OF_GET_SRCSOURCE_ARRAYSIZE = RESULT_TYPE_OF_GET_SRCSOURCE_MAX + 1;

const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_GET_SRCSOURCE_descriptor();
inline const ::std::string& RESULT_TYPE_OF_GET_SRCSOURCE_Name(RESULT_TYPE_OF_GET_SRCSOURCE value) {
  return ::google::protobuf::internal::NameOfEnum(
    RESULT_TYPE_OF_GET_SRCSOURCE_descriptor(), value);
}
inline bool RESULT_TYPE_OF_GET_SRCSOURCE_Parse(
    const ::std::string& name, RESULT_TYPE_OF_GET_SRCSOURCE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RESULT_TYPE_OF_GET_SRCSOURCE>(
    RESULT_TYPE_OF_GET_SRCSOURCE_descriptor(), name, value);
}
enum REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE {
  ALARM_SRCSOURCE_ALL = 1,
  ALARM_SRCSOURCE_ADD = 2,
  ALARM_SRCSOURCE_DELETE = 3,
  ALARM_SRCSOURCE_GET_BY_BOXCODE = 4
};
bool REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_IsValid(int value);
const REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_MIN = ALARM_SRCSOURCE_ALL;
const REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_MAX = ALARM_SRCSOURCE_GET_BY_BOXCODE;
const int REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_ARRAYSIZE = REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_MAX + 1;

const ::google::protobuf::EnumDescriptor* REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_descriptor();
inline const ::std::string& REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_Name(REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE value) {
  return ::google::protobuf::internal::NameOfEnum(
    REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_descriptor(), value);
}
inline bool REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_Parse(
    const ::std::string& name, REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE>(
    REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_descriptor(), name, value);
}
enum REQUEST_TYPE_OF_ALARM_RECORD {
  ALARM_RECORD_REQUEST_ALL = 1
};
bool REQUEST_TYPE_OF_ALARM_RECORD_IsValid(int value);
const REQUEST_TYPE_OF_ALARM_RECORD REQUEST_TYPE_OF_ALARM_RECORD_MIN = ALARM_RECORD_REQUEST_ALL;
const REQUEST_TYPE_OF_ALARM_RECORD REQUEST_TYPE_OF_ALARM_RECORD_MAX = ALARM_RECORD_REQUEST_ALL;
const int REQUEST_TYPE_OF_ALARM_RECORD_ARRAYSIZE = REQUEST_TYPE_OF_ALARM_RECORD_MAX + 1;

const ::google::protobuf::EnumDescriptor* REQUEST_TYPE_OF_ALARM_RECORD_descriptor();
inline const ::std::string& REQUEST_TYPE_OF_ALARM_RECORD_Name(REQUEST_TYPE_OF_ALARM_RECORD value) {
  return ::google::protobuf::internal::NameOfEnum(
    REQUEST_TYPE_OF_ALARM_RECORD_descriptor(), value);
}
inline bool REQUEST_TYPE_OF_ALARM_RECORD_Parse(
    const ::std::string& name, REQUEST_TYPE_OF_ALARM_RECORD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<REQUEST_TYPE_OF_ALARM_RECORD>(
    REQUEST_TYPE_OF_ALARM_RECORD_descriptor(), name, value);
}
// ===================================================================

class ActionLinkData : public ::google::protobuf::Message {
 public:
  ActionLinkData();
  virtual ~ActionLinkData();

  ActionLinkData(const ActionLinkData& from);

  inline ActionLinkData& operator=(const ActionLinkData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionLinkData& default_instance();

  void Swap(ActionLinkData* other);

  // implements Message ----------------------------------------------

  ActionLinkData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionLinkData& from);
  void MergeFrom(const ActionLinkData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.arges.file.proto.SoundLinkData sounds = 1;
  inline int sounds_size() const;
  inline void clear_sounds();
  static const int kSoundsFieldNumber = 1;
  inline const ::com::arges::file::proto::SoundLinkData& sounds(int index) const;
  inline ::com::arges::file::proto::SoundLinkData* mutable_sounds(int index);
  inline ::com::arges::file::proto::SoundLinkData* add_sounds();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::SoundLinkData >&
      sounds() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::SoundLinkData >*
      mutable_sounds();

  // repeated .com.arges.file.proto.LightLinkData lights = 2;
  inline int lights_size() const;
  inline void clear_lights();
  static const int kLightsFieldNumber = 2;
  inline const ::com::arges::file::proto::LightLinkData& lights(int index) const;
  inline ::com::arges::file::proto::LightLinkData* mutable_lights(int index);
  inline ::com::arges::file::proto::LightLinkData* add_lights();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::LightLinkData >&
      lights() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::LightLinkData >*
      mutable_lights();

  // repeated .com.arges.file.proto.VideoLinkData videos = 3;
  inline int videos_size() const;
  inline void clear_videos();
  static const int kVideosFieldNumber = 3;
  inline const ::com::arges::file::proto::VideoLinkData& videos(int index) const;
  inline ::com::arges::file::proto::VideoLinkData* mutable_videos(int index);
  inline ::com::arges::file::proto::VideoLinkData* add_videos();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::VideoLinkData >&
      videos() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::VideoLinkData >*
      mutable_videos();

  // repeated .com.arges.file.proto.RecordLinkData records = 4;
  inline int records_size() const;
  inline void clear_records();
  static const int kRecordsFieldNumber = 4;
  inline const ::com::arges::file::proto::RecordLinkData& records(int index) const;
  inline ::com::arges::file::proto::RecordLinkData* mutable_records(int index);
  inline ::com::arges::file::proto::RecordLinkData* add_records();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::RecordLinkData >&
      records() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::RecordLinkData >*
      mutable_records();

  // repeated .com.arges.file.proto.SmsLinkData sms = 5;
  inline int sms_size() const;
  inline void clear_sms();
  static const int kSmsFieldNumber = 5;
  inline const ::com::arges::file::proto::SmsLinkData& sms(int index) const;
  inline ::com::arges::file::proto::SmsLinkData* mutable_sms(int index);
  inline ::com::arges::file::proto::SmsLinkData* add_sms();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::SmsLinkData >&
      sms() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::SmsLinkData >*
      mutable_sms();

  // repeated .com.arges.file.proto.TvwallLinkData tvwalls = 6;
  inline int tvwalls_size() const;
  inline void clear_tvwalls();
  static const int kTvwallsFieldNumber = 6;
  inline const ::com::arges::file::proto::TvwallLinkData& tvwalls(int index) const;
  inline ::com::arges::file::proto::TvwallLinkData* mutable_tvwalls(int index);
  inline ::com::arges::file::proto::TvwallLinkData* add_tvwalls();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::TvwallLinkData >&
      tvwalls() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::TvwallLinkData >*
      mutable_tvwalls();

  // repeated .com.arges.file.proto.EmailLinkData emails = 7;
  inline int emails_size() const;
  inline void clear_emails();
  static const int kEmailsFieldNumber = 7;
  inline const ::com::arges::file::proto::EmailLinkData& emails(int index) const;
  inline ::com::arges::file::proto::EmailLinkData* mutable_emails(int index);
  inline ::com::arges::file::proto::EmailLinkData* add_emails();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::EmailLinkData >&
      emails() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::EmailLinkData >*
      mutable_emails();

  // repeated .com.arges.file.proto.CapitureLinkData cpts = 8;
  inline int cpts_size() const;
  inline void clear_cpts();
  static const int kCptsFieldNumber = 8;
  inline const ::com::arges::file::proto::CapitureLinkData& cpts(int index) const;
  inline ::com::arges::file::proto::CapitureLinkData* mutable_cpts(int index);
  inline ::com::arges::file::proto::CapitureLinkData* add_cpts();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::CapitureLinkData >&
      cpts() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::CapitureLinkData >*
      mutable_cpts();

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.ActionLinkData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::SoundLinkData > sounds_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::LightLinkData > lights_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::VideoLinkData > videos_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::RecordLinkData > records_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::SmsLinkData > sms_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::TvwallLinkData > tvwalls_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::EmailLinkData > emails_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::CapitureLinkData > cpts_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static ActionLinkData* default_instance_;
};
// -------------------------------------------------------------------

class AlarmSrcDevInfo : public ::google::protobuf::Message {
 public:
  AlarmSrcDevInfo();
  virtual ~AlarmSrcDevInfo();

  AlarmSrcDevInfo(const AlarmSrcDevInfo& from);

  inline AlarmSrcDevInfo& operator=(const AlarmSrcDevInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmSrcDevInfo& default_instance();

  void Swap(AlarmSrcDevInfo* other);

  // implements Message ----------------------------------------------

  AlarmSrcDevInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmSrcDevInfo& from);
  void MergeFrom(const AlarmSrcDevInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ruleId = 1 [default = -1];
  inline bool has_ruleid() const;
  inline void clear_ruleid();
  static const int kRuleIdFieldNumber = 1;
  inline ::google::protobuf::int64 ruleid() const;
  inline void set_ruleid(::google::protobuf::int64 value);

  // optional string code = 2 [default = ""];
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  inline void set_allocated_code(::std::string* code);

  // optional int32 nodeType = 3 [default = -1];
  inline bool has_nodetype() const;
  inline void clear_nodetype();
  static const int kNodeTypeFieldNumber = 3;
  inline ::google::protobuf::int32 nodetype() const;
  inline void set_nodetype(::google::protobuf::int32 value);

  // optional string cascadeDevDomain = 4 [default = ""];
  inline bool has_cascadedevdomain() const;
  inline void clear_cascadedevdomain();
  static const int kCascadeDevDomainFieldNumber = 4;
  inline const ::std::string& cascadedevdomain() const;
  inline void set_cascadedevdomain(const ::std::string& value);
  inline void set_cascadedevdomain(const char* value);
  inline void set_cascadedevdomain(const char* value, size_t size);
  inline ::std::string* mutable_cascadedevdomain();
  inline ::std::string* release_cascadedevdomain();
  inline void set_allocated_cascadedevdomain(::std::string* cascadedevdomain);

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmSrcDevInfo)
 private:
  inline void set_has_ruleid();
  inline void clear_has_ruleid();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_nodetype();
  inline void clear_has_nodetype();
  inline void set_has_cascadedevdomain();
  inline void clear_has_cascadedevdomain();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 ruleid_;
  ::std::string* code_;
  ::std::string* cascadedevdomain_;
  ::google::protobuf::int32 nodetype_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmSrcDevInfo* default_instance_;
};
// -------------------------------------------------------------------

class AlarmTypeData : public ::google::protobuf::Message {
 public:
  AlarmTypeData();
  virtual ~AlarmTypeData();

  AlarmTypeData(const AlarmTypeData& from);

  inline AlarmTypeData& operator=(const AlarmTypeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmTypeData& default_instance();

  void Swap(AlarmTypeData* other);

  // implements Message ----------------------------------------------

  AlarmTypeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmTypeData& from);
  void MergeFrom(const AlarmTypeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 type = 2 [default = -1];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional bytes describe = 3 [default = ""];
  inline bool has_describe() const;
  inline void clear_describe();
  static const int kDescribeFieldNumber = 3;
  inline const ::std::string& describe() const;
  inline void set_describe(const ::std::string& value);
  inline void set_describe(const char* value);
  inline void set_describe(const void* value, size_t size);
  inline ::std::string* mutable_describe();
  inline ::std::string* release_describe();
  inline void set_allocated_describe(::std::string* describe);

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmTypeData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_describe();
  inline void clear_has_describe();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::std::string* describe_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmTypeData* default_instance_;
};
// -------------------------------------------------------------------

class AlarmTypeMassage : public ::google::protobuf::Message {
 public:
  AlarmTypeMassage();
  virtual ~AlarmTypeMassage();

  AlarmTypeMassage(const AlarmTypeMassage& from);

  inline AlarmTypeMassage& operator=(const AlarmTypeMassage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmTypeMassage& default_instance();

  void Swap(AlarmTypeMassage* other);

  // implements Message ----------------------------------------------

  AlarmTypeMassage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmTypeMassage& from);
  void MergeFrom(const AlarmTypeMassage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 requestType = 1 [default = -1];
  inline bool has_requesttype() const;
  inline void clear_requesttype();
  static const int kRequestTypeFieldNumber = 1;
  inline ::google::protobuf::int32 requesttype() const;
  inline void set_requesttype(::google::protobuf::int32 value);

  // optional int32 result = 2 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional bytes resultDescribe = 3 [default = ""];
  inline bool has_resultdescribe() const;
  inline void clear_resultdescribe();
  static const int kResultDescribeFieldNumber = 3;
  inline const ::std::string& resultdescribe() const;
  inline void set_resultdescribe(const ::std::string& value);
  inline void set_resultdescribe(const char* value);
  inline void set_resultdescribe(const void* value, size_t size);
  inline ::std::string* mutable_resultdescribe();
  inline ::std::string* release_resultdescribe();
  inline void set_allocated_resultdescribe(::std::string* resultdescribe);

  // repeated .com.arges.file.proto.AlarmTypeData alarmTypes = 4;
  inline int alarmtypes_size() const;
  inline void clear_alarmtypes();
  static const int kAlarmTypesFieldNumber = 4;
  inline const ::com::arges::file::proto::AlarmTypeData& alarmtypes(int index) const;
  inline ::com::arges::file::proto::AlarmTypeData* mutable_alarmtypes(int index);
  inline ::com::arges::file::proto::AlarmTypeData* add_alarmtypes();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmTypeData >&
      alarmtypes() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmTypeData >*
      mutable_alarmtypes();

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmTypeMassage)
 private:
  inline void set_has_requesttype();
  inline void clear_has_requesttype();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_resultdescribe();
  inline void clear_has_resultdescribe();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 requesttype_;
  ::google::protobuf::int32 result_;
  ::std::string* resultdescribe_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmTypeData > alarmtypes_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmTypeMassage* default_instance_;
};
// -------------------------------------------------------------------

class ActionTypeData : public ::google::protobuf::Message {
 public:
  ActionTypeData();
  virtual ~ActionTypeData();

  ActionTypeData(const ActionTypeData& from);

  inline ActionTypeData& operator=(const ActionTypeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionTypeData& default_instance();

  void Swap(ActionTypeData* other);

  // implements Message ----------------------------------------------

  ActionTypeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionTypeData& from);
  void MergeFrom(const ActionTypeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int32 type = 2 [default = -1];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional bytes describe = 3 [default = ""];
  inline bool has_describe() const;
  inline void clear_describe();
  static const int kDescribeFieldNumber = 3;
  inline const ::std::string& describe() const;
  inline void set_describe(const ::std::string& value);
  inline void set_describe(const char* value);
  inline void set_describe(const void* value, size_t size);
  inline ::std::string* mutable_describe();
  inline ::std::string* release_describe();
  inline void set_allocated_describe(::std::string* describe);

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.ActionTypeData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_describe();
  inline void clear_has_describe();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::std::string* describe_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static ActionTypeData* default_instance_;
};
// -------------------------------------------------------------------

class ActionTypeMassage : public ::google::protobuf::Message {
 public:
  ActionTypeMassage();
  virtual ~ActionTypeMassage();

  ActionTypeMassage(const ActionTypeMassage& from);

  inline ActionTypeMassage& operator=(const ActionTypeMassage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionTypeMassage& default_instance();

  void Swap(ActionTypeMassage* other);

  // implements Message ----------------------------------------------

  ActionTypeMassage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionTypeMassage& from);
  void MergeFrom(const ActionTypeMassage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 requestType = 1 [default = -1];
  inline bool has_requesttype() const;
  inline void clear_requesttype();
  static const int kRequestTypeFieldNumber = 1;
  inline ::google::protobuf::int32 requesttype() const;
  inline void set_requesttype(::google::protobuf::int32 value);

  // optional int32 result = 2 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional bytes resultDescribe = 3 [default = ""];
  inline bool has_resultdescribe() const;
  inline void clear_resultdescribe();
  static const int kResultDescribeFieldNumber = 3;
  inline const ::std::string& resultdescribe() const;
  inline void set_resultdescribe(const ::std::string& value);
  inline void set_resultdescribe(const char* value);
  inline void set_resultdescribe(const void* value, size_t size);
  inline ::std::string* mutable_resultdescribe();
  inline ::std::string* release_resultdescribe();
  inline void set_allocated_resultdescribe(::std::string* resultdescribe);

  // repeated .com.arges.file.proto.ActionTypeData actionsTypes = 4;
  inline int actionstypes_size() const;
  inline void clear_actionstypes();
  static const int kActionsTypesFieldNumber = 4;
  inline const ::com::arges::file::proto::ActionTypeData& actionstypes(int index) const;
  inline ::com::arges::file::proto::ActionTypeData* mutable_actionstypes(int index);
  inline ::com::arges::file::proto::ActionTypeData* add_actionstypes();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::ActionTypeData >&
      actionstypes() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::ActionTypeData >*
      mutable_actionstypes();

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.ActionTypeMassage)
 private:
  inline void set_has_requesttype();
  inline void clear_has_requesttype();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_resultdescribe();
  inline void clear_has_resultdescribe();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 requesttype_;
  ::google::protobuf::int32 result_;
  ::std::string* resultdescribe_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::ActionTypeData > actionstypes_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static ActionTypeMassage* default_instance_;
};
// -------------------------------------------------------------------

class AlarmData_RaisuDustAlarm : public ::google::protobuf::Message {
 public:
  AlarmData_RaisuDustAlarm();
  virtual ~AlarmData_RaisuDustAlarm();

  AlarmData_RaisuDustAlarm(const AlarmData_RaisuDustAlarm& from);

  inline AlarmData_RaisuDustAlarm& operator=(const AlarmData_RaisuDustAlarm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmData_RaisuDustAlarm& default_instance();

  void Swap(AlarmData_RaisuDustAlarm* other);

  // implements Message ----------------------------------------------

  AlarmData_RaisuDustAlarm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmData_RaisuDustAlarm& from);
  void MergeFrom(const AlarmData_RaisuDustAlarm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 alarmCap = 1 [default = -1];
  inline bool has_alarmcap() const;
  inline void clear_alarmcap();
  static const int kAlarmCapFieldNumber = 1;
  inline ::google::protobuf::int32 alarmcap() const;
  inline void set_alarmcap(::google::protobuf::int32 value);

  // optional float alarmNum = 2 [default = -1];
  inline bool has_alarmnum() const;
  inline void clear_alarmnum();
  static const int kAlarmNumFieldNumber = 2;
  inline float alarmnum() const;
  inline void set_alarmnum(float value);

  // optional int32 alarmType = 3 [default = -1];
  inline bool has_alarmtype() const;
  inline void clear_alarmtype();
  static const int kAlarmTypeFieldNumber = 3;
  inline ::google::protobuf::int32 alarmtype() const;
  inline void set_alarmtype(::google::protobuf::int32 value);

  // optional float standardNum = 4 [default = -1];
  inline bool has_standardnum() const;
  inline void clear_standardnum();
  static const int kStandardNumFieldNumber = 4;
  inline float standardnum() const;
  inline void set_standardnum(float value);

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmData.RaisuDustAlarm)
 private:
  inline void set_has_alarmcap();
  inline void clear_has_alarmcap();
  inline void set_has_alarmnum();
  inline void clear_has_alarmnum();
  inline void set_has_alarmtype();
  inline void clear_has_alarmtype();
  inline void set_has_standardnum();
  inline void clear_has_standardnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 alarmcap_;
  float alarmnum_;
  ::google::protobuf::int32 alarmtype_;
  float standardnum_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmData_RaisuDustAlarm* default_instance_;
};
// -------------------------------------------------------------------

class AlarmData : public ::google::protobuf::Message {
 public:
  AlarmData();
  virtual ~AlarmData();

  AlarmData(const AlarmData& from);

  inline AlarmData& operator=(const AlarmData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmData& default_instance();

  void Swap(AlarmData* other);

  // implements Message ----------------------------------------------

  AlarmData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmData& from);
  void MergeFrom(const AlarmData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AlarmData_RaisuDustAlarm RaisuDustAlarm;

  // accessors -------------------------------------------------------

  // optional string srcDevCode = 1 [default = ""];
  inline bool has_srcdevcode() const;
  inline void clear_srcdevcode();
  static const int kSrcDevCodeFieldNumber = 1;
  inline const ::std::string& srcdevcode() const;
  inline void set_srcdevcode(const ::std::string& value);
  inline void set_srcdevcode(const char* value);
  inline void set_srcdevcode(const char* value, size_t size);
  inline ::std::string* mutable_srcdevcode();
  inline ::std::string* release_srcdevcode();
  inline void set_allocated_srcdevcode(::std::string* srcdevcode);

  // optional int32 srcDevChannelSeq = 2 [default = -1];
  inline bool has_srcdevchannelseq() const;
  inline void clear_srcdevchannelseq();
  static const int kSrcDevChannelSeqFieldNumber = 2;
  inline ::google::protobuf::int32 srcdevchannelseq() const;
  inline void set_srcdevchannelseq(::google::protobuf::int32 value);

  // optional int32 alarmType = 3;
  inline bool has_alarmtype() const;
  inline void clear_alarmtype();
  static const int kAlarmTypeFieldNumber = 3;
  inline ::google::protobuf::int32 alarmtype() const;
  inline void set_alarmtype(::google::protobuf::int32 value);

  // optional string alarmName = 4 [default = ""];
  inline bool has_alarmname() const;
  inline void clear_alarmname();
  static const int kAlarmNameFieldNumber = 4;
  inline const ::std::string& alarmname() const;
  inline void set_alarmname(const ::std::string& value);
  inline void set_alarmname(const char* value);
  inline void set_alarmname(const char* value, size_t size);
  inline ::std::string* mutable_alarmname();
  inline ::std::string* release_alarmname();
  inline void set_allocated_alarmname(::std::string* alarmname);

  // optional bytes alarmDescirbe = 5 [default = ""];
  inline bool has_alarmdescirbe() const;
  inline void clear_alarmdescirbe();
  static const int kAlarmDescirbeFieldNumber = 5;
  inline const ::std::string& alarmdescirbe() const;
  inline void set_alarmdescirbe(const ::std::string& value);
  inline void set_alarmdescirbe(const char* value);
  inline void set_alarmdescirbe(const void* value, size_t size);
  inline ::std::string* mutable_alarmdescirbe();
  inline ::std::string* release_alarmdescirbe();
  inline void set_allocated_alarmdescirbe(::std::string* alarmdescirbe);

  // optional .com.arges.file.proto.DeviceInfo currentAlarmDev = 6;
  inline bool has_currentalarmdev() const;
  inline void clear_currentalarmdev();
  static const int kCurrentAlarmDevFieldNumber = 6;
  inline const ::com::arges::file::proto::DeviceInfo& currentalarmdev() const;
  inline ::com::arges::file::proto::DeviceInfo* mutable_currentalarmdev();
  inline ::com::arges::file::proto::DeviceInfo* release_currentalarmdev();
  inline void set_allocated_currentalarmdev(::com::arges::file::proto::DeviceInfo* currentalarmdev);

  // optional .com.arges.file.proto.ActionLinkData action = 7;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 7;
  inline const ::com::arges::file::proto::ActionLinkData& action() const;
  inline ::com::arges::file::proto::ActionLinkData* mutable_action();
  inline ::com::arges::file::proto::ActionLinkData* release_action();
  inline void set_allocated_action(::com::arges::file::proto::ActionLinkData* action);

  // optional int64 alarmTime = 8;
  inline bool has_alarmtime() const;
  inline void clear_alarmtime();
  static const int kAlarmTimeFieldNumber = 8;
  inline ::google::protobuf::int64 alarmtime() const;
  inline void set_alarmtime(::google::protobuf::int64 value);

  // optional bool isAlarmHost = 9;
  inline bool has_isalarmhost() const;
  inline void clear_isalarmhost();
  static const int kIsAlarmHostFieldNumber = 9;
  inline bool isalarmhost() const;
  inline void set_isalarmhost(bool value);

  // optional int32 AlarmFlag = 10;
  inline bool has_alarmflag() const;
  inline void clear_alarmflag();
  static const int kAlarmFlagFieldNumber = 10;
  inline ::google::protobuf::int32 alarmflag() const;
  inline void set_alarmflag(::google::protobuf::int32 value);

  // optional string sn = 11 [default = ""];
  inline bool has_sn() const;
  inline void clear_sn();
  static const int kSnFieldNumber = 11;
  inline const ::std::string& sn() const;
  inline void set_sn(const ::std::string& value);
  inline void set_sn(const char* value);
  inline void set_sn(const char* value, size_t size);
  inline ::std::string* mutable_sn();
  inline ::std::string* release_sn();
  inline void set_allocated_sn(::std::string* sn);

  // repeated .com.arges.file.proto.AlarmData.RaisuDustAlarm raiseAlarms = 12;
  inline int raisealarms_size() const;
  inline void clear_raisealarms();
  static const int kRaiseAlarmsFieldNumber = 12;
  inline const ::com::arges::file::proto::AlarmData_RaisuDustAlarm& raisealarms(int index) const;
  inline ::com::arges::file::proto::AlarmData_RaisuDustAlarm* mutable_raisealarms(int index);
  inline ::com::arges::file::proto::AlarmData_RaisuDustAlarm* add_raisealarms();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmData_RaisuDustAlarm >&
      raisealarms() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmData_RaisuDustAlarm >*
      mutable_raisealarms();

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmData)
 private:
  inline void set_has_srcdevcode();
  inline void clear_has_srcdevcode();
  inline void set_has_srcdevchannelseq();
  inline void clear_has_srcdevchannelseq();
  inline void set_has_alarmtype();
  inline void clear_has_alarmtype();
  inline void set_has_alarmname();
  inline void clear_has_alarmname();
  inline void set_has_alarmdescirbe();
  inline void clear_has_alarmdescirbe();
  inline void set_has_currentalarmdev();
  inline void clear_has_currentalarmdev();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_alarmtime();
  inline void clear_has_alarmtime();
  inline void set_has_isalarmhost();
  inline void clear_has_isalarmhost();
  inline void set_has_alarmflag();
  inline void clear_has_alarmflag();
  inline void set_has_sn();
  inline void clear_has_sn();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* srcdevcode_;
  ::google::protobuf::int32 srcdevchannelseq_;
  ::google::protobuf::int32 alarmtype_;
  ::std::string* alarmname_;
  ::std::string* alarmdescirbe_;
  ::com::arges::file::proto::DeviceInfo* currentalarmdev_;
  ::com::arges::file::proto::ActionLinkData* action_;
  ::google::protobuf::int64 alarmtime_;
  bool isalarmhost_;
  ::google::protobuf::int32 alarmflag_;
  ::std::string* sn_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmData_RaisuDustAlarm > raisealarms_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmData* default_instance_;
};
// -------------------------------------------------------------------

class AlarmMassage : public ::google::protobuf::Message {
 public:
  AlarmMassage();
  virtual ~AlarmMassage();

  AlarmMassage(const AlarmMassage& from);

  inline AlarmMassage& operator=(const AlarmMassage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmMassage& default_instance();

  void Swap(AlarmMassage* other);

  // implements Message ----------------------------------------------

  AlarmMassage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmMassage& from);
  void MergeFrom(const AlarmMassage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional bytes resultDescribe = 2 [default = ""];
  inline bool has_resultdescribe() const;
  inline void clear_resultdescribe();
  static const int kResultDescribeFieldNumber = 2;
  inline const ::std::string& resultdescribe() const;
  inline void set_resultdescribe(const ::std::string& value);
  inline void set_resultdescribe(const char* value);
  inline void set_resultdescribe(const void* value, size_t size);
  inline ::std::string* mutable_resultdescribe();
  inline ::std::string* release_resultdescribe();
  inline void set_allocated_resultdescribe(::std::string* resultdescribe);

  // repeated int64 userId = 3;
  inline int userid_size() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::int64 userid(int index) const;
  inline void set_userid(int index, ::google::protobuf::int64 value);
  inline void add_userid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      userid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_userid();

  // optional .com.arges.file.proto.AlarmData alarm = 4;
  inline bool has_alarm() const;
  inline void clear_alarm();
  static const int kAlarmFieldNumber = 4;
  inline const ::com::arges::file::proto::AlarmData& alarm() const;
  inline ::com::arges::file::proto::AlarmData* mutable_alarm();
  inline ::com::arges::file::proto::AlarmData* release_alarm();
  inline void set_allocated_alarm(::com::arges::file::proto::AlarmData* alarm);

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmMassage)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_resultdescribe();
  inline void clear_has_resultdescribe();
  inline void set_has_alarm();
  inline void clear_has_alarm();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* resultdescribe_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > userid_;
  ::com::arges::file::proto::AlarmData* alarm_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmMassage* default_instance_;
};
// -------------------------------------------------------------------

class AlarmPlanData : public ::google::protobuf::Message {
 public:
  AlarmPlanData();
  virtual ~AlarmPlanData();

  AlarmPlanData(const AlarmPlanData& from);

  inline AlarmPlanData& operator=(const AlarmPlanData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmPlanData& default_instance();

  void Swap(AlarmPlanData* other);

  // implements Message ----------------------------------------------

  AlarmPlanData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmPlanData& from);
  void MergeFrom(const AlarmPlanData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1 [default = ""];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // repeated int64 userId = 2;
  inline int userid_size() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::int64 userid(int index) const;
  inline void set_userid(int index, ::google::protobuf::int64 value);
  inline void add_userid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      userid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_userid();

  // optional int32 userType = 3 [default = -1];
  inline bool has_usertype() const;
  inline void clear_usertype();
  static const int kUserTypeFieldNumber = 3;
  inline ::google::protobuf::int32 usertype() const;
  inline void set_usertype(::google::protobuf::int32 value);

  // optional string name = 4 [default = ""];
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional .com.arges.file.proto.TimeTemplateData timeTemplat = 5;
  inline bool has_timetemplat() const;
  inline void clear_timetemplat();
  static const int kTimeTemplatFieldNumber = 5;
  inline const ::com::arges::file::proto::TimeTemplateData& timetemplat() const;
  inline ::com::arges::file::proto::TimeTemplateData* mutable_timetemplat();
  inline ::com::arges::file::proto::TimeTemplateData* release_timetemplat();
  inline void set_allocated_timetemplat(::com::arges::file::proto::TimeTemplateData* timetemplat);

  // optional int32 state = 6 [default = -1];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 6;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional bytes describe = 7 [default = ""];
  inline bool has_describe() const;
  inline void clear_describe();
  static const int kDescribeFieldNumber = 7;
  inline const ::std::string& describe() const;
  inline void set_describe(const ::std::string& value);
  inline void set_describe(const char* value);
  inline void set_describe(const void* value, size_t size);
  inline ::std::string* mutable_describe();
  inline ::std::string* release_describe();
  inline void set_allocated_describe(::std::string* describe);

  // repeated .com.arges.file.proto.AlarmRuleData alarms = 8;
  inline int alarms_size() const;
  inline void clear_alarms();
  static const int kAlarmsFieldNumber = 8;
  inline const ::com::arges::file::proto::AlarmRuleData& alarms(int index) const;
  inline ::com::arges::file::proto::AlarmRuleData* mutable_alarms(int index);
  inline ::com::arges::file::proto::AlarmRuleData* add_alarms();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRuleData >&
      alarms() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRuleData >*
      mutable_alarms();

  // repeated .com.arges.file.proto.SoundLinkData sounds = 9;
  inline int sounds_size() const;
  inline void clear_sounds();
  static const int kSoundsFieldNumber = 9;
  inline const ::com::arges::file::proto::SoundLinkData& sounds(int index) const;
  inline ::com::arges::file::proto::SoundLinkData* mutable_sounds(int index);
  inline ::com::arges::file::proto::SoundLinkData* add_sounds();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::SoundLinkData >&
      sounds() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::SoundLinkData >*
      mutable_sounds();

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmPlanData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_usertype();
  inline void clear_has_usertype();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_timetemplat();
  inline void clear_has_timetemplat();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_describe();
  inline void clear_has_describe();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > userid_;
  ::std::string* name_;
  ::google::protobuf::int32 usertype_;
  ::google::protobuf::int32 state_;
  ::com::arges::file::proto::TimeTemplateData* timetemplat_;
  ::std::string* describe_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRuleData > alarms_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::SoundLinkData > sounds_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmPlanData* default_instance_;
};
// -------------------------------------------------------------------

class AlarmRuleData : public ::google::protobuf::Message {
 public:
  AlarmRuleData();
  virtual ~AlarmRuleData();

  AlarmRuleData(const AlarmRuleData& from);

  inline AlarmRuleData& operator=(const AlarmRuleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmRuleData& default_instance();

  void Swap(AlarmRuleData* other);

  // implements Message ----------------------------------------------

  AlarmRuleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmRuleData& from);
  void MergeFrom(const AlarmRuleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ruleId = 1 [default = -1];
  inline bool has_ruleid() const;
  inline void clear_ruleid();
  static const int kRuleIdFieldNumber = 1;
  inline ::google::protobuf::int64 ruleid() const;
  inline void set_ruleid(::google::protobuf::int64 value);

  // optional int64 planId = 2 [default = -1];
  inline bool has_planid() const;
  inline void clear_planid();
  static const int kPlanIdFieldNumber = 2;
  inline ::google::protobuf::int64 planid() const;
  inline void set_planid(::google::protobuf::int64 value);

  // repeated int64 alarmType = 3;
  inline int alarmtype_size() const;
  inline void clear_alarmtype();
  static const int kAlarmTypeFieldNumber = 3;
  inline ::google::protobuf::int64 alarmtype(int index) const;
  inline void set_alarmtype(int index, ::google::protobuf::int64 value);
  inline void add_alarmtype(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      alarmtype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_alarmtype();

  // optional string ruleName = 4 [default = ""];
  inline bool has_rulename() const;
  inline void clear_rulename();
  static const int kRuleNameFieldNumber = 4;
  inline const ::std::string& rulename() const;
  inline void set_rulename(const ::std::string& value);
  inline void set_rulename(const char* value);
  inline void set_rulename(const char* value, size_t size);
  inline ::std::string* mutable_rulename();
  inline ::std::string* release_rulename();
  inline void set_allocated_rulename(::std::string* rulename);

  // optional bytes ruleDescribe = 5 [default = ""];
  inline bool has_ruledescribe() const;
  inline void clear_ruledescribe();
  static const int kRuleDescribeFieldNumber = 5;
  inline const ::std::string& ruledescribe() const;
  inline void set_ruledescribe(const ::std::string& value);
  inline void set_ruledescribe(const char* value);
  inline void set_ruledescribe(const void* value, size_t size);
  inline ::std::string* mutable_ruledescribe();
  inline ::std::string* release_ruledescribe();
  inline void set_allocated_ruledescribe(::std::string* ruledescribe);

  // optional int32 state = 7 [default = -1];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 7;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // repeated .com.arges.file.proto.AlarmSrcDevInfo srcDevs = 8;
  inline int srcdevs_size() const;
  inline void clear_srcdevs();
  static const int kSrcDevsFieldNumber = 8;
  inline const ::com::arges::file::proto::AlarmSrcDevInfo& srcdevs(int index) const;
  inline ::com::arges::file::proto::AlarmSrcDevInfo* mutable_srcdevs(int index);
  inline ::com::arges::file::proto::AlarmSrcDevInfo* add_srcdevs();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmSrcDevInfo >&
      srcdevs() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmSrcDevInfo >*
      mutable_srcdevs();

  // optional .com.arges.file.proto.ActionLinkData action = 9;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 9;
  inline const ::com::arges::file::proto::ActionLinkData& action() const;
  inline ::com::arges::file::proto::ActionLinkData* mutable_action();
  inline ::com::arges::file::proto::ActionLinkData* release_action();
  inline void set_allocated_action(::com::arges::file::proto::ActionLinkData* action);

  // repeated .com.arges.file.proto.DeviceInfo srcDevsFromDis = 10;
  inline int srcdevsfromdis_size() const;
  inline void clear_srcdevsfromdis();
  static const int kSrcDevsFromDisFieldNumber = 10;
  inline const ::com::arges::file::proto::DeviceInfo& srcdevsfromdis(int index) const;
  inline ::com::arges::file::proto::DeviceInfo* mutable_srcdevsfromdis(int index);
  inline ::com::arges::file::proto::DeviceInfo* add_srcdevsfromdis();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::DeviceInfo >&
      srcdevsfromdis() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::DeviceInfo >*
      mutable_srcdevsfromdis();

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmRuleData)
 private:
  inline void set_has_ruleid();
  inline void clear_has_ruleid();
  inline void set_has_planid();
  inline void clear_has_planid();
  inline void set_has_rulename();
  inline void clear_has_rulename();
  inline void set_has_ruledescribe();
  inline void clear_has_ruledescribe();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_action();
  inline void clear_has_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 ruleid_;
  ::google::protobuf::int64 planid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > alarmtype_;
  ::std::string* rulename_;
  ::std::string* ruledescribe_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmSrcDevInfo > srcdevs_;
  ::com::arges::file::proto::ActionLinkData* action_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::DeviceInfo > srcdevsfromdis_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmRuleData* default_instance_;
};
// -------------------------------------------------------------------

class AlarmPlanMassage : public ::google::protobuf::Message {
 public:
  AlarmPlanMassage();
  virtual ~AlarmPlanMassage();

  AlarmPlanMassage(const AlarmPlanMassage& from);

  inline AlarmPlanMassage& operator=(const AlarmPlanMassage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmPlanMassage& default_instance();

  void Swap(AlarmPlanMassage* other);

  // implements Message ----------------------------------------------

  AlarmPlanMassage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmPlanMassage& from);
  void MergeFrom(const AlarmPlanMassage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 requestType = 1 [default = -1];
  inline bool has_requesttype() const;
  inline void clear_requesttype();
  static const int kRequestTypeFieldNumber = 1;
  inline ::google::protobuf::int32 requesttype() const;
  inline void set_requesttype(::google::protobuf::int32 value);

  // optional int32 result = 2 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional bytes resultDescribe = 3 [default = ""];
  inline bool has_resultdescribe() const;
  inline void clear_resultdescribe();
  static const int kResultDescribeFieldNumber = 3;
  inline const ::std::string& resultdescribe() const;
  inline void set_resultdescribe(const ::std::string& value);
  inline void set_resultdescribe(const char* value);
  inline void set_resultdescribe(const void* value, size_t size);
  inline ::std::string* mutable_resultdescribe();
  inline ::std::string* release_resultdescribe();
  inline void set_allocated_resultdescribe(::std::string* resultdescribe);

  // repeated string id = 4;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline const ::std::string& id(int index) const;
  inline ::std::string* mutable_id(int index);
  inline void set_id(int index, const ::std::string& value);
  inline void set_id(int index, const char* value);
  inline void set_id(int index, const char* value, size_t size);
  inline ::std::string* add_id();
  inline void add_id(const ::std::string& value);
  inline void add_id(const char* value);
  inline void add_id(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& id() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_id();

  // optional string name = 5 [default = ""];
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .com.arges.file.proto.AlarmPlanData plan = 6;
  inline int plan_size() const;
  inline void clear_plan();
  static const int kPlanFieldNumber = 6;
  inline const ::com::arges::file::proto::AlarmPlanData& plan(int index) const;
  inline ::com::arges::file::proto::AlarmPlanData* mutable_plan(int index);
  inline ::com::arges::file::proto::AlarmPlanData* add_plan();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmPlanData >&
      plan() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmPlanData >*
      mutable_plan();

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmPlanMassage)
 private:
  inline void set_has_requesttype();
  inline void clear_has_requesttype();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_resultdescribe();
  inline void clear_has_resultdescribe();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 requesttype_;
  ::google::protobuf::int32 result_;
  ::std::string* resultdescribe_;
  ::google::protobuf::RepeatedPtrField< ::std::string> id_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmPlanData > plan_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmPlanMassage* default_instance_;
};
// -------------------------------------------------------------------

class AlarmDataForDIS : public ::google::protobuf::Message {
 public:
  AlarmDataForDIS();
  virtual ~AlarmDataForDIS();

  AlarmDataForDIS(const AlarmDataForDIS& from);

  inline AlarmDataForDIS& operator=(const AlarmDataForDIS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmDataForDIS& default_instance();

  void Swap(AlarmDataForDIS* other);

  // implements Message ----------------------------------------------

  AlarmDataForDIS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmDataForDIS& from);
  void MergeFrom(const AlarmDataForDIS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string srcDevCode = 2;
  inline bool has_srcdevcode() const;
  inline void clear_srcdevcode();
  static const int kSrcDevCodeFieldNumber = 2;
  inline const ::std::string& srcdevcode() const;
  inline void set_srcdevcode(const ::std::string& value);
  inline void set_srcdevcode(const char* value);
  inline void set_srcdevcode(const char* value, size_t size);
  inline ::std::string* mutable_srcdevcode();
  inline ::std::string* release_srcdevcode();
  inline void set_allocated_srcdevcode(::std::string* srcdevcode);

  // optional .com.arges.file.proto.AlarmData alarm = 3;
  inline bool has_alarm() const;
  inline void clear_alarm();
  static const int kAlarmFieldNumber = 3;
  inline const ::com::arges::file::proto::AlarmData& alarm() const;
  inline ::com::arges::file::proto::AlarmData* mutable_alarm();
  inline ::com::arges::file::proto::AlarmData* release_alarm();
  inline void set_allocated_alarm(::com::arges::file::proto::AlarmData* alarm);

  // repeated int64 userId = 4;
  inline int userid_size() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 4;
  inline ::google::protobuf::int64 userid(int index) const;
  inline void set_userid(int index, ::google::protobuf::int64 value);
  inline void add_userid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      userid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_userid();

  // optional bool isToAts = 5;
  inline bool has_istoats() const;
  inline void clear_istoats();
  static const int kIsToAtsFieldNumber = 5;
  inline bool istoats() const;
  inline void set_istoats(bool value);

  // optional bool isWriteToDc = 6 [default = false];
  inline bool has_iswritetodc() const;
  inline void clear_iswritetodc();
  static const int kIsWriteToDcFieldNumber = 6;
  inline bool iswritetodc() const;
  inline void set_iswritetodc(bool value);

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmDataForDIS)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_srcdevcode();
  inline void clear_has_srcdevcode();
  inline void set_has_alarm();
  inline void clear_has_alarm();
  inline void set_has_istoats();
  inline void clear_has_istoats();
  inline void set_has_iswritetodc();
  inline void clear_has_iswritetodc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* srcdevcode_;
  ::com::arges::file::proto::AlarmData* alarm_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > userid_;
  ::google::protobuf::int32 result_;
  bool istoats_;
  bool iswritetodc_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmDataForDIS* default_instance_;
};
// -------------------------------------------------------------------

class GetAlarmDataForDIS : public ::google::protobuf::Message {
 public:
  GetAlarmDataForDIS();
  virtual ~GetAlarmDataForDIS();

  GetAlarmDataForDIS(const GetAlarmDataForDIS& from);

  inline GetAlarmDataForDIS& operator=(const GetAlarmDataForDIS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAlarmDataForDIS& default_instance();

  void Swap(GetAlarmDataForDIS* other);

  // implements Message ----------------------------------------------

  GetAlarmDataForDIS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAlarmDataForDIS& from);
  void MergeFrom(const GetAlarmDataForDIS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .com.arges.file.proto.AlarmPlanData alarm = 2;
  inline bool has_alarm() const;
  inline void clear_alarm();
  static const int kAlarmFieldNumber = 2;
  inline const ::com::arges::file::proto::AlarmPlanData& alarm() const;
  inline ::com::arges::file::proto::AlarmPlanData* mutable_alarm();
  inline ::com::arges::file::proto::AlarmPlanData* release_alarm();
  inline void set_allocated_alarm(::com::arges::file::proto::AlarmPlanData* alarm);

  // optional bool isNeedToSendTopic = 3 [default = false];
  inline bool has_isneedtosendtopic() const;
  inline void clear_isneedtosendtopic();
  static const int kIsNeedToSendTopicFieldNumber = 3;
  inline bool isneedtosendtopic() const;
  inline void set_isneedtosendtopic(bool value);

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.GetAlarmDataForDIS)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_alarm();
  inline void clear_has_alarm();
  inline void set_has_isneedtosendtopic();
  inline void clear_has_isneedtosendtopic();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::com::arges::file::proto::AlarmPlanData* alarm_;
  ::google::protobuf::int32 result_;
  bool isneedtosendtopic_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static GetAlarmDataForDIS* default_instance_;
};
// -------------------------------------------------------------------

class AlarmGetSrcsourceMassage : public ::google::protobuf::Message {
 public:
  AlarmGetSrcsourceMassage();
  virtual ~AlarmGetSrcsourceMassage();

  AlarmGetSrcsourceMassage(const AlarmGetSrcsourceMassage& from);

  inline AlarmGetSrcsourceMassage& operator=(const AlarmGetSrcsourceMassage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmGetSrcsourceMassage& default_instance();

  void Swap(AlarmGetSrcsourceMassage* other);

  // implements Message ----------------------------------------------

  AlarmGetSrcsourceMassage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmGetSrcsourceMassage& from);
  void MergeFrom(const AlarmGetSrcsourceMassage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 requestType = 1 [default = -1];
  inline bool has_requesttype() const;
  inline void clear_requesttype();
  static const int kRequestTypeFieldNumber = 1;
  inline ::google::protobuf::int32 requesttype() const;
  inline void set_requesttype(::google::protobuf::int32 value);

  // optional int32 result = 2 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string resultDescribe = 3 [default = ""];
  inline bool has_resultdescribe() const;
  inline void clear_resultdescribe();
  static const int kResultDescribeFieldNumber = 3;
  inline const ::std::string& resultdescribe() const;
  inline void set_resultdescribe(const ::std::string& value);
  inline void set_resultdescribe(const char* value);
  inline void set_resultdescribe(const char* value, size_t size);
  inline ::std::string* mutable_resultdescribe();
  inline ::std::string* release_resultdescribe();
  inline void set_allocated_resultdescribe(::std::string* resultdescribe);

  // optional string cascadeDevDomain = 4 [default = ""];
  inline bool has_cascadedevdomain() const;
  inline void clear_cascadedevdomain();
  static const int kCascadeDevDomainFieldNumber = 4;
  inline const ::std::string& cascadedevdomain() const;
  inline void set_cascadedevdomain(const ::std::string& value);
  inline void set_cascadedevdomain(const char* value);
  inline void set_cascadedevdomain(const char* value, size_t size);
  inline ::std::string* mutable_cascadedevdomain();
  inline ::std::string* release_cascadedevdomain();
  inline void set_allocated_cascadedevdomain(::std::string* cascadedevdomain);

  // repeated .com.arges.file.proto.DeviceInfo GpsDev = 5;
  inline int gpsdev_size() const;
  inline void clear_gpsdev();
  static const int kGpsDevFieldNumber = 5;
  inline const ::com::arges::file::proto::DeviceInfo& gpsdev(int index) const;
  inline ::com::arges::file::proto::DeviceInfo* mutable_gpsdev(int index);
  inline ::com::arges::file::proto::DeviceInfo* add_gpsdev();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::DeviceInfo >&
      gpsdev() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::DeviceInfo >*
      mutable_gpsdev();

  // repeated .com.arges.file.proto.DeviceInfo GrepDev = 6;
  inline int grepdev_size() const;
  inline void clear_grepdev();
  static const int kGrepDevFieldNumber = 6;
  inline const ::com::arges::file::proto::DeviceInfo& grepdev(int index) const;
  inline ::com::arges::file::proto::DeviceInfo* mutable_grepdev(int index);
  inline ::com::arges::file::proto::DeviceInfo* add_grepdev();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::DeviceInfo >&
      grepdev() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::DeviceInfo >*
      mutable_grepdev();

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmGetSrcsourceMassage)
 private:
  inline void set_has_requesttype();
  inline void clear_has_requesttype();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_resultdescribe();
  inline void clear_has_resultdescribe();
  inline void set_has_cascadedevdomain();
  inline void clear_has_cascadedevdomain();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 requesttype_;
  ::google::protobuf::int32 result_;
  ::std::string* resultdescribe_;
  ::std::string* cascadedevdomain_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::DeviceInfo > gpsdev_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::DeviceInfo > grepdev_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmGetSrcsourceMassage* default_instance_;
};
// -------------------------------------------------------------------

class AlarmRecordData_LinkVideoData : public ::google::protobuf::Message {
 public:
  AlarmRecordData_LinkVideoData();
  virtual ~AlarmRecordData_LinkVideoData();

  AlarmRecordData_LinkVideoData(const AlarmRecordData_LinkVideoData& from);

  inline AlarmRecordData_LinkVideoData& operator=(const AlarmRecordData_LinkVideoData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmRecordData_LinkVideoData& default_instance();

  void Swap(AlarmRecordData_LinkVideoData* other);

  // implements Message ----------------------------------------------

  AlarmRecordData_LinkVideoData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmRecordData_LinkVideoData& from);
  void MergeFrom(const AlarmRecordData_LinkVideoData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int64 alarmId = 2 [default = -1];
  inline bool has_alarmid() const;
  inline void clear_alarmid();
  static const int kAlarmIdFieldNumber = 2;
  inline ::google::protobuf::int64 alarmid() const;
  inline void set_alarmid(::google::protobuf::int64 value);

  // optional string filePath = 3 [default = ""];
  inline bool has_filepath() const;
  inline void clear_filepath();
  static const int kFilePathFieldNumber = 3;
  inline const ::std::string& filepath() const;
  inline void set_filepath(const ::std::string& value);
  inline void set_filepath(const char* value);
  inline void set_filepath(const char* value, size_t size);
  inline ::std::string* mutable_filepath();
  inline ::std::string* release_filepath();
  inline void set_allocated_filepath(::std::string* filepath);

  // optional string channelCode = 4 [default = ""];
  inline bool has_channelcode() const;
  inline void clear_channelcode();
  static const int kChannelCodeFieldNumber = 4;
  inline const ::std::string& channelcode() const;
  inline void set_channelcode(const ::std::string& value);
  inline void set_channelcode(const char* value);
  inline void set_channelcode(const char* value, size_t size);
  inline ::std::string* mutable_channelcode();
  inline ::std::string* release_channelcode();
  inline void set_allocated_channelcode(::std::string* channelcode);

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmRecordData.LinkVideoData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_alarmid();
  inline void clear_has_alarmid();
  inline void set_has_filepath();
  inline void clear_has_filepath();
  inline void set_has_channelcode();
  inline void clear_has_channelcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 alarmid_;
  ::std::string* filepath_;
  ::std::string* channelcode_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmRecordData_LinkVideoData* default_instance_;
};
// -------------------------------------------------------------------

class AlarmRecordData_RaiseAlarmData : public ::google::protobuf::Message {
 public:
  AlarmRecordData_RaiseAlarmData();
  virtual ~AlarmRecordData_RaiseAlarmData();

  AlarmRecordData_RaiseAlarmData(const AlarmRecordData_RaiseAlarmData& from);

  inline AlarmRecordData_RaiseAlarmData& operator=(const AlarmRecordData_RaiseAlarmData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmRecordData_RaiseAlarmData& default_instance();

  void Swap(AlarmRecordData_RaiseAlarmData* other);

  // implements Message ----------------------------------------------

  AlarmRecordData_RaiseAlarmData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmRecordData_RaiseAlarmData& from);
  void MergeFrom(const AlarmRecordData_RaiseAlarmData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional int64 alarmId = 2 [default = -1];
  inline bool has_alarmid() const;
  inline void clear_alarmid();
  static const int kAlarmIdFieldNumber = 2;
  inline ::google::protobuf::int64 alarmid() const;
  inline void set_alarmid(::google::protobuf::int64 value);

  // optional int32 alarmCap = 3 [default = -1];
  inline bool has_alarmcap() const;
  inline void clear_alarmcap();
  static const int kAlarmCapFieldNumber = 3;
  inline ::google::protobuf::int32 alarmcap() const;
  inline void set_alarmcap(::google::protobuf::int32 value);

  // optional float alarmNum = 4 [default = 0];
  inline bool has_alarmnum() const;
  inline void clear_alarmnum();
  static const int kAlarmNumFieldNumber = 4;
  inline float alarmnum() const;
  inline void set_alarmnum(float value);

  // optional int32 alarmGroup = 5 [default = -1];
  inline bool has_alarmgroup() const;
  inline void clear_alarmgroup();
  static const int kAlarmGroupFieldNumber = 5;
  inline ::google::protobuf::int32 alarmgroup() const;
  inline void set_alarmgroup(::google::protobuf::int32 value);

  // optional float standardNum = 6 [default = 0];
  inline bool has_standardnum() const;
  inline void clear_standardnum();
  static const int kStandardNumFieldNumber = 6;
  inline float standardnum() const;
  inline void set_standardnum(float value);

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmRecordData.RaiseAlarmData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_alarmid();
  inline void clear_has_alarmid();
  inline void set_has_alarmcap();
  inline void clear_has_alarmcap();
  inline void set_has_alarmnum();
  inline void clear_has_alarmnum();
  inline void set_has_alarmgroup();
  inline void clear_has_alarmgroup();
  inline void set_has_standardnum();
  inline void clear_has_standardnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 alarmid_;
  ::google::protobuf::int32 alarmcap_;
  float alarmnum_;
  ::google::protobuf::int32 alarmgroup_;
  float standardnum_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmRecordData_RaiseAlarmData* default_instance_;
};
// -------------------------------------------------------------------

class AlarmRecordData : public ::google::protobuf::Message {
 public:
  AlarmRecordData();
  virtual ~AlarmRecordData();

  AlarmRecordData(const AlarmRecordData& from);

  inline AlarmRecordData& operator=(const AlarmRecordData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmRecordData& default_instance();

  void Swap(AlarmRecordData* other);

  // implements Message ----------------------------------------------

  AlarmRecordData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmRecordData& from);
  void MergeFrom(const AlarmRecordData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AlarmRecordData_LinkVideoData LinkVideoData;
  typedef AlarmRecordData_RaiseAlarmData RaiseAlarmData;

  // accessors -------------------------------------------------------

  // optional int64 id = 1 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional string devCode = 2 [default = ""];
  inline bool has_devcode() const;
  inline void clear_devcode();
  static const int kDevCodeFieldNumber = 2;
  inline const ::std::string& devcode() const;
  inline void set_devcode(const ::std::string& value);
  inline void set_devcode(const char* value);
  inline void set_devcode(const char* value, size_t size);
  inline ::std::string* mutable_devcode();
  inline ::std::string* release_devcode();
  inline void set_allocated_devcode(::std::string* devcode);

  // optional int32 unitType = 3 [default = -1];
  inline bool has_unittype() const;
  inline void clear_unittype();
  static const int kUnitTypeFieldNumber = 3;
  inline ::google::protobuf::int32 unittype() const;
  inline void set_unittype(::google::protobuf::int32 value);

  // optional int32 unitSeq = 4 [default = -1];
  inline bool has_unitseq() const;
  inline void clear_unitseq();
  static const int kUnitSeqFieldNumber = 4;
  inline ::google::protobuf::int32 unitseq() const;
  inline void set_unitseq(::google::protobuf::int32 value);

  // optional int32 chnSeq = 5 [default = -1];
  inline bool has_chnseq() const;
  inline void clear_chnseq();
  static const int kChnSeqFieldNumber = 5;
  inline ::google::protobuf::int32 chnseq() const;
  inline void set_chnseq(::google::protobuf::int32 value);

  // optional string chnName = 6 [default = ""];
  inline bool has_chnname() const;
  inline void clear_chnname();
  static const int kChnNameFieldNumber = 6;
  inline const ::std::string& chnname() const;
  inline void set_chnname(const ::std::string& value);
  inline void set_chnname(const char* value);
  inline void set_chnname(const char* value, size_t size);
  inline ::std::string* mutable_chnname();
  inline ::std::string* release_chnname();
  inline void set_allocated_chnname(::std::string* chnname);

  // optional int32 alarmType = 7 [default = -1];
  inline bool has_alarmtype() const;
  inline void clear_alarmtype();
  static const int kAlarmTypeFieldNumber = 7;
  inline ::google::protobuf::int32 alarmtype() const;
  inline void set_alarmtype(::google::protobuf::int32 value);

  // optional int64 alarmDate = 8 [default = -1];
  inline bool has_alarmdate() const;
  inline void clear_alarmdate();
  static const int kAlarmDateFieldNumber = 8;
  inline ::google::protobuf::int64 alarmdate() const;
  inline void set_alarmdate(::google::protobuf::int64 value);

  // optional int32 alarmGrade = 9 [default = -1];
  inline bool has_alarmgrade() const;
  inline void clear_alarmgrade();
  static const int kAlarmGradeFieldNumber = 9;
  inline ::google::protobuf::int32 alarmgrade() const;
  inline void set_alarmgrade(::google::protobuf::int32 value);

  // optional string handleUser = 10 [default = ""];
  inline bool has_handleuser() const;
  inline void clear_handleuser();
  static const int kHandleUserFieldNumber = 10;
  inline const ::std::string& handleuser() const;
  inline void set_handleuser(const ::std::string& value);
  inline void set_handleuser(const char* value);
  inline void set_handleuser(const char* value, size_t size);
  inline ::std::string* mutable_handleuser();
  inline ::std::string* release_handleuser();
  inline void set_allocated_handleuser(::std::string* handleuser);

  // optional int64 handleDate = 11 [default = -1];
  inline bool has_handledate() const;
  inline void clear_handledate();
  static const int kHandleDateFieldNumber = 11;
  inline ::google::protobuf::int64 handledate() const;
  inline void set_handledate(::google::protobuf::int64 value);

  // optional bytes handleMsg = 12 [default = ""];
  inline bool has_handlemsg() const;
  inline void clear_handlemsg();
  static const int kHandleMsgFieldNumber = 12;
  inline const ::std::string& handlemsg() const;
  inline void set_handlemsg(const ::std::string& value);
  inline void set_handlemsg(const char* value);
  inline void set_handlemsg(const void* value, size_t size);
  inline ::std::string* mutable_handlemsg();
  inline ::std::string* release_handlemsg();
  inline void set_allocated_handlemsg(::std::string* handlemsg);

  // optional int32 handleStat = 13 [default = -1];
  inline bool has_handlestat() const;
  inline void clear_handlestat();
  static const int kHandleStatFieldNumber = 13;
  inline ::google::protobuf::int32 handlestat() const;
  inline void set_handlestat(::google::protobuf::int32 value);

  // optional string devName = 14 [default = ""];
  inline bool has_devname() const;
  inline void clear_devname();
  static const int kDevNameFieldNumber = 14;
  inline const ::std::string& devname() const;
  inline void set_devname(const ::std::string& value);
  inline void set_devname(const char* value);
  inline void set_devname(const char* value, size_t size);
  inline ::std::string* mutable_devname();
  inline ::std::string* release_devname();
  inline void set_allocated_devname(::std::string* devname);

  // optional int32 alarmStat = 15 [default = -1];
  inline bool has_alarmstat() const;
  inline void clear_alarmstat();
  static const int kAlarmStatFieldNumber = 15;
  inline ::google::protobuf::int32 alarmstat() const;
  inline void set_alarmstat(::google::protobuf::int32 value);

  // repeated .com.arges.file.proto.AlarmRecordData.LinkVideoData videos = 16;
  inline int videos_size() const;
  inline void clear_videos();
  static const int kVideosFieldNumber = 16;
  inline const ::com::arges::file::proto::AlarmRecordData_LinkVideoData& videos(int index) const;
  inline ::com::arges::file::proto::AlarmRecordData_LinkVideoData* mutable_videos(int index);
  inline ::com::arges::file::proto::AlarmRecordData_LinkVideoData* add_videos();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordData_LinkVideoData >&
      videos() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordData_LinkVideoData >*
      mutable_videos();

  // repeated .com.arges.file.proto.AlarmRecordData.RaiseAlarmData raises = 17;
  inline int raises_size() const;
  inline void clear_raises();
  static const int kRaisesFieldNumber = 17;
  inline const ::com::arges::file::proto::AlarmRecordData_RaiseAlarmData& raises(int index) const;
  inline ::com::arges::file::proto::AlarmRecordData_RaiseAlarmData* mutable_raises(int index);
  inline ::com::arges::file::proto::AlarmRecordData_RaiseAlarmData* add_raises();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordData_RaiseAlarmData >&
      raises() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordData_RaiseAlarmData >*
      mutable_raises();

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmRecordData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_devcode();
  inline void clear_has_devcode();
  inline void set_has_unittype();
  inline void clear_has_unittype();
  inline void set_has_unitseq();
  inline void clear_has_unitseq();
  inline void set_has_chnseq();
  inline void clear_has_chnseq();
  inline void set_has_chnname();
  inline void clear_has_chnname();
  inline void set_has_alarmtype();
  inline void clear_has_alarmtype();
  inline void set_has_alarmdate();
  inline void clear_has_alarmdate();
  inline void set_has_alarmgrade();
  inline void clear_has_alarmgrade();
  inline void set_has_handleuser();
  inline void clear_has_handleuser();
  inline void set_has_handledate();
  inline void clear_has_handledate();
  inline void set_has_handlemsg();
  inline void clear_has_handlemsg();
  inline void set_has_handlestat();
  inline void clear_has_handlestat();
  inline void set_has_devname();
  inline void clear_has_devname();
  inline void set_has_alarmstat();
  inline void clear_has_alarmstat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::std::string* devcode_;
  ::google::protobuf::int32 unittype_;
  ::google::protobuf::int32 unitseq_;
  ::std::string* chnname_;
  ::google::protobuf::int32 chnseq_;
  ::google::protobuf::int32 alarmtype_;
  ::google::protobuf::int64 alarmdate_;
  ::std::string* handleuser_;
  ::google::protobuf::int64 handledate_;
  ::google::protobuf::int32 alarmgrade_;
  ::google::protobuf::int32 handlestat_;
  ::std::string* handlemsg_;
  ::std::string* devname_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordData_LinkVideoData > videos_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordData_RaiseAlarmData > raises_;
  ::google::protobuf::int32 alarmstat_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmRecordData* default_instance_;
};
// -------------------------------------------------------------------

class AlarmRecordMessage_AlarmParam : public ::google::protobuf::Message {
 public:
  AlarmRecordMessage_AlarmParam();
  virtual ~AlarmRecordMessage_AlarmParam();

  AlarmRecordMessage_AlarmParam(const AlarmRecordMessage_AlarmParam& from);

  inline AlarmRecordMessage_AlarmParam& operator=(const AlarmRecordMessage_AlarmParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmRecordMessage_AlarmParam& default_instance();

  void Swap(AlarmRecordMessage_AlarmParam* other);

  // implements Message ----------------------------------------------

  AlarmRecordMessage_AlarmParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmRecordMessage_AlarmParam& from);
  void MergeFrom(const AlarmRecordMessage_AlarmParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 alarmType = 1 [default = -1];
  inline bool has_alarmtype() const;
  inline void clear_alarmtype();
  static const int kAlarmTypeFieldNumber = 1;
  inline ::google::protobuf::int64 alarmtype() const;
  inline void set_alarmtype(::google::protobuf::int64 value);

  // optional string devCode = 2 [default = ""];
  inline bool has_devcode() const;
  inline void clear_devcode();
  static const int kDevCodeFieldNumber = 2;
  inline const ::std::string& devcode() const;
  inline void set_devcode(const ::std::string& value);
  inline void set_devcode(const char* value);
  inline void set_devcode(const char* value, size_t size);
  inline ::std::string* mutable_devcode();
  inline ::std::string* release_devcode();
  inline void set_allocated_devcode(::std::string* devcode);

  // optional int32 chnSeq = 3 [default = 0];
  inline bool has_chnseq() const;
  inline void clear_chnseq();
  static const int kChnSeqFieldNumber = 3;
  inline ::google::protobuf::int32 chnseq() const;
  inline void set_chnseq(::google::protobuf::int32 value);

  // optional int32 limit = 4 [default = 0];
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 4;
  inline ::google::protobuf::int32 limit() const;
  inline void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmRecordMessage.AlarmParam)
 private:
  inline void set_has_alarmtype();
  inline void clear_has_alarmtype();
  inline void set_has_devcode();
  inline void clear_has_devcode();
  inline void set_has_chnseq();
  inline void clear_has_chnseq();
  inline void set_has_limit();
  inline void clear_has_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 alarmtype_;
  ::std::string* devcode_;
  ::google::protobuf::int32 chnseq_;
  ::google::protobuf::int32 limit_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmRecordMessage_AlarmParam* default_instance_;
};
// -------------------------------------------------------------------

class AlarmRecordMessage : public ::google::protobuf::Message {
 public:
  AlarmRecordMessage();
  virtual ~AlarmRecordMessage();

  AlarmRecordMessage(const AlarmRecordMessage& from);

  inline AlarmRecordMessage& operator=(const AlarmRecordMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmRecordMessage& default_instance();

  void Swap(AlarmRecordMessage* other);

  // implements Message ----------------------------------------------

  AlarmRecordMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmRecordMessage& from);
  void MergeFrom(const AlarmRecordMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AlarmRecordMessage_AlarmParam AlarmParam;

  // accessors -------------------------------------------------------

  // optional int32 requestType = 1 [default = -1];
  inline bool has_requesttype() const;
  inline void clear_requesttype();
  static const int kRequestTypeFieldNumber = 1;
  inline ::google::protobuf::int32 requesttype() const;
  inline void set_requesttype(::google::protobuf::int32 value);

  // optional int32 result = 2 [default = -1];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional bytes resultDescribe = 3 [default = ""];
  inline bool has_resultdescribe() const;
  inline void clear_resultdescribe();
  static const int kResultDescribeFieldNumber = 3;
  inline const ::std::string& resultdescribe() const;
  inline void set_resultdescribe(const ::std::string& value);
  inline void set_resultdescribe(const char* value);
  inline void set_resultdescribe(const void* value, size_t size);
  inline ::std::string* mutable_resultdescribe();
  inline ::std::string* release_resultdescribe();
  inline void set_allocated_resultdescribe(::std::string* resultdescribe);

  // repeated .com.arges.file.proto.AlarmRecordData datas = 4;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 4;
  inline const ::com::arges::file::proto::AlarmRecordData& datas(int index) const;
  inline ::com::arges::file::proto::AlarmRecordData* mutable_datas(int index);
  inline ::com::arges::file::proto::AlarmRecordData* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordData >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordData >*
      mutable_datas();

  // optional int64 startTime = 5 [default = -1];
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 5;
  inline ::google::protobuf::int64 starttime() const;
  inline void set_starttime(::google::protobuf::int64 value);

  // optional int64 endTime = 6 [default = -1];
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 6;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // repeated .com.arges.file.proto.AlarmRecordMessage.AlarmParam params = 7;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 7;
  inline const ::com::arges::file::proto::AlarmRecordMessage_AlarmParam& params(int index) const;
  inline ::com::arges::file::proto::AlarmRecordMessage_AlarmParam* mutable_params(int index);
  inline ::com::arges::file::proto::AlarmRecordMessage_AlarmParam* add_params();
  inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordMessage_AlarmParam >&
      params() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordMessage_AlarmParam >*
      mutable_params();

  // optional string nginxConf = 8 [default = ""];
  inline bool has_nginxconf() const;
  inline void clear_nginxconf();
  static const int kNginxConfFieldNumber = 8;
  inline const ::std::string& nginxconf() const;
  inline void set_nginxconf(const ::std::string& value);
  inline void set_nginxconf(const char* value);
  inline void set_nginxconf(const char* value, size_t size);
  inline ::std::string* mutable_nginxconf();
  inline ::std::string* release_nginxconf();
  inline void set_allocated_nginxconf(::std::string* nginxconf);

  // optional string nginxOut = 9 [default = ""];
  inline bool has_nginxout() const;
  inline void clear_nginxout();
  static const int kNginxOutFieldNumber = 9;
  inline const ::std::string& nginxout() const;
  inline void set_nginxout(const ::std::string& value);
  inline void set_nginxout(const char* value);
  inline void set_nginxout(const char* value, size_t size);
  inline ::std::string* mutable_nginxout();
  inline ::std::string* release_nginxout();
  inline void set_allocated_nginxout(::std::string* nginxout);

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.AlarmRecordMessage)
 private:
  inline void set_has_requesttype();
  inline void clear_has_requesttype();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_resultdescribe();
  inline void clear_has_resultdescribe();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_nginxconf();
  inline void clear_has_nginxconf();
  inline void set_has_nginxout();
  inline void clear_has_nginxout();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 requesttype_;
  ::google::protobuf::int32 result_;
  ::std::string* resultdescribe_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordData > datas_;
  ::google::protobuf::int64 starttime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordMessage_AlarmParam > params_;
  ::std::string* nginxconf_;
  ::std::string* nginxout_;
  friend void  protobuf_AddDesc_AlarmBean_2eproto();
  friend void protobuf_AssignDesc_AlarmBean_2eproto();
  friend void protobuf_ShutdownFile_AlarmBean_2eproto();

  void InitAsDefaultInstance();
  static AlarmRecordMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// ActionLinkData

// repeated .com.arges.file.proto.SoundLinkData sounds = 1;
inline int ActionLinkData::sounds_size() const {
  return sounds_.size();
}
inline void ActionLinkData::clear_sounds() {
  sounds_.Clear();
}
inline const ::com::arges::file::proto::SoundLinkData& ActionLinkData::sounds(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ActionLinkData.sounds)
  return sounds_.Get(index);
}
inline ::com::arges::file::proto::SoundLinkData* ActionLinkData::mutable_sounds(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.ActionLinkData.sounds)
  return sounds_.Mutable(index);
}
inline ::com::arges::file::proto::SoundLinkData* ActionLinkData::add_sounds() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.ActionLinkData.sounds)
  return sounds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::SoundLinkData >&
ActionLinkData::sounds() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.ActionLinkData.sounds)
  return sounds_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::SoundLinkData >*
ActionLinkData::mutable_sounds() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.ActionLinkData.sounds)
  return &sounds_;
}

// repeated .com.arges.file.proto.LightLinkData lights = 2;
inline int ActionLinkData::lights_size() const {
  return lights_.size();
}
inline void ActionLinkData::clear_lights() {
  lights_.Clear();
}
inline const ::com::arges::file::proto::LightLinkData& ActionLinkData::lights(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ActionLinkData.lights)
  return lights_.Get(index);
}
inline ::com::arges::file::proto::LightLinkData* ActionLinkData::mutable_lights(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.ActionLinkData.lights)
  return lights_.Mutable(index);
}
inline ::com::arges::file::proto::LightLinkData* ActionLinkData::add_lights() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.ActionLinkData.lights)
  return lights_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::LightLinkData >&
ActionLinkData::lights() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.ActionLinkData.lights)
  return lights_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::LightLinkData >*
ActionLinkData::mutable_lights() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.ActionLinkData.lights)
  return &lights_;
}

// repeated .com.arges.file.proto.VideoLinkData videos = 3;
inline int ActionLinkData::videos_size() const {
  return videos_.size();
}
inline void ActionLinkData::clear_videos() {
  videos_.Clear();
}
inline const ::com::arges::file::proto::VideoLinkData& ActionLinkData::videos(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ActionLinkData.videos)
  return videos_.Get(index);
}
inline ::com::arges::file::proto::VideoLinkData* ActionLinkData::mutable_videos(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.ActionLinkData.videos)
  return videos_.Mutable(index);
}
inline ::com::arges::file::proto::VideoLinkData* ActionLinkData::add_videos() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.ActionLinkData.videos)
  return videos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::VideoLinkData >&
ActionLinkData::videos() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.ActionLinkData.videos)
  return videos_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::VideoLinkData >*
ActionLinkData::mutable_videos() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.ActionLinkData.videos)
  return &videos_;
}

// repeated .com.arges.file.proto.RecordLinkData records = 4;
inline int ActionLinkData::records_size() const {
  return records_.size();
}
inline void ActionLinkData::clear_records() {
  records_.Clear();
}
inline const ::com::arges::file::proto::RecordLinkData& ActionLinkData::records(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ActionLinkData.records)
  return records_.Get(index);
}
inline ::com::arges::file::proto::RecordLinkData* ActionLinkData::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.ActionLinkData.records)
  return records_.Mutable(index);
}
inline ::com::arges::file::proto::RecordLinkData* ActionLinkData::add_records() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.ActionLinkData.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::RecordLinkData >&
ActionLinkData::records() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.ActionLinkData.records)
  return records_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::RecordLinkData >*
ActionLinkData::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.ActionLinkData.records)
  return &records_;
}

// repeated .com.arges.file.proto.SmsLinkData sms = 5;
inline int ActionLinkData::sms_size() const {
  return sms_.size();
}
inline void ActionLinkData::clear_sms() {
  sms_.Clear();
}
inline const ::com::arges::file::proto::SmsLinkData& ActionLinkData::sms(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ActionLinkData.sms)
  return sms_.Get(index);
}
inline ::com::arges::file::proto::SmsLinkData* ActionLinkData::mutable_sms(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.ActionLinkData.sms)
  return sms_.Mutable(index);
}
inline ::com::arges::file::proto::SmsLinkData* ActionLinkData::add_sms() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.ActionLinkData.sms)
  return sms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::SmsLinkData >&
ActionLinkData::sms() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.ActionLinkData.sms)
  return sms_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::SmsLinkData >*
ActionLinkData::mutable_sms() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.ActionLinkData.sms)
  return &sms_;
}

// repeated .com.arges.file.proto.TvwallLinkData tvwalls = 6;
inline int ActionLinkData::tvwalls_size() const {
  return tvwalls_.size();
}
inline void ActionLinkData::clear_tvwalls() {
  tvwalls_.Clear();
}
inline const ::com::arges::file::proto::TvwallLinkData& ActionLinkData::tvwalls(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ActionLinkData.tvwalls)
  return tvwalls_.Get(index);
}
inline ::com::arges::file::proto::TvwallLinkData* ActionLinkData::mutable_tvwalls(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.ActionLinkData.tvwalls)
  return tvwalls_.Mutable(index);
}
inline ::com::arges::file::proto::TvwallLinkData* ActionLinkData::add_tvwalls() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.ActionLinkData.tvwalls)
  return tvwalls_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::TvwallLinkData >&
ActionLinkData::tvwalls() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.ActionLinkData.tvwalls)
  return tvwalls_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::TvwallLinkData >*
ActionLinkData::mutable_tvwalls() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.ActionLinkData.tvwalls)
  return &tvwalls_;
}

// repeated .com.arges.file.proto.EmailLinkData emails = 7;
inline int ActionLinkData::emails_size() const {
  return emails_.size();
}
inline void ActionLinkData::clear_emails() {
  emails_.Clear();
}
inline const ::com::arges::file::proto::EmailLinkData& ActionLinkData::emails(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ActionLinkData.emails)
  return emails_.Get(index);
}
inline ::com::arges::file::proto::EmailLinkData* ActionLinkData::mutable_emails(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.ActionLinkData.emails)
  return emails_.Mutable(index);
}
inline ::com::arges::file::proto::EmailLinkData* ActionLinkData::add_emails() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.ActionLinkData.emails)
  return emails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::EmailLinkData >&
ActionLinkData::emails() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.ActionLinkData.emails)
  return emails_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::EmailLinkData >*
ActionLinkData::mutable_emails() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.ActionLinkData.emails)
  return &emails_;
}

// repeated .com.arges.file.proto.CapitureLinkData cpts = 8;
inline int ActionLinkData::cpts_size() const {
  return cpts_.size();
}
inline void ActionLinkData::clear_cpts() {
  cpts_.Clear();
}
inline const ::com::arges::file::proto::CapitureLinkData& ActionLinkData::cpts(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ActionLinkData.cpts)
  return cpts_.Get(index);
}
inline ::com::arges::file::proto::CapitureLinkData* ActionLinkData::mutable_cpts(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.ActionLinkData.cpts)
  return cpts_.Mutable(index);
}
inline ::com::arges::file::proto::CapitureLinkData* ActionLinkData::add_cpts() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.ActionLinkData.cpts)
  return cpts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::CapitureLinkData >&
ActionLinkData::cpts() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.ActionLinkData.cpts)
  return cpts_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::CapitureLinkData >*
ActionLinkData::mutable_cpts() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.ActionLinkData.cpts)
  return &cpts_;
}

// -------------------------------------------------------------------

// AlarmSrcDevInfo

// optional int64 ruleId = 1 [default = -1];
inline bool AlarmSrcDevInfo::has_ruleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmSrcDevInfo::set_has_ruleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmSrcDevInfo::clear_has_ruleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmSrcDevInfo::clear_ruleid() {
  ruleid_ = GOOGLE_LONGLONG(-1);
  clear_has_ruleid();
}
inline ::google::protobuf::int64 AlarmSrcDevInfo::ruleid() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmSrcDevInfo.ruleId)
  return ruleid_;
}
inline void AlarmSrcDevInfo::set_ruleid(::google::protobuf::int64 value) {
  set_has_ruleid();
  ruleid_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmSrcDevInfo.ruleId)
}

// optional string code = 2 [default = ""];
inline bool AlarmSrcDevInfo::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmSrcDevInfo::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmSrcDevInfo::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmSrcDevInfo::clear_code() {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& AlarmSrcDevInfo::code() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmSrcDevInfo.code)
  return *code_;
}
inline void AlarmSrcDevInfo::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmSrcDevInfo.code)
}
inline void AlarmSrcDevInfo::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmSrcDevInfo.code)
}
inline void AlarmSrcDevInfo::set_code(const char* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmSrcDevInfo.code)
}
inline ::std::string* AlarmSrcDevInfo::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmSrcDevInfo.code)
  return code_;
}
inline ::std::string* AlarmSrcDevInfo::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmSrcDevInfo::set_allocated_code(::std::string* code) {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (code) {
    set_has_code();
    code_ = code;
  } else {
    clear_has_code();
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmSrcDevInfo.code)
}

// optional int32 nodeType = 3 [default = -1];
inline bool AlarmSrcDevInfo::has_nodetype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmSrcDevInfo::set_has_nodetype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmSrcDevInfo::clear_has_nodetype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmSrcDevInfo::clear_nodetype() {
  nodetype_ = -1;
  clear_has_nodetype();
}
inline ::google::protobuf::int32 AlarmSrcDevInfo::nodetype() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmSrcDevInfo.nodeType)
  return nodetype_;
}
inline void AlarmSrcDevInfo::set_nodetype(::google::protobuf::int32 value) {
  set_has_nodetype();
  nodetype_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmSrcDevInfo.nodeType)
}

// optional string cascadeDevDomain = 4 [default = ""];
inline bool AlarmSrcDevInfo::has_cascadedevdomain() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmSrcDevInfo::set_has_cascadedevdomain() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmSrcDevInfo::clear_has_cascadedevdomain() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmSrcDevInfo::clear_cascadedevdomain() {
  if (cascadedevdomain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cascadedevdomain_->clear();
  }
  clear_has_cascadedevdomain();
}
inline const ::std::string& AlarmSrcDevInfo::cascadedevdomain() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmSrcDevInfo.cascadeDevDomain)
  return *cascadedevdomain_;
}
inline void AlarmSrcDevInfo::set_cascadedevdomain(const ::std::string& value) {
  set_has_cascadedevdomain();
  if (cascadedevdomain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cascadedevdomain_ = new ::std::string;
  }
  cascadedevdomain_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmSrcDevInfo.cascadeDevDomain)
}
inline void AlarmSrcDevInfo::set_cascadedevdomain(const char* value) {
  set_has_cascadedevdomain();
  if (cascadedevdomain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cascadedevdomain_ = new ::std::string;
  }
  cascadedevdomain_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmSrcDevInfo.cascadeDevDomain)
}
inline void AlarmSrcDevInfo::set_cascadedevdomain(const char* value, size_t size) {
  set_has_cascadedevdomain();
  if (cascadedevdomain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cascadedevdomain_ = new ::std::string;
  }
  cascadedevdomain_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmSrcDevInfo.cascadeDevDomain)
}
inline ::std::string* AlarmSrcDevInfo::mutable_cascadedevdomain() {
  set_has_cascadedevdomain();
  if (cascadedevdomain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cascadedevdomain_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmSrcDevInfo.cascadeDevDomain)
  return cascadedevdomain_;
}
inline ::std::string* AlarmSrcDevInfo::release_cascadedevdomain() {
  clear_has_cascadedevdomain();
  if (cascadedevdomain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = cascadedevdomain_;
    cascadedevdomain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmSrcDevInfo::set_allocated_cascadedevdomain(::std::string* cascadedevdomain) {
  if (cascadedevdomain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cascadedevdomain_;
  }
  if (cascadedevdomain) {
    set_has_cascadedevdomain();
    cascadedevdomain_ = cascadedevdomain;
  } else {
    clear_has_cascadedevdomain();
    cascadedevdomain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmSrcDevInfo.cascadeDevDomain)
}

// -------------------------------------------------------------------

// AlarmTypeData

// optional int64 id = 1 [default = -1];
inline bool AlarmTypeData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmTypeData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmTypeData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmTypeData::clear_id() {
  id_ = GOOGLE_LONGLONG(-1);
  clear_has_id();
}
inline ::google::protobuf::int64 AlarmTypeData::id() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmTypeData.id)
  return id_;
}
inline void AlarmTypeData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmTypeData.id)
}

// optional int32 type = 2 [default = -1];
inline bool AlarmTypeData::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmTypeData::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmTypeData::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmTypeData::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::google::protobuf::int32 AlarmTypeData::type() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmTypeData.type)
  return type_;
}
inline void AlarmTypeData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmTypeData.type)
}

// optional bytes describe = 3 [default = ""];
inline bool AlarmTypeData::has_describe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmTypeData::set_has_describe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmTypeData::clear_has_describe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmTypeData::clear_describe() {
  if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_->clear();
  }
  clear_has_describe();
}
inline const ::std::string& AlarmTypeData::describe() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmTypeData.describe)
  return *describe_;
}
inline void AlarmTypeData::set_describe(const ::std::string& value) {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmTypeData.describe)
}
inline void AlarmTypeData::set_describe(const char* value) {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmTypeData.describe)
}
inline void AlarmTypeData::set_describe(const void* value, size_t size) {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  describe_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmTypeData.describe)
}
inline ::std::string* AlarmTypeData::mutable_describe() {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmTypeData.describe)
  return describe_;
}
inline ::std::string* AlarmTypeData::release_describe() {
  clear_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = describe_;
    describe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmTypeData::set_allocated_describe(::std::string* describe) {
  if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete describe_;
  }
  if (describe) {
    set_has_describe();
    describe_ = describe;
  } else {
    clear_has_describe();
    describe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmTypeData.describe)
}

// -------------------------------------------------------------------

// AlarmTypeMassage

// optional int32 requestType = 1 [default = -1];
inline bool AlarmTypeMassage::has_requesttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmTypeMassage::set_has_requesttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmTypeMassage::clear_has_requesttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmTypeMassage::clear_requesttype() {
  requesttype_ = -1;
  clear_has_requesttype();
}
inline ::google::protobuf::int32 AlarmTypeMassage::requesttype() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmTypeMassage.requestType)
  return requesttype_;
}
inline void AlarmTypeMassage::set_requesttype(::google::protobuf::int32 value) {
  set_has_requesttype();
  requesttype_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmTypeMassage.requestType)
}

// optional int32 result = 2 [default = -1];
inline bool AlarmTypeMassage::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmTypeMassage::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmTypeMassage::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmTypeMassage::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 AlarmTypeMassage::result() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmTypeMassage.result)
  return result_;
}
inline void AlarmTypeMassage::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmTypeMassage.result)
}

// optional bytes resultDescribe = 3 [default = ""];
inline bool AlarmTypeMassage::has_resultdescribe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmTypeMassage::set_has_resultdescribe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmTypeMassage::clear_has_resultdescribe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmTypeMassage::clear_resultdescribe() {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_->clear();
  }
  clear_has_resultdescribe();
}
inline const ::std::string& AlarmTypeMassage::resultdescribe() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmTypeMassage.resultDescribe)
  return *resultdescribe_;
}
inline void AlarmTypeMassage::set_resultdescribe(const ::std::string& value) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmTypeMassage.resultDescribe)
}
inline void AlarmTypeMassage::set_resultdescribe(const char* value) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmTypeMassage.resultDescribe)
}
inline void AlarmTypeMassage::set_resultdescribe(const void* value, size_t size) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmTypeMassage.resultDescribe)
}
inline ::std::string* AlarmTypeMassage::mutable_resultdescribe() {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmTypeMassage.resultDescribe)
  return resultdescribe_;
}
inline ::std::string* AlarmTypeMassage::release_resultdescribe() {
  clear_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = resultdescribe_;
    resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmTypeMassage::set_allocated_resultdescribe(::std::string* resultdescribe) {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdescribe_;
  }
  if (resultdescribe) {
    set_has_resultdescribe();
    resultdescribe_ = resultdescribe;
  } else {
    clear_has_resultdescribe();
    resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmTypeMassage.resultDescribe)
}

// repeated .com.arges.file.proto.AlarmTypeData alarmTypes = 4;
inline int AlarmTypeMassage::alarmtypes_size() const {
  return alarmtypes_.size();
}
inline void AlarmTypeMassage::clear_alarmtypes() {
  alarmtypes_.Clear();
}
inline const ::com::arges::file::proto::AlarmTypeData& AlarmTypeMassage::alarmtypes(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmTypeMassage.alarmTypes)
  return alarmtypes_.Get(index);
}
inline ::com::arges::file::proto::AlarmTypeData* AlarmTypeMassage::mutable_alarmtypes(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmTypeMassage.alarmTypes)
  return alarmtypes_.Mutable(index);
}
inline ::com::arges::file::proto::AlarmTypeData* AlarmTypeMassage::add_alarmtypes() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmTypeMassage.alarmTypes)
  return alarmtypes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmTypeData >&
AlarmTypeMassage::alarmtypes() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmTypeMassage.alarmTypes)
  return alarmtypes_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmTypeData >*
AlarmTypeMassage::mutable_alarmtypes() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmTypeMassage.alarmTypes)
  return &alarmtypes_;
}

// -------------------------------------------------------------------

// ActionTypeData

// optional int64 id = 1 [default = -1];
inline bool ActionTypeData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActionTypeData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActionTypeData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActionTypeData::clear_id() {
  id_ = GOOGLE_LONGLONG(-1);
  clear_has_id();
}
inline ::google::protobuf::int64 ActionTypeData::id() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ActionTypeData.id)
  return id_;
}
inline void ActionTypeData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.ActionTypeData.id)
}

// optional int32 type = 2 [default = -1];
inline bool ActionTypeData::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActionTypeData::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActionTypeData::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActionTypeData::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::google::protobuf::int32 ActionTypeData::type() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ActionTypeData.type)
  return type_;
}
inline void ActionTypeData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.ActionTypeData.type)
}

// optional bytes describe = 3 [default = ""];
inline bool ActionTypeData::has_describe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActionTypeData::set_has_describe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActionTypeData::clear_has_describe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActionTypeData::clear_describe() {
  if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_->clear();
  }
  clear_has_describe();
}
inline const ::std::string& ActionTypeData::describe() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ActionTypeData.describe)
  return *describe_;
}
inline void ActionTypeData::set_describe(const ::std::string& value) {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.ActionTypeData.describe)
}
inline void ActionTypeData::set_describe(const char* value) {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.ActionTypeData.describe)
}
inline void ActionTypeData::set_describe(const void* value, size_t size) {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  describe_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.ActionTypeData.describe)
}
inline ::std::string* ActionTypeData::mutable_describe() {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.ActionTypeData.describe)
  return describe_;
}
inline ::std::string* ActionTypeData::release_describe() {
  clear_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = describe_;
    describe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ActionTypeData::set_allocated_describe(::std::string* describe) {
  if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete describe_;
  }
  if (describe) {
    set_has_describe();
    describe_ = describe;
  } else {
    clear_has_describe();
    describe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.ActionTypeData.describe)
}

// -------------------------------------------------------------------

// ActionTypeMassage

// optional int32 requestType = 1 [default = -1];
inline bool ActionTypeMassage::has_requesttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActionTypeMassage::set_has_requesttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActionTypeMassage::clear_has_requesttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActionTypeMassage::clear_requesttype() {
  requesttype_ = -1;
  clear_has_requesttype();
}
inline ::google::protobuf::int32 ActionTypeMassage::requesttype() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ActionTypeMassage.requestType)
  return requesttype_;
}
inline void ActionTypeMassage::set_requesttype(::google::protobuf::int32 value) {
  set_has_requesttype();
  requesttype_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.ActionTypeMassage.requestType)
}

// optional int32 result = 2 [default = -1];
inline bool ActionTypeMassage::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActionTypeMassage::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActionTypeMassage::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActionTypeMassage::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 ActionTypeMassage::result() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ActionTypeMassage.result)
  return result_;
}
inline void ActionTypeMassage::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.ActionTypeMassage.result)
}

// optional bytes resultDescribe = 3 [default = ""];
inline bool ActionTypeMassage::has_resultdescribe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActionTypeMassage::set_has_resultdescribe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActionTypeMassage::clear_has_resultdescribe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActionTypeMassage::clear_resultdescribe() {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_->clear();
  }
  clear_has_resultdescribe();
}
inline const ::std::string& ActionTypeMassage::resultdescribe() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ActionTypeMassage.resultDescribe)
  return *resultdescribe_;
}
inline void ActionTypeMassage::set_resultdescribe(const ::std::string& value) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.ActionTypeMassage.resultDescribe)
}
inline void ActionTypeMassage::set_resultdescribe(const char* value) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.ActionTypeMassage.resultDescribe)
}
inline void ActionTypeMassage::set_resultdescribe(const void* value, size_t size) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.ActionTypeMassage.resultDescribe)
}
inline ::std::string* ActionTypeMassage::mutable_resultdescribe() {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.ActionTypeMassage.resultDescribe)
  return resultdescribe_;
}
inline ::std::string* ActionTypeMassage::release_resultdescribe() {
  clear_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = resultdescribe_;
    resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ActionTypeMassage::set_allocated_resultdescribe(::std::string* resultdescribe) {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdescribe_;
  }
  if (resultdescribe) {
    set_has_resultdescribe();
    resultdescribe_ = resultdescribe;
  } else {
    clear_has_resultdescribe();
    resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.ActionTypeMassage.resultDescribe)
}

// repeated .com.arges.file.proto.ActionTypeData actionsTypes = 4;
inline int ActionTypeMassage::actionstypes_size() const {
  return actionstypes_.size();
}
inline void ActionTypeMassage::clear_actionstypes() {
  actionstypes_.Clear();
}
inline const ::com::arges::file::proto::ActionTypeData& ActionTypeMassage::actionstypes(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.ActionTypeMassage.actionsTypes)
  return actionstypes_.Get(index);
}
inline ::com::arges::file::proto::ActionTypeData* ActionTypeMassage::mutable_actionstypes(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.ActionTypeMassage.actionsTypes)
  return actionstypes_.Mutable(index);
}
inline ::com::arges::file::proto::ActionTypeData* ActionTypeMassage::add_actionstypes() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.ActionTypeMassage.actionsTypes)
  return actionstypes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::ActionTypeData >&
ActionTypeMassage::actionstypes() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.ActionTypeMassage.actionsTypes)
  return actionstypes_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::ActionTypeData >*
ActionTypeMassage::mutable_actionstypes() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.ActionTypeMassage.actionsTypes)
  return &actionstypes_;
}

// -------------------------------------------------------------------

// AlarmData_RaisuDustAlarm

// optional int32 alarmCap = 1 [default = -1];
inline bool AlarmData_RaisuDustAlarm::has_alarmcap() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmData_RaisuDustAlarm::set_has_alarmcap() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmData_RaisuDustAlarm::clear_has_alarmcap() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmData_RaisuDustAlarm::clear_alarmcap() {
  alarmcap_ = -1;
  clear_has_alarmcap();
}
inline ::google::protobuf::int32 AlarmData_RaisuDustAlarm::alarmcap() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.RaisuDustAlarm.alarmCap)
  return alarmcap_;
}
inline void AlarmData_RaisuDustAlarm::set_alarmcap(::google::protobuf::int32 value) {
  set_has_alarmcap();
  alarmcap_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmData.RaisuDustAlarm.alarmCap)
}

// optional float alarmNum = 2 [default = -1];
inline bool AlarmData_RaisuDustAlarm::has_alarmnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmData_RaisuDustAlarm::set_has_alarmnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmData_RaisuDustAlarm::clear_has_alarmnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmData_RaisuDustAlarm::clear_alarmnum() {
  alarmnum_ = -1;
  clear_has_alarmnum();
}
inline float AlarmData_RaisuDustAlarm::alarmnum() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.RaisuDustAlarm.alarmNum)
  return alarmnum_;
}
inline void AlarmData_RaisuDustAlarm::set_alarmnum(float value) {
  set_has_alarmnum();
  alarmnum_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmData.RaisuDustAlarm.alarmNum)
}

// optional int32 alarmType = 3 [default = -1];
inline bool AlarmData_RaisuDustAlarm::has_alarmtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmData_RaisuDustAlarm::set_has_alarmtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmData_RaisuDustAlarm::clear_has_alarmtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmData_RaisuDustAlarm::clear_alarmtype() {
  alarmtype_ = -1;
  clear_has_alarmtype();
}
inline ::google::protobuf::int32 AlarmData_RaisuDustAlarm::alarmtype() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.RaisuDustAlarm.alarmType)
  return alarmtype_;
}
inline void AlarmData_RaisuDustAlarm::set_alarmtype(::google::protobuf::int32 value) {
  set_has_alarmtype();
  alarmtype_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmData.RaisuDustAlarm.alarmType)
}

// optional float standardNum = 4 [default = -1];
inline bool AlarmData_RaisuDustAlarm::has_standardnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmData_RaisuDustAlarm::set_has_standardnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmData_RaisuDustAlarm::clear_has_standardnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmData_RaisuDustAlarm::clear_standardnum() {
  standardnum_ = -1;
  clear_has_standardnum();
}
inline float AlarmData_RaisuDustAlarm::standardnum() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.RaisuDustAlarm.standardNum)
  return standardnum_;
}
inline void AlarmData_RaisuDustAlarm::set_standardnum(float value) {
  set_has_standardnum();
  standardnum_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmData.RaisuDustAlarm.standardNum)
}

// -------------------------------------------------------------------

// AlarmData

// optional string srcDevCode = 1 [default = ""];
inline bool AlarmData::has_srcdevcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmData::set_has_srcdevcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmData::clear_has_srcdevcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmData::clear_srcdevcode() {
  if (srcdevcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcdevcode_->clear();
  }
  clear_has_srcdevcode();
}
inline const ::std::string& AlarmData::srcdevcode() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.srcDevCode)
  return *srcdevcode_;
}
inline void AlarmData::set_srcdevcode(const ::std::string& value) {
  set_has_srcdevcode();
  if (srcdevcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcdevcode_ = new ::std::string;
  }
  srcdevcode_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmData.srcDevCode)
}
inline void AlarmData::set_srcdevcode(const char* value) {
  set_has_srcdevcode();
  if (srcdevcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcdevcode_ = new ::std::string;
  }
  srcdevcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmData.srcDevCode)
}
inline void AlarmData::set_srcdevcode(const char* value, size_t size) {
  set_has_srcdevcode();
  if (srcdevcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcdevcode_ = new ::std::string;
  }
  srcdevcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmData.srcDevCode)
}
inline ::std::string* AlarmData::mutable_srcdevcode() {
  set_has_srcdevcode();
  if (srcdevcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcdevcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmData.srcDevCode)
  return srcdevcode_;
}
inline ::std::string* AlarmData::release_srcdevcode() {
  clear_has_srcdevcode();
  if (srcdevcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = srcdevcode_;
    srcdevcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmData::set_allocated_srcdevcode(::std::string* srcdevcode) {
  if (srcdevcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srcdevcode_;
  }
  if (srcdevcode) {
    set_has_srcdevcode();
    srcdevcode_ = srcdevcode;
  } else {
    clear_has_srcdevcode();
    srcdevcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmData.srcDevCode)
}

// optional int32 srcDevChannelSeq = 2 [default = -1];
inline bool AlarmData::has_srcdevchannelseq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmData::set_has_srcdevchannelseq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmData::clear_has_srcdevchannelseq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmData::clear_srcdevchannelseq() {
  srcdevchannelseq_ = -1;
  clear_has_srcdevchannelseq();
}
inline ::google::protobuf::int32 AlarmData::srcdevchannelseq() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.srcDevChannelSeq)
  return srcdevchannelseq_;
}
inline void AlarmData::set_srcdevchannelseq(::google::protobuf::int32 value) {
  set_has_srcdevchannelseq();
  srcdevchannelseq_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmData.srcDevChannelSeq)
}

// optional int32 alarmType = 3;
inline bool AlarmData::has_alarmtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmData::set_has_alarmtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmData::clear_has_alarmtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmData::clear_alarmtype() {
  alarmtype_ = 0;
  clear_has_alarmtype();
}
inline ::google::protobuf::int32 AlarmData::alarmtype() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.alarmType)
  return alarmtype_;
}
inline void AlarmData::set_alarmtype(::google::protobuf::int32 value) {
  set_has_alarmtype();
  alarmtype_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmData.alarmType)
}

// optional string alarmName = 4 [default = ""];
inline bool AlarmData::has_alarmname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmData::set_has_alarmname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmData::clear_has_alarmname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmData::clear_alarmname() {
  if (alarmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarmname_->clear();
  }
  clear_has_alarmname();
}
inline const ::std::string& AlarmData::alarmname() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.alarmName)
  return *alarmname_;
}
inline void AlarmData::set_alarmname(const ::std::string& value) {
  set_has_alarmname();
  if (alarmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarmname_ = new ::std::string;
  }
  alarmname_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmData.alarmName)
}
inline void AlarmData::set_alarmname(const char* value) {
  set_has_alarmname();
  if (alarmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarmname_ = new ::std::string;
  }
  alarmname_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmData.alarmName)
}
inline void AlarmData::set_alarmname(const char* value, size_t size) {
  set_has_alarmname();
  if (alarmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarmname_ = new ::std::string;
  }
  alarmname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmData.alarmName)
}
inline ::std::string* AlarmData::mutable_alarmname() {
  set_has_alarmname();
  if (alarmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarmname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmData.alarmName)
  return alarmname_;
}
inline ::std::string* AlarmData::release_alarmname() {
  clear_has_alarmname();
  if (alarmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = alarmname_;
    alarmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmData::set_allocated_alarmname(::std::string* alarmname) {
  if (alarmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete alarmname_;
  }
  if (alarmname) {
    set_has_alarmname();
    alarmname_ = alarmname;
  } else {
    clear_has_alarmname();
    alarmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmData.alarmName)
}

// optional bytes alarmDescirbe = 5 [default = ""];
inline bool AlarmData::has_alarmdescirbe() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlarmData::set_has_alarmdescirbe() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AlarmData::clear_has_alarmdescirbe() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AlarmData::clear_alarmdescirbe() {
  if (alarmdescirbe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarmdescirbe_->clear();
  }
  clear_has_alarmdescirbe();
}
inline const ::std::string& AlarmData::alarmdescirbe() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.alarmDescirbe)
  return *alarmdescirbe_;
}
inline void AlarmData::set_alarmdescirbe(const ::std::string& value) {
  set_has_alarmdescirbe();
  if (alarmdescirbe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarmdescirbe_ = new ::std::string;
  }
  alarmdescirbe_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmData.alarmDescirbe)
}
inline void AlarmData::set_alarmdescirbe(const char* value) {
  set_has_alarmdescirbe();
  if (alarmdescirbe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarmdescirbe_ = new ::std::string;
  }
  alarmdescirbe_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmData.alarmDescirbe)
}
inline void AlarmData::set_alarmdescirbe(const void* value, size_t size) {
  set_has_alarmdescirbe();
  if (alarmdescirbe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarmdescirbe_ = new ::std::string;
  }
  alarmdescirbe_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmData.alarmDescirbe)
}
inline ::std::string* AlarmData::mutable_alarmdescirbe() {
  set_has_alarmdescirbe();
  if (alarmdescirbe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarmdescirbe_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmData.alarmDescirbe)
  return alarmdescirbe_;
}
inline ::std::string* AlarmData::release_alarmdescirbe() {
  clear_has_alarmdescirbe();
  if (alarmdescirbe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = alarmdescirbe_;
    alarmdescirbe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmData::set_allocated_alarmdescirbe(::std::string* alarmdescirbe) {
  if (alarmdescirbe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete alarmdescirbe_;
  }
  if (alarmdescirbe) {
    set_has_alarmdescirbe();
    alarmdescirbe_ = alarmdescirbe;
  } else {
    clear_has_alarmdescirbe();
    alarmdescirbe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmData.alarmDescirbe)
}

// optional .com.arges.file.proto.DeviceInfo currentAlarmDev = 6;
inline bool AlarmData::has_currentalarmdev() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AlarmData::set_has_currentalarmdev() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AlarmData::clear_has_currentalarmdev() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AlarmData::clear_currentalarmdev() {
  if (currentalarmdev_ != NULL) currentalarmdev_->::com::arges::file::proto::DeviceInfo::Clear();
  clear_has_currentalarmdev();
}
inline const ::com::arges::file::proto::DeviceInfo& AlarmData::currentalarmdev() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.currentAlarmDev)
  return currentalarmdev_ != NULL ? *currentalarmdev_ : *default_instance_->currentalarmdev_;
}
inline ::com::arges::file::proto::DeviceInfo* AlarmData::mutable_currentalarmdev() {
  set_has_currentalarmdev();
  if (currentalarmdev_ == NULL) currentalarmdev_ = new ::com::arges::file::proto::DeviceInfo;
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmData.currentAlarmDev)
  return currentalarmdev_;
}
inline ::com::arges::file::proto::DeviceInfo* AlarmData::release_currentalarmdev() {
  clear_has_currentalarmdev();
  ::com::arges::file::proto::DeviceInfo* temp = currentalarmdev_;
  currentalarmdev_ = NULL;
  return temp;
}
inline void AlarmData::set_allocated_currentalarmdev(::com::arges::file::proto::DeviceInfo* currentalarmdev) {
  delete currentalarmdev_;
  currentalarmdev_ = currentalarmdev;
  if (currentalarmdev) {
    set_has_currentalarmdev();
  } else {
    clear_has_currentalarmdev();
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmData.currentAlarmDev)
}

// optional .com.arges.file.proto.ActionLinkData action = 7;
inline bool AlarmData::has_action() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AlarmData::set_has_action() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AlarmData::clear_has_action() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AlarmData::clear_action() {
  if (action_ != NULL) action_->::com::arges::file::proto::ActionLinkData::Clear();
  clear_has_action();
}
inline const ::com::arges::file::proto::ActionLinkData& AlarmData::action() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.action)
  return action_ != NULL ? *action_ : *default_instance_->action_;
}
inline ::com::arges::file::proto::ActionLinkData* AlarmData::mutable_action() {
  set_has_action();
  if (action_ == NULL) action_ = new ::com::arges::file::proto::ActionLinkData;
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmData.action)
  return action_;
}
inline ::com::arges::file::proto::ActionLinkData* AlarmData::release_action() {
  clear_has_action();
  ::com::arges::file::proto::ActionLinkData* temp = action_;
  action_ = NULL;
  return temp;
}
inline void AlarmData::set_allocated_action(::com::arges::file::proto::ActionLinkData* action) {
  delete action_;
  action_ = action;
  if (action) {
    set_has_action();
  } else {
    clear_has_action();
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmData.action)
}

// optional int64 alarmTime = 8;
inline bool AlarmData::has_alarmtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AlarmData::set_has_alarmtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AlarmData::clear_has_alarmtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AlarmData::clear_alarmtime() {
  alarmtime_ = GOOGLE_LONGLONG(0);
  clear_has_alarmtime();
}
inline ::google::protobuf::int64 AlarmData::alarmtime() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.alarmTime)
  return alarmtime_;
}
inline void AlarmData::set_alarmtime(::google::protobuf::int64 value) {
  set_has_alarmtime();
  alarmtime_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmData.alarmTime)
}

// optional bool isAlarmHost = 9;
inline bool AlarmData::has_isalarmhost() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AlarmData::set_has_isalarmhost() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AlarmData::clear_has_isalarmhost() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AlarmData::clear_isalarmhost() {
  isalarmhost_ = false;
  clear_has_isalarmhost();
}
inline bool AlarmData::isalarmhost() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.isAlarmHost)
  return isalarmhost_;
}
inline void AlarmData::set_isalarmhost(bool value) {
  set_has_isalarmhost();
  isalarmhost_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmData.isAlarmHost)
}

// optional int32 AlarmFlag = 10;
inline bool AlarmData::has_alarmflag() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AlarmData::set_has_alarmflag() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AlarmData::clear_has_alarmflag() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AlarmData::clear_alarmflag() {
  alarmflag_ = 0;
  clear_has_alarmflag();
}
inline ::google::protobuf::int32 AlarmData::alarmflag() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.AlarmFlag)
  return alarmflag_;
}
inline void AlarmData::set_alarmflag(::google::protobuf::int32 value) {
  set_has_alarmflag();
  alarmflag_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmData.AlarmFlag)
}

// optional string sn = 11 [default = ""];
inline bool AlarmData::has_sn() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AlarmData::set_has_sn() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AlarmData::clear_has_sn() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AlarmData::clear_sn() {
  if (sn_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sn_->clear();
  }
  clear_has_sn();
}
inline const ::std::string& AlarmData::sn() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.sn)
  return *sn_;
}
inline void AlarmData::set_sn(const ::std::string& value) {
  set_has_sn();
  if (sn_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sn_ = new ::std::string;
  }
  sn_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmData.sn)
}
inline void AlarmData::set_sn(const char* value) {
  set_has_sn();
  if (sn_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sn_ = new ::std::string;
  }
  sn_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmData.sn)
}
inline void AlarmData::set_sn(const char* value, size_t size) {
  set_has_sn();
  if (sn_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sn_ = new ::std::string;
  }
  sn_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmData.sn)
}
inline ::std::string* AlarmData::mutable_sn() {
  set_has_sn();
  if (sn_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sn_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmData.sn)
  return sn_;
}
inline ::std::string* AlarmData::release_sn() {
  clear_has_sn();
  if (sn_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sn_;
    sn_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmData::set_allocated_sn(::std::string* sn) {
  if (sn_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sn_;
  }
  if (sn) {
    set_has_sn();
    sn_ = sn;
  } else {
    clear_has_sn();
    sn_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmData.sn)
}

// repeated .com.arges.file.proto.AlarmData.RaisuDustAlarm raiseAlarms = 12;
inline int AlarmData::raisealarms_size() const {
  return raisealarms_.size();
}
inline void AlarmData::clear_raisealarms() {
  raisealarms_.Clear();
}
inline const ::com::arges::file::proto::AlarmData_RaisuDustAlarm& AlarmData::raisealarms(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmData.raiseAlarms)
  return raisealarms_.Get(index);
}
inline ::com::arges::file::proto::AlarmData_RaisuDustAlarm* AlarmData::mutable_raisealarms(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmData.raiseAlarms)
  return raisealarms_.Mutable(index);
}
inline ::com::arges::file::proto::AlarmData_RaisuDustAlarm* AlarmData::add_raisealarms() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmData.raiseAlarms)
  return raisealarms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmData_RaisuDustAlarm >&
AlarmData::raisealarms() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmData.raiseAlarms)
  return raisealarms_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmData_RaisuDustAlarm >*
AlarmData::mutable_raisealarms() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmData.raiseAlarms)
  return &raisealarms_;
}

// -------------------------------------------------------------------

// AlarmMassage

// optional int32 result = 1 [default = -1];
inline bool AlarmMassage::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmMassage::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmMassage::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmMassage::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 AlarmMassage::result() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmMassage.result)
  return result_;
}
inline void AlarmMassage::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmMassage.result)
}

// optional bytes resultDescribe = 2 [default = ""];
inline bool AlarmMassage::has_resultdescribe() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmMassage::set_has_resultdescribe() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmMassage::clear_has_resultdescribe() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmMassage::clear_resultdescribe() {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_->clear();
  }
  clear_has_resultdescribe();
}
inline const ::std::string& AlarmMassage::resultdescribe() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmMassage.resultDescribe)
  return *resultdescribe_;
}
inline void AlarmMassage::set_resultdescribe(const ::std::string& value) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmMassage.resultDescribe)
}
inline void AlarmMassage::set_resultdescribe(const char* value) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmMassage.resultDescribe)
}
inline void AlarmMassage::set_resultdescribe(const void* value, size_t size) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmMassage.resultDescribe)
}
inline ::std::string* AlarmMassage::mutable_resultdescribe() {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmMassage.resultDescribe)
  return resultdescribe_;
}
inline ::std::string* AlarmMassage::release_resultdescribe() {
  clear_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = resultdescribe_;
    resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmMassage::set_allocated_resultdescribe(::std::string* resultdescribe) {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdescribe_;
  }
  if (resultdescribe) {
    set_has_resultdescribe();
    resultdescribe_ = resultdescribe;
  } else {
    clear_has_resultdescribe();
    resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmMassage.resultDescribe)
}

// repeated int64 userId = 3;
inline int AlarmMassage::userid_size() const {
  return userid_.size();
}
inline void AlarmMassage::clear_userid() {
  userid_.Clear();
}
inline ::google::protobuf::int64 AlarmMassage::userid(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmMassage.userId)
  return userid_.Get(index);
}
inline void AlarmMassage::set_userid(int index, ::google::protobuf::int64 value) {
  userid_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmMassage.userId)
}
inline void AlarmMassage::add_userid(::google::protobuf::int64 value) {
  userid_.Add(value);
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmMassage.userId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AlarmMassage::userid() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmMassage.userId)
  return userid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AlarmMassage::mutable_userid() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmMassage.userId)
  return &userid_;
}

// optional .com.arges.file.proto.AlarmData alarm = 4;
inline bool AlarmMassage::has_alarm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmMassage::set_has_alarm() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmMassage::clear_has_alarm() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmMassage::clear_alarm() {
  if (alarm_ != NULL) alarm_->::com::arges::file::proto::AlarmData::Clear();
  clear_has_alarm();
}
inline const ::com::arges::file::proto::AlarmData& AlarmMassage::alarm() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmMassage.alarm)
  return alarm_ != NULL ? *alarm_ : *default_instance_->alarm_;
}
inline ::com::arges::file::proto::AlarmData* AlarmMassage::mutable_alarm() {
  set_has_alarm();
  if (alarm_ == NULL) alarm_ = new ::com::arges::file::proto::AlarmData;
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmMassage.alarm)
  return alarm_;
}
inline ::com::arges::file::proto::AlarmData* AlarmMassage::release_alarm() {
  clear_has_alarm();
  ::com::arges::file::proto::AlarmData* temp = alarm_;
  alarm_ = NULL;
  return temp;
}
inline void AlarmMassage::set_allocated_alarm(::com::arges::file::proto::AlarmData* alarm) {
  delete alarm_;
  alarm_ = alarm;
  if (alarm) {
    set_has_alarm();
  } else {
    clear_has_alarm();
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmMassage.alarm)
}

// -------------------------------------------------------------------

// AlarmPlanData

// optional string id = 1 [default = ""];
inline bool AlarmPlanData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmPlanData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmPlanData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmPlanData::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& AlarmPlanData::id() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmPlanData.id)
  return *id_;
}
inline void AlarmPlanData::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmPlanData.id)
}
inline void AlarmPlanData::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmPlanData.id)
}
inline void AlarmPlanData::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmPlanData.id)
}
inline ::std::string* AlarmPlanData::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmPlanData.id)
  return id_;
}
inline ::std::string* AlarmPlanData::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmPlanData::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmPlanData.id)
}

// repeated int64 userId = 2;
inline int AlarmPlanData::userid_size() const {
  return userid_.size();
}
inline void AlarmPlanData::clear_userid() {
  userid_.Clear();
}
inline ::google::protobuf::int64 AlarmPlanData::userid(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmPlanData.userId)
  return userid_.Get(index);
}
inline void AlarmPlanData::set_userid(int index, ::google::protobuf::int64 value) {
  userid_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmPlanData.userId)
}
inline void AlarmPlanData::add_userid(::google::protobuf::int64 value) {
  userid_.Add(value);
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmPlanData.userId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AlarmPlanData::userid() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmPlanData.userId)
  return userid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AlarmPlanData::mutable_userid() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmPlanData.userId)
  return &userid_;
}

// optional int32 userType = 3 [default = -1];
inline bool AlarmPlanData::has_usertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmPlanData::set_has_usertype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmPlanData::clear_has_usertype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmPlanData::clear_usertype() {
  usertype_ = -1;
  clear_has_usertype();
}
inline ::google::protobuf::int32 AlarmPlanData::usertype() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmPlanData.userType)
  return usertype_;
}
inline void AlarmPlanData::set_usertype(::google::protobuf::int32 value) {
  set_has_usertype();
  usertype_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmPlanData.userType)
}

// optional string name = 4 [default = ""];
inline bool AlarmPlanData::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmPlanData::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmPlanData::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmPlanData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AlarmPlanData::name() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmPlanData.name)
  return *name_;
}
inline void AlarmPlanData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmPlanData.name)
}
inline void AlarmPlanData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmPlanData.name)
}
inline void AlarmPlanData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmPlanData.name)
}
inline ::std::string* AlarmPlanData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmPlanData.name)
  return name_;
}
inline ::std::string* AlarmPlanData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmPlanData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmPlanData.name)
}

// optional .com.arges.file.proto.TimeTemplateData timeTemplat = 5;
inline bool AlarmPlanData::has_timetemplat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlarmPlanData::set_has_timetemplat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AlarmPlanData::clear_has_timetemplat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AlarmPlanData::clear_timetemplat() {
  if (timetemplat_ != NULL) timetemplat_->::com::arges::file::proto::TimeTemplateData::Clear();
  clear_has_timetemplat();
}
inline const ::com::arges::file::proto::TimeTemplateData& AlarmPlanData::timetemplat() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmPlanData.timeTemplat)
  return timetemplat_ != NULL ? *timetemplat_ : *default_instance_->timetemplat_;
}
inline ::com::arges::file::proto::TimeTemplateData* AlarmPlanData::mutable_timetemplat() {
  set_has_timetemplat();
  if (timetemplat_ == NULL) timetemplat_ = new ::com::arges::file::proto::TimeTemplateData;
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmPlanData.timeTemplat)
  return timetemplat_;
}
inline ::com::arges::file::proto::TimeTemplateData* AlarmPlanData::release_timetemplat() {
  clear_has_timetemplat();
  ::com::arges::file::proto::TimeTemplateData* temp = timetemplat_;
  timetemplat_ = NULL;
  return temp;
}
inline void AlarmPlanData::set_allocated_timetemplat(::com::arges::file::proto::TimeTemplateData* timetemplat) {
  delete timetemplat_;
  timetemplat_ = timetemplat;
  if (timetemplat) {
    set_has_timetemplat();
  } else {
    clear_has_timetemplat();
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmPlanData.timeTemplat)
}

// optional int32 state = 6 [default = -1];
inline bool AlarmPlanData::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AlarmPlanData::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AlarmPlanData::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AlarmPlanData::clear_state() {
  state_ = -1;
  clear_has_state();
}
inline ::google::protobuf::int32 AlarmPlanData::state() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmPlanData.state)
  return state_;
}
inline void AlarmPlanData::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmPlanData.state)
}

// optional bytes describe = 7 [default = ""];
inline bool AlarmPlanData::has_describe() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AlarmPlanData::set_has_describe() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AlarmPlanData::clear_has_describe() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AlarmPlanData::clear_describe() {
  if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_->clear();
  }
  clear_has_describe();
}
inline const ::std::string& AlarmPlanData::describe() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmPlanData.describe)
  return *describe_;
}
inline void AlarmPlanData::set_describe(const ::std::string& value) {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmPlanData.describe)
}
inline void AlarmPlanData::set_describe(const char* value) {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmPlanData.describe)
}
inline void AlarmPlanData::set_describe(const void* value, size_t size) {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  describe_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmPlanData.describe)
}
inline ::std::string* AlarmPlanData::mutable_describe() {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    describe_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmPlanData.describe)
  return describe_;
}
inline ::std::string* AlarmPlanData::release_describe() {
  clear_has_describe();
  if (describe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = describe_;
    describe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmPlanData::set_allocated_describe(::std::string* describe) {
  if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete describe_;
  }
  if (describe) {
    set_has_describe();
    describe_ = describe;
  } else {
    clear_has_describe();
    describe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmPlanData.describe)
}

// repeated .com.arges.file.proto.AlarmRuleData alarms = 8;
inline int AlarmPlanData::alarms_size() const {
  return alarms_.size();
}
inline void AlarmPlanData::clear_alarms() {
  alarms_.Clear();
}
inline const ::com::arges::file::proto::AlarmRuleData& AlarmPlanData::alarms(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmPlanData.alarms)
  return alarms_.Get(index);
}
inline ::com::arges::file::proto::AlarmRuleData* AlarmPlanData::mutable_alarms(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmPlanData.alarms)
  return alarms_.Mutable(index);
}
inline ::com::arges::file::proto::AlarmRuleData* AlarmPlanData::add_alarms() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmPlanData.alarms)
  return alarms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRuleData >&
AlarmPlanData::alarms() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmPlanData.alarms)
  return alarms_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRuleData >*
AlarmPlanData::mutable_alarms() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmPlanData.alarms)
  return &alarms_;
}

// repeated .com.arges.file.proto.SoundLinkData sounds = 9;
inline int AlarmPlanData::sounds_size() const {
  return sounds_.size();
}
inline void AlarmPlanData::clear_sounds() {
  sounds_.Clear();
}
inline const ::com::arges::file::proto::SoundLinkData& AlarmPlanData::sounds(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmPlanData.sounds)
  return sounds_.Get(index);
}
inline ::com::arges::file::proto::SoundLinkData* AlarmPlanData::mutable_sounds(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmPlanData.sounds)
  return sounds_.Mutable(index);
}
inline ::com::arges::file::proto::SoundLinkData* AlarmPlanData::add_sounds() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmPlanData.sounds)
  return sounds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::SoundLinkData >&
AlarmPlanData::sounds() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmPlanData.sounds)
  return sounds_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::SoundLinkData >*
AlarmPlanData::mutable_sounds() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmPlanData.sounds)
  return &sounds_;
}

// -------------------------------------------------------------------

// AlarmRuleData

// optional int64 ruleId = 1 [default = -1];
inline bool AlarmRuleData::has_ruleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmRuleData::set_has_ruleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmRuleData::clear_has_ruleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmRuleData::clear_ruleid() {
  ruleid_ = GOOGLE_LONGLONG(-1);
  clear_has_ruleid();
}
inline ::google::protobuf::int64 AlarmRuleData::ruleid() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRuleData.ruleId)
  return ruleid_;
}
inline void AlarmRuleData::set_ruleid(::google::protobuf::int64 value) {
  set_has_ruleid();
  ruleid_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRuleData.ruleId)
}

// optional int64 planId = 2 [default = -1];
inline bool AlarmRuleData::has_planid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmRuleData::set_has_planid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmRuleData::clear_has_planid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmRuleData::clear_planid() {
  planid_ = GOOGLE_LONGLONG(-1);
  clear_has_planid();
}
inline ::google::protobuf::int64 AlarmRuleData::planid() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRuleData.planId)
  return planid_;
}
inline void AlarmRuleData::set_planid(::google::protobuf::int64 value) {
  set_has_planid();
  planid_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRuleData.planId)
}

// repeated int64 alarmType = 3;
inline int AlarmRuleData::alarmtype_size() const {
  return alarmtype_.size();
}
inline void AlarmRuleData::clear_alarmtype() {
  alarmtype_.Clear();
}
inline ::google::protobuf::int64 AlarmRuleData::alarmtype(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRuleData.alarmType)
  return alarmtype_.Get(index);
}
inline void AlarmRuleData::set_alarmtype(int index, ::google::protobuf::int64 value) {
  alarmtype_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRuleData.alarmType)
}
inline void AlarmRuleData::add_alarmtype(::google::protobuf::int64 value) {
  alarmtype_.Add(value);
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmRuleData.alarmType)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AlarmRuleData::alarmtype() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmRuleData.alarmType)
  return alarmtype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AlarmRuleData::mutable_alarmtype() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmRuleData.alarmType)
  return &alarmtype_;
}

// optional string ruleName = 4 [default = ""];
inline bool AlarmRuleData::has_rulename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmRuleData::set_has_rulename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmRuleData::clear_has_rulename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmRuleData::clear_rulename() {
  if (rulename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rulename_->clear();
  }
  clear_has_rulename();
}
inline const ::std::string& AlarmRuleData::rulename() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRuleData.ruleName)
  return *rulename_;
}
inline void AlarmRuleData::set_rulename(const ::std::string& value) {
  set_has_rulename();
  if (rulename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rulename_ = new ::std::string;
  }
  rulename_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRuleData.ruleName)
}
inline void AlarmRuleData::set_rulename(const char* value) {
  set_has_rulename();
  if (rulename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rulename_ = new ::std::string;
  }
  rulename_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmRuleData.ruleName)
}
inline void AlarmRuleData::set_rulename(const char* value, size_t size) {
  set_has_rulename();
  if (rulename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rulename_ = new ::std::string;
  }
  rulename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmRuleData.ruleName)
}
inline ::std::string* AlarmRuleData::mutable_rulename() {
  set_has_rulename();
  if (rulename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rulename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRuleData.ruleName)
  return rulename_;
}
inline ::std::string* AlarmRuleData::release_rulename() {
  clear_has_rulename();
  if (rulename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rulename_;
    rulename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmRuleData::set_allocated_rulename(::std::string* rulename) {
  if (rulename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rulename_;
  }
  if (rulename) {
    set_has_rulename();
    rulename_ = rulename;
  } else {
    clear_has_rulename();
    rulename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmRuleData.ruleName)
}

// optional bytes ruleDescribe = 5 [default = ""];
inline bool AlarmRuleData::has_ruledescribe() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlarmRuleData::set_has_ruledescribe() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AlarmRuleData::clear_has_ruledescribe() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AlarmRuleData::clear_ruledescribe() {
  if (ruledescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ruledescribe_->clear();
  }
  clear_has_ruledescribe();
}
inline const ::std::string& AlarmRuleData::ruledescribe() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRuleData.ruleDescribe)
  return *ruledescribe_;
}
inline void AlarmRuleData::set_ruledescribe(const ::std::string& value) {
  set_has_ruledescribe();
  if (ruledescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ruledescribe_ = new ::std::string;
  }
  ruledescribe_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRuleData.ruleDescribe)
}
inline void AlarmRuleData::set_ruledescribe(const char* value) {
  set_has_ruledescribe();
  if (ruledescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ruledescribe_ = new ::std::string;
  }
  ruledescribe_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmRuleData.ruleDescribe)
}
inline void AlarmRuleData::set_ruledescribe(const void* value, size_t size) {
  set_has_ruledescribe();
  if (ruledescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ruledescribe_ = new ::std::string;
  }
  ruledescribe_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmRuleData.ruleDescribe)
}
inline ::std::string* AlarmRuleData::mutable_ruledescribe() {
  set_has_ruledescribe();
  if (ruledescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ruledescribe_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRuleData.ruleDescribe)
  return ruledescribe_;
}
inline ::std::string* AlarmRuleData::release_ruledescribe() {
  clear_has_ruledescribe();
  if (ruledescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ruledescribe_;
    ruledescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmRuleData::set_allocated_ruledescribe(::std::string* ruledescribe) {
  if (ruledescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ruledescribe_;
  }
  if (ruledescribe) {
    set_has_ruledescribe();
    ruledescribe_ = ruledescribe;
  } else {
    clear_has_ruledescribe();
    ruledescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmRuleData.ruleDescribe)
}

// optional int32 state = 7 [default = -1];
inline bool AlarmRuleData::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AlarmRuleData::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AlarmRuleData::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AlarmRuleData::clear_state() {
  state_ = -1;
  clear_has_state();
}
inline ::google::protobuf::int32 AlarmRuleData::state() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRuleData.state)
  return state_;
}
inline void AlarmRuleData::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRuleData.state)
}

// repeated .com.arges.file.proto.AlarmSrcDevInfo srcDevs = 8;
inline int AlarmRuleData::srcdevs_size() const {
  return srcdevs_.size();
}
inline void AlarmRuleData::clear_srcdevs() {
  srcdevs_.Clear();
}
inline const ::com::arges::file::proto::AlarmSrcDevInfo& AlarmRuleData::srcdevs(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRuleData.srcDevs)
  return srcdevs_.Get(index);
}
inline ::com::arges::file::proto::AlarmSrcDevInfo* AlarmRuleData::mutable_srcdevs(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRuleData.srcDevs)
  return srcdevs_.Mutable(index);
}
inline ::com::arges::file::proto::AlarmSrcDevInfo* AlarmRuleData::add_srcdevs() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmRuleData.srcDevs)
  return srcdevs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmSrcDevInfo >&
AlarmRuleData::srcdevs() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmRuleData.srcDevs)
  return srcdevs_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmSrcDevInfo >*
AlarmRuleData::mutable_srcdevs() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmRuleData.srcDevs)
  return &srcdevs_;
}

// optional .com.arges.file.proto.ActionLinkData action = 9;
inline bool AlarmRuleData::has_action() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AlarmRuleData::set_has_action() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AlarmRuleData::clear_has_action() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AlarmRuleData::clear_action() {
  if (action_ != NULL) action_->::com::arges::file::proto::ActionLinkData::Clear();
  clear_has_action();
}
inline const ::com::arges::file::proto::ActionLinkData& AlarmRuleData::action() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRuleData.action)
  return action_ != NULL ? *action_ : *default_instance_->action_;
}
inline ::com::arges::file::proto::ActionLinkData* AlarmRuleData::mutable_action() {
  set_has_action();
  if (action_ == NULL) action_ = new ::com::arges::file::proto::ActionLinkData;
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRuleData.action)
  return action_;
}
inline ::com::arges::file::proto::ActionLinkData* AlarmRuleData::release_action() {
  clear_has_action();
  ::com::arges::file::proto::ActionLinkData* temp = action_;
  action_ = NULL;
  return temp;
}
inline void AlarmRuleData::set_allocated_action(::com::arges::file::proto::ActionLinkData* action) {
  delete action_;
  action_ = action;
  if (action) {
    set_has_action();
  } else {
    clear_has_action();
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmRuleData.action)
}

// repeated .com.arges.file.proto.DeviceInfo srcDevsFromDis = 10;
inline int AlarmRuleData::srcdevsfromdis_size() const {
  return srcdevsfromdis_.size();
}
inline void AlarmRuleData::clear_srcdevsfromdis() {
  srcdevsfromdis_.Clear();
}
inline const ::com::arges::file::proto::DeviceInfo& AlarmRuleData::srcdevsfromdis(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRuleData.srcDevsFromDis)
  return srcdevsfromdis_.Get(index);
}
inline ::com::arges::file::proto::DeviceInfo* AlarmRuleData::mutable_srcdevsfromdis(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRuleData.srcDevsFromDis)
  return srcdevsfromdis_.Mutable(index);
}
inline ::com::arges::file::proto::DeviceInfo* AlarmRuleData::add_srcdevsfromdis() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmRuleData.srcDevsFromDis)
  return srcdevsfromdis_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::DeviceInfo >&
AlarmRuleData::srcdevsfromdis() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmRuleData.srcDevsFromDis)
  return srcdevsfromdis_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::DeviceInfo >*
AlarmRuleData::mutable_srcdevsfromdis() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmRuleData.srcDevsFromDis)
  return &srcdevsfromdis_;
}

// -------------------------------------------------------------------

// AlarmPlanMassage

// optional int32 requestType = 1 [default = -1];
inline bool AlarmPlanMassage::has_requesttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmPlanMassage::set_has_requesttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmPlanMassage::clear_has_requesttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmPlanMassage::clear_requesttype() {
  requesttype_ = -1;
  clear_has_requesttype();
}
inline ::google::protobuf::int32 AlarmPlanMassage::requesttype() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmPlanMassage.requestType)
  return requesttype_;
}
inline void AlarmPlanMassage::set_requesttype(::google::protobuf::int32 value) {
  set_has_requesttype();
  requesttype_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmPlanMassage.requestType)
}

// optional int32 result = 2 [default = -1];
inline bool AlarmPlanMassage::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmPlanMassage::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmPlanMassage::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmPlanMassage::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 AlarmPlanMassage::result() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmPlanMassage.result)
  return result_;
}
inline void AlarmPlanMassage::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmPlanMassage.result)
}

// optional bytes resultDescribe = 3 [default = ""];
inline bool AlarmPlanMassage::has_resultdescribe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmPlanMassage::set_has_resultdescribe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmPlanMassage::clear_has_resultdescribe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmPlanMassage::clear_resultdescribe() {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_->clear();
  }
  clear_has_resultdescribe();
}
inline const ::std::string& AlarmPlanMassage::resultdescribe() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmPlanMassage.resultDescribe)
  return *resultdescribe_;
}
inline void AlarmPlanMassage::set_resultdescribe(const ::std::string& value) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmPlanMassage.resultDescribe)
}
inline void AlarmPlanMassage::set_resultdescribe(const char* value) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmPlanMassage.resultDescribe)
}
inline void AlarmPlanMassage::set_resultdescribe(const void* value, size_t size) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmPlanMassage.resultDescribe)
}
inline ::std::string* AlarmPlanMassage::mutable_resultdescribe() {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmPlanMassage.resultDescribe)
  return resultdescribe_;
}
inline ::std::string* AlarmPlanMassage::release_resultdescribe() {
  clear_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = resultdescribe_;
    resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmPlanMassage::set_allocated_resultdescribe(::std::string* resultdescribe) {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdescribe_;
  }
  if (resultdescribe) {
    set_has_resultdescribe();
    resultdescribe_ = resultdescribe;
  } else {
    clear_has_resultdescribe();
    resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmPlanMassage.resultDescribe)
}

// repeated string id = 4;
inline int AlarmPlanMassage::id_size() const {
  return id_.size();
}
inline void AlarmPlanMassage::clear_id() {
  id_.Clear();
}
inline const ::std::string& AlarmPlanMassage::id(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmPlanMassage.id)
  return id_.Get(index);
}
inline ::std::string* AlarmPlanMassage::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmPlanMassage.id)
  return id_.Mutable(index);
}
inline void AlarmPlanMassage::set_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmPlanMassage.id)
  id_.Mutable(index)->assign(value);
}
inline void AlarmPlanMassage::set_id(int index, const char* value) {
  id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmPlanMassage.id)
}
inline void AlarmPlanMassage::set_id(int index, const char* value, size_t size) {
  id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmPlanMassage.id)
}
inline ::std::string* AlarmPlanMassage::add_id() {
  return id_.Add();
}
inline void AlarmPlanMassage::add_id(const ::std::string& value) {
  id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmPlanMassage.id)
}
inline void AlarmPlanMassage::add_id(const char* value) {
  id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.arges.file.proto.AlarmPlanMassage.id)
}
inline void AlarmPlanMassage::add_id(const char* value, size_t size) {
  id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.arges.file.proto.AlarmPlanMassage.id)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AlarmPlanMassage::id() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmPlanMassage.id)
  return id_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AlarmPlanMassage::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmPlanMassage.id)
  return &id_;
}

// optional string name = 5 [default = ""];
inline bool AlarmPlanMassage::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlarmPlanMassage::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AlarmPlanMassage::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AlarmPlanMassage::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AlarmPlanMassage::name() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmPlanMassage.name)
  return *name_;
}
inline void AlarmPlanMassage::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmPlanMassage.name)
}
inline void AlarmPlanMassage::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmPlanMassage.name)
}
inline void AlarmPlanMassage::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmPlanMassage.name)
}
inline ::std::string* AlarmPlanMassage::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmPlanMassage.name)
  return name_;
}
inline ::std::string* AlarmPlanMassage::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmPlanMassage::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmPlanMassage.name)
}

// repeated .com.arges.file.proto.AlarmPlanData plan = 6;
inline int AlarmPlanMassage::plan_size() const {
  return plan_.size();
}
inline void AlarmPlanMassage::clear_plan() {
  plan_.Clear();
}
inline const ::com::arges::file::proto::AlarmPlanData& AlarmPlanMassage::plan(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmPlanMassage.plan)
  return plan_.Get(index);
}
inline ::com::arges::file::proto::AlarmPlanData* AlarmPlanMassage::mutable_plan(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmPlanMassage.plan)
  return plan_.Mutable(index);
}
inline ::com::arges::file::proto::AlarmPlanData* AlarmPlanMassage::add_plan() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmPlanMassage.plan)
  return plan_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmPlanData >&
AlarmPlanMassage::plan() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmPlanMassage.plan)
  return plan_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmPlanData >*
AlarmPlanMassage::mutable_plan() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmPlanMassage.plan)
  return &plan_;
}

// -------------------------------------------------------------------

// AlarmDataForDIS

// optional int32 result = 1;
inline bool AlarmDataForDIS::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmDataForDIS::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmDataForDIS::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmDataForDIS::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 AlarmDataForDIS::result() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmDataForDIS.result)
  return result_;
}
inline void AlarmDataForDIS::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmDataForDIS.result)
}

// optional string srcDevCode = 2;
inline bool AlarmDataForDIS::has_srcdevcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmDataForDIS::set_has_srcdevcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmDataForDIS::clear_has_srcdevcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmDataForDIS::clear_srcdevcode() {
  if (srcdevcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcdevcode_->clear();
  }
  clear_has_srcdevcode();
}
inline const ::std::string& AlarmDataForDIS::srcdevcode() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmDataForDIS.srcDevCode)
  return *srcdevcode_;
}
inline void AlarmDataForDIS::set_srcdevcode(const ::std::string& value) {
  set_has_srcdevcode();
  if (srcdevcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcdevcode_ = new ::std::string;
  }
  srcdevcode_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmDataForDIS.srcDevCode)
}
inline void AlarmDataForDIS::set_srcdevcode(const char* value) {
  set_has_srcdevcode();
  if (srcdevcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcdevcode_ = new ::std::string;
  }
  srcdevcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmDataForDIS.srcDevCode)
}
inline void AlarmDataForDIS::set_srcdevcode(const char* value, size_t size) {
  set_has_srcdevcode();
  if (srcdevcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcdevcode_ = new ::std::string;
  }
  srcdevcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmDataForDIS.srcDevCode)
}
inline ::std::string* AlarmDataForDIS::mutable_srcdevcode() {
  set_has_srcdevcode();
  if (srcdevcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcdevcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmDataForDIS.srcDevCode)
  return srcdevcode_;
}
inline ::std::string* AlarmDataForDIS::release_srcdevcode() {
  clear_has_srcdevcode();
  if (srcdevcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = srcdevcode_;
    srcdevcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmDataForDIS::set_allocated_srcdevcode(::std::string* srcdevcode) {
  if (srcdevcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srcdevcode_;
  }
  if (srcdevcode) {
    set_has_srcdevcode();
    srcdevcode_ = srcdevcode;
  } else {
    clear_has_srcdevcode();
    srcdevcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmDataForDIS.srcDevCode)
}

// optional .com.arges.file.proto.AlarmData alarm = 3;
inline bool AlarmDataForDIS::has_alarm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmDataForDIS::set_has_alarm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmDataForDIS::clear_has_alarm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmDataForDIS::clear_alarm() {
  if (alarm_ != NULL) alarm_->::com::arges::file::proto::AlarmData::Clear();
  clear_has_alarm();
}
inline const ::com::arges::file::proto::AlarmData& AlarmDataForDIS::alarm() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmDataForDIS.alarm)
  return alarm_ != NULL ? *alarm_ : *default_instance_->alarm_;
}
inline ::com::arges::file::proto::AlarmData* AlarmDataForDIS::mutable_alarm() {
  set_has_alarm();
  if (alarm_ == NULL) alarm_ = new ::com::arges::file::proto::AlarmData;
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmDataForDIS.alarm)
  return alarm_;
}
inline ::com::arges::file::proto::AlarmData* AlarmDataForDIS::release_alarm() {
  clear_has_alarm();
  ::com::arges::file::proto::AlarmData* temp = alarm_;
  alarm_ = NULL;
  return temp;
}
inline void AlarmDataForDIS::set_allocated_alarm(::com::arges::file::proto::AlarmData* alarm) {
  delete alarm_;
  alarm_ = alarm;
  if (alarm) {
    set_has_alarm();
  } else {
    clear_has_alarm();
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmDataForDIS.alarm)
}

// repeated int64 userId = 4;
inline int AlarmDataForDIS::userid_size() const {
  return userid_.size();
}
inline void AlarmDataForDIS::clear_userid() {
  userid_.Clear();
}
inline ::google::protobuf::int64 AlarmDataForDIS::userid(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmDataForDIS.userId)
  return userid_.Get(index);
}
inline void AlarmDataForDIS::set_userid(int index, ::google::protobuf::int64 value) {
  userid_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmDataForDIS.userId)
}
inline void AlarmDataForDIS::add_userid(::google::protobuf::int64 value) {
  userid_.Add(value);
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmDataForDIS.userId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AlarmDataForDIS::userid() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmDataForDIS.userId)
  return userid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AlarmDataForDIS::mutable_userid() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmDataForDIS.userId)
  return &userid_;
}

// optional bool isToAts = 5;
inline bool AlarmDataForDIS::has_istoats() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlarmDataForDIS::set_has_istoats() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AlarmDataForDIS::clear_has_istoats() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AlarmDataForDIS::clear_istoats() {
  istoats_ = false;
  clear_has_istoats();
}
inline bool AlarmDataForDIS::istoats() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmDataForDIS.isToAts)
  return istoats_;
}
inline void AlarmDataForDIS::set_istoats(bool value) {
  set_has_istoats();
  istoats_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmDataForDIS.isToAts)
}

// optional bool isWriteToDc = 6 [default = false];
inline bool AlarmDataForDIS::has_iswritetodc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AlarmDataForDIS::set_has_iswritetodc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AlarmDataForDIS::clear_has_iswritetodc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AlarmDataForDIS::clear_iswritetodc() {
  iswritetodc_ = false;
  clear_has_iswritetodc();
}
inline bool AlarmDataForDIS::iswritetodc() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmDataForDIS.isWriteToDc)
  return iswritetodc_;
}
inline void AlarmDataForDIS::set_iswritetodc(bool value) {
  set_has_iswritetodc();
  iswritetodc_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmDataForDIS.isWriteToDc)
}

// -------------------------------------------------------------------

// GetAlarmDataForDIS

// optional int32 result = 1;
inline bool GetAlarmDataForDIS::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAlarmDataForDIS::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAlarmDataForDIS::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAlarmDataForDIS::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GetAlarmDataForDIS::result() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.GetAlarmDataForDIS.result)
  return result_;
}
inline void GetAlarmDataForDIS::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.GetAlarmDataForDIS.result)
}

// optional .com.arges.file.proto.AlarmPlanData alarm = 2;
inline bool GetAlarmDataForDIS::has_alarm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAlarmDataForDIS::set_has_alarm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAlarmDataForDIS::clear_has_alarm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAlarmDataForDIS::clear_alarm() {
  if (alarm_ != NULL) alarm_->::com::arges::file::proto::AlarmPlanData::Clear();
  clear_has_alarm();
}
inline const ::com::arges::file::proto::AlarmPlanData& GetAlarmDataForDIS::alarm() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.GetAlarmDataForDIS.alarm)
  return alarm_ != NULL ? *alarm_ : *default_instance_->alarm_;
}
inline ::com::arges::file::proto::AlarmPlanData* GetAlarmDataForDIS::mutable_alarm() {
  set_has_alarm();
  if (alarm_ == NULL) alarm_ = new ::com::arges::file::proto::AlarmPlanData;
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.GetAlarmDataForDIS.alarm)
  return alarm_;
}
inline ::com::arges::file::proto::AlarmPlanData* GetAlarmDataForDIS::release_alarm() {
  clear_has_alarm();
  ::com::arges::file::proto::AlarmPlanData* temp = alarm_;
  alarm_ = NULL;
  return temp;
}
inline void GetAlarmDataForDIS::set_allocated_alarm(::com::arges::file::proto::AlarmPlanData* alarm) {
  delete alarm_;
  alarm_ = alarm;
  if (alarm) {
    set_has_alarm();
  } else {
    clear_has_alarm();
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.GetAlarmDataForDIS.alarm)
}

// optional bool isNeedToSendTopic = 3 [default = false];
inline bool GetAlarmDataForDIS::has_isneedtosendtopic() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAlarmDataForDIS::set_has_isneedtosendtopic() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAlarmDataForDIS::clear_has_isneedtosendtopic() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAlarmDataForDIS::clear_isneedtosendtopic() {
  isneedtosendtopic_ = false;
  clear_has_isneedtosendtopic();
}
inline bool GetAlarmDataForDIS::isneedtosendtopic() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.GetAlarmDataForDIS.isNeedToSendTopic)
  return isneedtosendtopic_;
}
inline void GetAlarmDataForDIS::set_isneedtosendtopic(bool value) {
  set_has_isneedtosendtopic();
  isneedtosendtopic_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.GetAlarmDataForDIS.isNeedToSendTopic)
}

// -------------------------------------------------------------------

// AlarmGetSrcsourceMassage

// optional int32 requestType = 1 [default = -1];
inline bool AlarmGetSrcsourceMassage::has_requesttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmGetSrcsourceMassage::set_has_requesttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmGetSrcsourceMassage::clear_has_requesttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmGetSrcsourceMassage::clear_requesttype() {
  requesttype_ = -1;
  clear_has_requesttype();
}
inline ::google::protobuf::int32 AlarmGetSrcsourceMassage::requesttype() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmGetSrcsourceMassage.requestType)
  return requesttype_;
}
inline void AlarmGetSrcsourceMassage::set_requesttype(::google::protobuf::int32 value) {
  set_has_requesttype();
  requesttype_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmGetSrcsourceMassage.requestType)
}

// optional int32 result = 2 [default = -1];
inline bool AlarmGetSrcsourceMassage::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmGetSrcsourceMassage::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmGetSrcsourceMassage::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmGetSrcsourceMassage::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 AlarmGetSrcsourceMassage::result() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmGetSrcsourceMassage.result)
  return result_;
}
inline void AlarmGetSrcsourceMassage::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmGetSrcsourceMassage.result)
}

// optional string resultDescribe = 3 [default = ""];
inline bool AlarmGetSrcsourceMassage::has_resultdescribe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmGetSrcsourceMassage::set_has_resultdescribe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmGetSrcsourceMassage::clear_has_resultdescribe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmGetSrcsourceMassage::clear_resultdescribe() {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_->clear();
  }
  clear_has_resultdescribe();
}
inline const ::std::string& AlarmGetSrcsourceMassage::resultdescribe() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmGetSrcsourceMassage.resultDescribe)
  return *resultdescribe_;
}
inline void AlarmGetSrcsourceMassage::set_resultdescribe(const ::std::string& value) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmGetSrcsourceMassage.resultDescribe)
}
inline void AlarmGetSrcsourceMassage::set_resultdescribe(const char* value) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmGetSrcsourceMassage.resultDescribe)
}
inline void AlarmGetSrcsourceMassage::set_resultdescribe(const char* value, size_t size) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmGetSrcsourceMassage.resultDescribe)
}
inline ::std::string* AlarmGetSrcsourceMassage::mutable_resultdescribe() {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmGetSrcsourceMassage.resultDescribe)
  return resultdescribe_;
}
inline ::std::string* AlarmGetSrcsourceMassage::release_resultdescribe() {
  clear_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = resultdescribe_;
    resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmGetSrcsourceMassage::set_allocated_resultdescribe(::std::string* resultdescribe) {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdescribe_;
  }
  if (resultdescribe) {
    set_has_resultdescribe();
    resultdescribe_ = resultdescribe;
  } else {
    clear_has_resultdescribe();
    resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmGetSrcsourceMassage.resultDescribe)
}

// optional string cascadeDevDomain = 4 [default = ""];
inline bool AlarmGetSrcsourceMassage::has_cascadedevdomain() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmGetSrcsourceMassage::set_has_cascadedevdomain() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmGetSrcsourceMassage::clear_has_cascadedevdomain() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmGetSrcsourceMassage::clear_cascadedevdomain() {
  if (cascadedevdomain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cascadedevdomain_->clear();
  }
  clear_has_cascadedevdomain();
}
inline const ::std::string& AlarmGetSrcsourceMassage::cascadedevdomain() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmGetSrcsourceMassage.cascadeDevDomain)
  return *cascadedevdomain_;
}
inline void AlarmGetSrcsourceMassage::set_cascadedevdomain(const ::std::string& value) {
  set_has_cascadedevdomain();
  if (cascadedevdomain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cascadedevdomain_ = new ::std::string;
  }
  cascadedevdomain_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmGetSrcsourceMassage.cascadeDevDomain)
}
inline void AlarmGetSrcsourceMassage::set_cascadedevdomain(const char* value) {
  set_has_cascadedevdomain();
  if (cascadedevdomain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cascadedevdomain_ = new ::std::string;
  }
  cascadedevdomain_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmGetSrcsourceMassage.cascadeDevDomain)
}
inline void AlarmGetSrcsourceMassage::set_cascadedevdomain(const char* value, size_t size) {
  set_has_cascadedevdomain();
  if (cascadedevdomain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cascadedevdomain_ = new ::std::string;
  }
  cascadedevdomain_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmGetSrcsourceMassage.cascadeDevDomain)
}
inline ::std::string* AlarmGetSrcsourceMassage::mutable_cascadedevdomain() {
  set_has_cascadedevdomain();
  if (cascadedevdomain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cascadedevdomain_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmGetSrcsourceMassage.cascadeDevDomain)
  return cascadedevdomain_;
}
inline ::std::string* AlarmGetSrcsourceMassage::release_cascadedevdomain() {
  clear_has_cascadedevdomain();
  if (cascadedevdomain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = cascadedevdomain_;
    cascadedevdomain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmGetSrcsourceMassage::set_allocated_cascadedevdomain(::std::string* cascadedevdomain) {
  if (cascadedevdomain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cascadedevdomain_;
  }
  if (cascadedevdomain) {
    set_has_cascadedevdomain();
    cascadedevdomain_ = cascadedevdomain;
  } else {
    clear_has_cascadedevdomain();
    cascadedevdomain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmGetSrcsourceMassage.cascadeDevDomain)
}

// repeated .com.arges.file.proto.DeviceInfo GpsDev = 5;
inline int AlarmGetSrcsourceMassage::gpsdev_size() const {
  return gpsdev_.size();
}
inline void AlarmGetSrcsourceMassage::clear_gpsdev() {
  gpsdev_.Clear();
}
inline const ::com::arges::file::proto::DeviceInfo& AlarmGetSrcsourceMassage::gpsdev(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmGetSrcsourceMassage.GpsDev)
  return gpsdev_.Get(index);
}
inline ::com::arges::file::proto::DeviceInfo* AlarmGetSrcsourceMassage::mutable_gpsdev(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmGetSrcsourceMassage.GpsDev)
  return gpsdev_.Mutable(index);
}
inline ::com::arges::file::proto::DeviceInfo* AlarmGetSrcsourceMassage::add_gpsdev() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmGetSrcsourceMassage.GpsDev)
  return gpsdev_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::DeviceInfo >&
AlarmGetSrcsourceMassage::gpsdev() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmGetSrcsourceMassage.GpsDev)
  return gpsdev_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::DeviceInfo >*
AlarmGetSrcsourceMassage::mutable_gpsdev() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmGetSrcsourceMassage.GpsDev)
  return &gpsdev_;
}

// repeated .com.arges.file.proto.DeviceInfo GrepDev = 6;
inline int AlarmGetSrcsourceMassage::grepdev_size() const {
  return grepdev_.size();
}
inline void AlarmGetSrcsourceMassage::clear_grepdev() {
  grepdev_.Clear();
}
inline const ::com::arges::file::proto::DeviceInfo& AlarmGetSrcsourceMassage::grepdev(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmGetSrcsourceMassage.GrepDev)
  return grepdev_.Get(index);
}
inline ::com::arges::file::proto::DeviceInfo* AlarmGetSrcsourceMassage::mutable_grepdev(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmGetSrcsourceMassage.GrepDev)
  return grepdev_.Mutable(index);
}
inline ::com::arges::file::proto::DeviceInfo* AlarmGetSrcsourceMassage::add_grepdev() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmGetSrcsourceMassage.GrepDev)
  return grepdev_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::DeviceInfo >&
AlarmGetSrcsourceMassage::grepdev() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmGetSrcsourceMassage.GrepDev)
  return grepdev_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::DeviceInfo >*
AlarmGetSrcsourceMassage::mutable_grepdev() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmGetSrcsourceMassage.GrepDev)
  return &grepdev_;
}

// -------------------------------------------------------------------

// AlarmRecordData_LinkVideoData

// optional int64 id = 1 [default = -1];
inline bool AlarmRecordData_LinkVideoData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmRecordData_LinkVideoData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmRecordData_LinkVideoData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmRecordData_LinkVideoData::clear_id() {
  id_ = GOOGLE_LONGLONG(-1);
  clear_has_id();
}
inline ::google::protobuf::int64 AlarmRecordData_LinkVideoData::id() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.LinkVideoData.id)
  return id_;
}
inline void AlarmRecordData_LinkVideoData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.LinkVideoData.id)
}

// optional int64 alarmId = 2 [default = -1];
inline bool AlarmRecordData_LinkVideoData::has_alarmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmRecordData_LinkVideoData::set_has_alarmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmRecordData_LinkVideoData::clear_has_alarmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmRecordData_LinkVideoData::clear_alarmid() {
  alarmid_ = GOOGLE_LONGLONG(-1);
  clear_has_alarmid();
}
inline ::google::protobuf::int64 AlarmRecordData_LinkVideoData::alarmid() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.LinkVideoData.alarmId)
  return alarmid_;
}
inline void AlarmRecordData_LinkVideoData::set_alarmid(::google::protobuf::int64 value) {
  set_has_alarmid();
  alarmid_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.LinkVideoData.alarmId)
}

// optional string filePath = 3 [default = ""];
inline bool AlarmRecordData_LinkVideoData::has_filepath() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmRecordData_LinkVideoData::set_has_filepath() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmRecordData_LinkVideoData::clear_has_filepath() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmRecordData_LinkVideoData::clear_filepath() {
  if (filepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filepath_->clear();
  }
  clear_has_filepath();
}
inline const ::std::string& AlarmRecordData_LinkVideoData::filepath() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.LinkVideoData.filePath)
  return *filepath_;
}
inline void AlarmRecordData_LinkVideoData::set_filepath(const ::std::string& value) {
  set_has_filepath();
  if (filepath_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filepath_ = new ::std::string;
  }
  filepath_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.LinkVideoData.filePath)
}
inline void AlarmRecordData_LinkVideoData::set_filepath(const char* value) {
  set_has_filepath();
  if (filepath_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filepath_ = new ::std::string;
  }
  filepath_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmRecordData.LinkVideoData.filePath)
}
inline void AlarmRecordData_LinkVideoData::set_filepath(const char* value, size_t size) {
  set_has_filepath();
  if (filepath_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filepath_ = new ::std::string;
  }
  filepath_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmRecordData.LinkVideoData.filePath)
}
inline ::std::string* AlarmRecordData_LinkVideoData::mutable_filepath() {
  set_has_filepath();
  if (filepath_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filepath_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRecordData.LinkVideoData.filePath)
  return filepath_;
}
inline ::std::string* AlarmRecordData_LinkVideoData::release_filepath() {
  clear_has_filepath();
  if (filepath_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = filepath_;
    filepath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmRecordData_LinkVideoData::set_allocated_filepath(::std::string* filepath) {
  if (filepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filepath_;
  }
  if (filepath) {
    set_has_filepath();
    filepath_ = filepath;
  } else {
    clear_has_filepath();
    filepath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmRecordData.LinkVideoData.filePath)
}

// optional string channelCode = 4 [default = ""];
inline bool AlarmRecordData_LinkVideoData::has_channelcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmRecordData_LinkVideoData::set_has_channelcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmRecordData_LinkVideoData::clear_has_channelcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmRecordData_LinkVideoData::clear_channelcode() {
  if (channelcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channelcode_->clear();
  }
  clear_has_channelcode();
}
inline const ::std::string& AlarmRecordData_LinkVideoData::channelcode() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.LinkVideoData.channelCode)
  return *channelcode_;
}
inline void AlarmRecordData_LinkVideoData::set_channelcode(const ::std::string& value) {
  set_has_channelcode();
  if (channelcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channelcode_ = new ::std::string;
  }
  channelcode_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.LinkVideoData.channelCode)
}
inline void AlarmRecordData_LinkVideoData::set_channelcode(const char* value) {
  set_has_channelcode();
  if (channelcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channelcode_ = new ::std::string;
  }
  channelcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmRecordData.LinkVideoData.channelCode)
}
inline void AlarmRecordData_LinkVideoData::set_channelcode(const char* value, size_t size) {
  set_has_channelcode();
  if (channelcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channelcode_ = new ::std::string;
  }
  channelcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmRecordData.LinkVideoData.channelCode)
}
inline ::std::string* AlarmRecordData_LinkVideoData::mutable_channelcode() {
  set_has_channelcode();
  if (channelcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channelcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRecordData.LinkVideoData.channelCode)
  return channelcode_;
}
inline ::std::string* AlarmRecordData_LinkVideoData::release_channelcode() {
  clear_has_channelcode();
  if (channelcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = channelcode_;
    channelcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmRecordData_LinkVideoData::set_allocated_channelcode(::std::string* channelcode) {
  if (channelcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete channelcode_;
  }
  if (channelcode) {
    set_has_channelcode();
    channelcode_ = channelcode;
  } else {
    clear_has_channelcode();
    channelcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmRecordData.LinkVideoData.channelCode)
}

// -------------------------------------------------------------------

// AlarmRecordData_RaiseAlarmData

// optional int64 id = 1 [default = -1];
inline bool AlarmRecordData_RaiseAlarmData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmRecordData_RaiseAlarmData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmRecordData_RaiseAlarmData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmRecordData_RaiseAlarmData::clear_id() {
  id_ = GOOGLE_LONGLONG(-1);
  clear_has_id();
}
inline ::google::protobuf::int64 AlarmRecordData_RaiseAlarmData::id() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.RaiseAlarmData.id)
  return id_;
}
inline void AlarmRecordData_RaiseAlarmData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.RaiseAlarmData.id)
}

// optional int64 alarmId = 2 [default = -1];
inline bool AlarmRecordData_RaiseAlarmData::has_alarmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmRecordData_RaiseAlarmData::set_has_alarmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmRecordData_RaiseAlarmData::clear_has_alarmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmRecordData_RaiseAlarmData::clear_alarmid() {
  alarmid_ = GOOGLE_LONGLONG(-1);
  clear_has_alarmid();
}
inline ::google::protobuf::int64 AlarmRecordData_RaiseAlarmData::alarmid() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.RaiseAlarmData.alarmId)
  return alarmid_;
}
inline void AlarmRecordData_RaiseAlarmData::set_alarmid(::google::protobuf::int64 value) {
  set_has_alarmid();
  alarmid_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.RaiseAlarmData.alarmId)
}

// optional int32 alarmCap = 3 [default = -1];
inline bool AlarmRecordData_RaiseAlarmData::has_alarmcap() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmRecordData_RaiseAlarmData::set_has_alarmcap() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmRecordData_RaiseAlarmData::clear_has_alarmcap() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmRecordData_RaiseAlarmData::clear_alarmcap() {
  alarmcap_ = -1;
  clear_has_alarmcap();
}
inline ::google::protobuf::int32 AlarmRecordData_RaiseAlarmData::alarmcap() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.RaiseAlarmData.alarmCap)
  return alarmcap_;
}
inline void AlarmRecordData_RaiseAlarmData::set_alarmcap(::google::protobuf::int32 value) {
  set_has_alarmcap();
  alarmcap_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.RaiseAlarmData.alarmCap)
}

// optional float alarmNum = 4 [default = 0];
inline bool AlarmRecordData_RaiseAlarmData::has_alarmnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmRecordData_RaiseAlarmData::set_has_alarmnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmRecordData_RaiseAlarmData::clear_has_alarmnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmRecordData_RaiseAlarmData::clear_alarmnum() {
  alarmnum_ = 0;
  clear_has_alarmnum();
}
inline float AlarmRecordData_RaiseAlarmData::alarmnum() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.RaiseAlarmData.alarmNum)
  return alarmnum_;
}
inline void AlarmRecordData_RaiseAlarmData::set_alarmnum(float value) {
  set_has_alarmnum();
  alarmnum_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.RaiseAlarmData.alarmNum)
}

// optional int32 alarmGroup = 5 [default = -1];
inline bool AlarmRecordData_RaiseAlarmData::has_alarmgroup() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlarmRecordData_RaiseAlarmData::set_has_alarmgroup() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AlarmRecordData_RaiseAlarmData::clear_has_alarmgroup() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AlarmRecordData_RaiseAlarmData::clear_alarmgroup() {
  alarmgroup_ = -1;
  clear_has_alarmgroup();
}
inline ::google::protobuf::int32 AlarmRecordData_RaiseAlarmData::alarmgroup() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.RaiseAlarmData.alarmGroup)
  return alarmgroup_;
}
inline void AlarmRecordData_RaiseAlarmData::set_alarmgroup(::google::protobuf::int32 value) {
  set_has_alarmgroup();
  alarmgroup_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.RaiseAlarmData.alarmGroup)
}

// optional float standardNum = 6 [default = 0];
inline bool AlarmRecordData_RaiseAlarmData::has_standardnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AlarmRecordData_RaiseAlarmData::set_has_standardnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AlarmRecordData_RaiseAlarmData::clear_has_standardnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AlarmRecordData_RaiseAlarmData::clear_standardnum() {
  standardnum_ = 0;
  clear_has_standardnum();
}
inline float AlarmRecordData_RaiseAlarmData::standardnum() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.RaiseAlarmData.standardNum)
  return standardnum_;
}
inline void AlarmRecordData_RaiseAlarmData::set_standardnum(float value) {
  set_has_standardnum();
  standardnum_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.RaiseAlarmData.standardNum)
}

// -------------------------------------------------------------------

// AlarmRecordData

// optional int64 id = 1 [default = -1];
inline bool AlarmRecordData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmRecordData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmRecordData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmRecordData::clear_id() {
  id_ = GOOGLE_LONGLONG(-1);
  clear_has_id();
}
inline ::google::protobuf::int64 AlarmRecordData::id() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.id)
  return id_;
}
inline void AlarmRecordData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.id)
}

// optional string devCode = 2 [default = ""];
inline bool AlarmRecordData::has_devcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmRecordData::set_has_devcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmRecordData::clear_has_devcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmRecordData::clear_devcode() {
  if (devcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devcode_->clear();
  }
  clear_has_devcode();
}
inline const ::std::string& AlarmRecordData::devcode() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.devCode)
  return *devcode_;
}
inline void AlarmRecordData::set_devcode(const ::std::string& value) {
  set_has_devcode();
  if (devcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devcode_ = new ::std::string;
  }
  devcode_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.devCode)
}
inline void AlarmRecordData::set_devcode(const char* value) {
  set_has_devcode();
  if (devcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devcode_ = new ::std::string;
  }
  devcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmRecordData.devCode)
}
inline void AlarmRecordData::set_devcode(const char* value, size_t size) {
  set_has_devcode();
  if (devcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devcode_ = new ::std::string;
  }
  devcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmRecordData.devCode)
}
inline ::std::string* AlarmRecordData::mutable_devcode() {
  set_has_devcode();
  if (devcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRecordData.devCode)
  return devcode_;
}
inline ::std::string* AlarmRecordData::release_devcode() {
  clear_has_devcode();
  if (devcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = devcode_;
    devcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmRecordData::set_allocated_devcode(::std::string* devcode) {
  if (devcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete devcode_;
  }
  if (devcode) {
    set_has_devcode();
    devcode_ = devcode;
  } else {
    clear_has_devcode();
    devcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmRecordData.devCode)
}

// optional int32 unitType = 3 [default = -1];
inline bool AlarmRecordData::has_unittype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmRecordData::set_has_unittype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmRecordData::clear_has_unittype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmRecordData::clear_unittype() {
  unittype_ = -1;
  clear_has_unittype();
}
inline ::google::protobuf::int32 AlarmRecordData::unittype() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.unitType)
  return unittype_;
}
inline void AlarmRecordData::set_unittype(::google::protobuf::int32 value) {
  set_has_unittype();
  unittype_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.unitType)
}

// optional int32 unitSeq = 4 [default = -1];
inline bool AlarmRecordData::has_unitseq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmRecordData::set_has_unitseq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmRecordData::clear_has_unitseq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmRecordData::clear_unitseq() {
  unitseq_ = -1;
  clear_has_unitseq();
}
inline ::google::protobuf::int32 AlarmRecordData::unitseq() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.unitSeq)
  return unitseq_;
}
inline void AlarmRecordData::set_unitseq(::google::protobuf::int32 value) {
  set_has_unitseq();
  unitseq_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.unitSeq)
}

// optional int32 chnSeq = 5 [default = -1];
inline bool AlarmRecordData::has_chnseq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlarmRecordData::set_has_chnseq() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AlarmRecordData::clear_has_chnseq() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AlarmRecordData::clear_chnseq() {
  chnseq_ = -1;
  clear_has_chnseq();
}
inline ::google::protobuf::int32 AlarmRecordData::chnseq() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.chnSeq)
  return chnseq_;
}
inline void AlarmRecordData::set_chnseq(::google::protobuf::int32 value) {
  set_has_chnseq();
  chnseq_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.chnSeq)
}

// optional string chnName = 6 [default = ""];
inline bool AlarmRecordData::has_chnname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AlarmRecordData::set_has_chnname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AlarmRecordData::clear_has_chnname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AlarmRecordData::clear_chnname() {
  if (chnname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chnname_->clear();
  }
  clear_has_chnname();
}
inline const ::std::string& AlarmRecordData::chnname() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.chnName)
  return *chnname_;
}
inline void AlarmRecordData::set_chnname(const ::std::string& value) {
  set_has_chnname();
  if (chnname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chnname_ = new ::std::string;
  }
  chnname_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.chnName)
}
inline void AlarmRecordData::set_chnname(const char* value) {
  set_has_chnname();
  if (chnname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chnname_ = new ::std::string;
  }
  chnname_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmRecordData.chnName)
}
inline void AlarmRecordData::set_chnname(const char* value, size_t size) {
  set_has_chnname();
  if (chnname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chnname_ = new ::std::string;
  }
  chnname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmRecordData.chnName)
}
inline ::std::string* AlarmRecordData::mutable_chnname() {
  set_has_chnname();
  if (chnname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chnname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRecordData.chnName)
  return chnname_;
}
inline ::std::string* AlarmRecordData::release_chnname() {
  clear_has_chnname();
  if (chnname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = chnname_;
    chnname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmRecordData::set_allocated_chnname(::std::string* chnname) {
  if (chnname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete chnname_;
  }
  if (chnname) {
    set_has_chnname();
    chnname_ = chnname;
  } else {
    clear_has_chnname();
    chnname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmRecordData.chnName)
}

// optional int32 alarmType = 7 [default = -1];
inline bool AlarmRecordData::has_alarmtype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AlarmRecordData::set_has_alarmtype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AlarmRecordData::clear_has_alarmtype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AlarmRecordData::clear_alarmtype() {
  alarmtype_ = -1;
  clear_has_alarmtype();
}
inline ::google::protobuf::int32 AlarmRecordData::alarmtype() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.alarmType)
  return alarmtype_;
}
inline void AlarmRecordData::set_alarmtype(::google::protobuf::int32 value) {
  set_has_alarmtype();
  alarmtype_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.alarmType)
}

// optional int64 alarmDate = 8 [default = -1];
inline bool AlarmRecordData::has_alarmdate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AlarmRecordData::set_has_alarmdate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AlarmRecordData::clear_has_alarmdate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AlarmRecordData::clear_alarmdate() {
  alarmdate_ = GOOGLE_LONGLONG(-1);
  clear_has_alarmdate();
}
inline ::google::protobuf::int64 AlarmRecordData::alarmdate() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.alarmDate)
  return alarmdate_;
}
inline void AlarmRecordData::set_alarmdate(::google::protobuf::int64 value) {
  set_has_alarmdate();
  alarmdate_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.alarmDate)
}

// optional int32 alarmGrade = 9 [default = -1];
inline bool AlarmRecordData::has_alarmgrade() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AlarmRecordData::set_has_alarmgrade() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AlarmRecordData::clear_has_alarmgrade() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AlarmRecordData::clear_alarmgrade() {
  alarmgrade_ = -1;
  clear_has_alarmgrade();
}
inline ::google::protobuf::int32 AlarmRecordData::alarmgrade() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.alarmGrade)
  return alarmgrade_;
}
inline void AlarmRecordData::set_alarmgrade(::google::protobuf::int32 value) {
  set_has_alarmgrade();
  alarmgrade_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.alarmGrade)
}

// optional string handleUser = 10 [default = ""];
inline bool AlarmRecordData::has_handleuser() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AlarmRecordData::set_has_handleuser() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AlarmRecordData::clear_has_handleuser() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AlarmRecordData::clear_handleuser() {
  if (handleuser_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    handleuser_->clear();
  }
  clear_has_handleuser();
}
inline const ::std::string& AlarmRecordData::handleuser() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.handleUser)
  return *handleuser_;
}
inline void AlarmRecordData::set_handleuser(const ::std::string& value) {
  set_has_handleuser();
  if (handleuser_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    handleuser_ = new ::std::string;
  }
  handleuser_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.handleUser)
}
inline void AlarmRecordData::set_handleuser(const char* value) {
  set_has_handleuser();
  if (handleuser_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    handleuser_ = new ::std::string;
  }
  handleuser_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmRecordData.handleUser)
}
inline void AlarmRecordData::set_handleuser(const char* value, size_t size) {
  set_has_handleuser();
  if (handleuser_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    handleuser_ = new ::std::string;
  }
  handleuser_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmRecordData.handleUser)
}
inline ::std::string* AlarmRecordData::mutable_handleuser() {
  set_has_handleuser();
  if (handleuser_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    handleuser_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRecordData.handleUser)
  return handleuser_;
}
inline ::std::string* AlarmRecordData::release_handleuser() {
  clear_has_handleuser();
  if (handleuser_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = handleuser_;
    handleuser_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmRecordData::set_allocated_handleuser(::std::string* handleuser) {
  if (handleuser_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete handleuser_;
  }
  if (handleuser) {
    set_has_handleuser();
    handleuser_ = handleuser;
  } else {
    clear_has_handleuser();
    handleuser_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmRecordData.handleUser)
}

// optional int64 handleDate = 11 [default = -1];
inline bool AlarmRecordData::has_handledate() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AlarmRecordData::set_has_handledate() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AlarmRecordData::clear_has_handledate() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AlarmRecordData::clear_handledate() {
  handledate_ = GOOGLE_LONGLONG(-1);
  clear_has_handledate();
}
inline ::google::protobuf::int64 AlarmRecordData::handledate() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.handleDate)
  return handledate_;
}
inline void AlarmRecordData::set_handledate(::google::protobuf::int64 value) {
  set_has_handledate();
  handledate_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.handleDate)
}

// optional bytes handleMsg = 12 [default = ""];
inline bool AlarmRecordData::has_handlemsg() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AlarmRecordData::set_has_handlemsg() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AlarmRecordData::clear_has_handlemsg() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AlarmRecordData::clear_handlemsg() {
  if (handlemsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    handlemsg_->clear();
  }
  clear_has_handlemsg();
}
inline const ::std::string& AlarmRecordData::handlemsg() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.handleMsg)
  return *handlemsg_;
}
inline void AlarmRecordData::set_handlemsg(const ::std::string& value) {
  set_has_handlemsg();
  if (handlemsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    handlemsg_ = new ::std::string;
  }
  handlemsg_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.handleMsg)
}
inline void AlarmRecordData::set_handlemsg(const char* value) {
  set_has_handlemsg();
  if (handlemsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    handlemsg_ = new ::std::string;
  }
  handlemsg_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmRecordData.handleMsg)
}
inline void AlarmRecordData::set_handlemsg(const void* value, size_t size) {
  set_has_handlemsg();
  if (handlemsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    handlemsg_ = new ::std::string;
  }
  handlemsg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmRecordData.handleMsg)
}
inline ::std::string* AlarmRecordData::mutable_handlemsg() {
  set_has_handlemsg();
  if (handlemsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    handlemsg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRecordData.handleMsg)
  return handlemsg_;
}
inline ::std::string* AlarmRecordData::release_handlemsg() {
  clear_has_handlemsg();
  if (handlemsg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = handlemsg_;
    handlemsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmRecordData::set_allocated_handlemsg(::std::string* handlemsg) {
  if (handlemsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete handlemsg_;
  }
  if (handlemsg) {
    set_has_handlemsg();
    handlemsg_ = handlemsg;
  } else {
    clear_has_handlemsg();
    handlemsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmRecordData.handleMsg)
}

// optional int32 handleStat = 13 [default = -1];
inline bool AlarmRecordData::has_handlestat() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AlarmRecordData::set_has_handlestat() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AlarmRecordData::clear_has_handlestat() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AlarmRecordData::clear_handlestat() {
  handlestat_ = -1;
  clear_has_handlestat();
}
inline ::google::protobuf::int32 AlarmRecordData::handlestat() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.handleStat)
  return handlestat_;
}
inline void AlarmRecordData::set_handlestat(::google::protobuf::int32 value) {
  set_has_handlestat();
  handlestat_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.handleStat)
}

// optional string devName = 14 [default = ""];
inline bool AlarmRecordData::has_devname() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AlarmRecordData::set_has_devname() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AlarmRecordData::clear_has_devname() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AlarmRecordData::clear_devname() {
  if (devname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devname_->clear();
  }
  clear_has_devname();
}
inline const ::std::string& AlarmRecordData::devname() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.devName)
  return *devname_;
}
inline void AlarmRecordData::set_devname(const ::std::string& value) {
  set_has_devname();
  if (devname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devname_ = new ::std::string;
  }
  devname_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.devName)
}
inline void AlarmRecordData::set_devname(const char* value) {
  set_has_devname();
  if (devname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devname_ = new ::std::string;
  }
  devname_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmRecordData.devName)
}
inline void AlarmRecordData::set_devname(const char* value, size_t size) {
  set_has_devname();
  if (devname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devname_ = new ::std::string;
  }
  devname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmRecordData.devName)
}
inline ::std::string* AlarmRecordData::mutable_devname() {
  set_has_devname();
  if (devname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRecordData.devName)
  return devname_;
}
inline ::std::string* AlarmRecordData::release_devname() {
  clear_has_devname();
  if (devname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = devname_;
    devname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmRecordData::set_allocated_devname(::std::string* devname) {
  if (devname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete devname_;
  }
  if (devname) {
    set_has_devname();
    devname_ = devname;
  } else {
    clear_has_devname();
    devname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmRecordData.devName)
}

// optional int32 alarmStat = 15 [default = -1];
inline bool AlarmRecordData::has_alarmstat() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void AlarmRecordData::set_has_alarmstat() {
  _has_bits_[0] |= 0x00004000u;
}
inline void AlarmRecordData::clear_has_alarmstat() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void AlarmRecordData::clear_alarmstat() {
  alarmstat_ = -1;
  clear_has_alarmstat();
}
inline ::google::protobuf::int32 AlarmRecordData::alarmstat() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.alarmStat)
  return alarmstat_;
}
inline void AlarmRecordData::set_alarmstat(::google::protobuf::int32 value) {
  set_has_alarmstat();
  alarmstat_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordData.alarmStat)
}

// repeated .com.arges.file.proto.AlarmRecordData.LinkVideoData videos = 16;
inline int AlarmRecordData::videos_size() const {
  return videos_.size();
}
inline void AlarmRecordData::clear_videos() {
  videos_.Clear();
}
inline const ::com::arges::file::proto::AlarmRecordData_LinkVideoData& AlarmRecordData::videos(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.videos)
  return videos_.Get(index);
}
inline ::com::arges::file::proto::AlarmRecordData_LinkVideoData* AlarmRecordData::mutable_videos(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRecordData.videos)
  return videos_.Mutable(index);
}
inline ::com::arges::file::proto::AlarmRecordData_LinkVideoData* AlarmRecordData::add_videos() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmRecordData.videos)
  return videos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordData_LinkVideoData >&
AlarmRecordData::videos() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmRecordData.videos)
  return videos_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordData_LinkVideoData >*
AlarmRecordData::mutable_videos() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmRecordData.videos)
  return &videos_;
}

// repeated .com.arges.file.proto.AlarmRecordData.RaiseAlarmData raises = 17;
inline int AlarmRecordData::raises_size() const {
  return raises_.size();
}
inline void AlarmRecordData::clear_raises() {
  raises_.Clear();
}
inline const ::com::arges::file::proto::AlarmRecordData_RaiseAlarmData& AlarmRecordData::raises(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordData.raises)
  return raises_.Get(index);
}
inline ::com::arges::file::proto::AlarmRecordData_RaiseAlarmData* AlarmRecordData::mutable_raises(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRecordData.raises)
  return raises_.Mutable(index);
}
inline ::com::arges::file::proto::AlarmRecordData_RaiseAlarmData* AlarmRecordData::add_raises() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmRecordData.raises)
  return raises_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordData_RaiseAlarmData >&
AlarmRecordData::raises() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmRecordData.raises)
  return raises_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordData_RaiseAlarmData >*
AlarmRecordData::mutable_raises() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmRecordData.raises)
  return &raises_;
}

// -------------------------------------------------------------------

// AlarmRecordMessage_AlarmParam

// optional int64 alarmType = 1 [default = -1];
inline bool AlarmRecordMessage_AlarmParam::has_alarmtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmRecordMessage_AlarmParam::set_has_alarmtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmRecordMessage_AlarmParam::clear_has_alarmtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmRecordMessage_AlarmParam::clear_alarmtype() {
  alarmtype_ = GOOGLE_LONGLONG(-1);
  clear_has_alarmtype();
}
inline ::google::protobuf::int64 AlarmRecordMessage_AlarmParam::alarmtype() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordMessage.AlarmParam.alarmType)
  return alarmtype_;
}
inline void AlarmRecordMessage_AlarmParam::set_alarmtype(::google::protobuf::int64 value) {
  set_has_alarmtype();
  alarmtype_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordMessage.AlarmParam.alarmType)
}

// optional string devCode = 2 [default = ""];
inline bool AlarmRecordMessage_AlarmParam::has_devcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmRecordMessage_AlarmParam::set_has_devcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmRecordMessage_AlarmParam::clear_has_devcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmRecordMessage_AlarmParam::clear_devcode() {
  if (devcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devcode_->clear();
  }
  clear_has_devcode();
}
inline const ::std::string& AlarmRecordMessage_AlarmParam::devcode() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordMessage.AlarmParam.devCode)
  return *devcode_;
}
inline void AlarmRecordMessage_AlarmParam::set_devcode(const ::std::string& value) {
  set_has_devcode();
  if (devcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devcode_ = new ::std::string;
  }
  devcode_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordMessage.AlarmParam.devCode)
}
inline void AlarmRecordMessage_AlarmParam::set_devcode(const char* value) {
  set_has_devcode();
  if (devcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devcode_ = new ::std::string;
  }
  devcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmRecordMessage.AlarmParam.devCode)
}
inline void AlarmRecordMessage_AlarmParam::set_devcode(const char* value, size_t size) {
  set_has_devcode();
  if (devcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devcode_ = new ::std::string;
  }
  devcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmRecordMessage.AlarmParam.devCode)
}
inline ::std::string* AlarmRecordMessage_AlarmParam::mutable_devcode() {
  set_has_devcode();
  if (devcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRecordMessage.AlarmParam.devCode)
  return devcode_;
}
inline ::std::string* AlarmRecordMessage_AlarmParam::release_devcode() {
  clear_has_devcode();
  if (devcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = devcode_;
    devcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmRecordMessage_AlarmParam::set_allocated_devcode(::std::string* devcode) {
  if (devcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete devcode_;
  }
  if (devcode) {
    set_has_devcode();
    devcode_ = devcode;
  } else {
    clear_has_devcode();
    devcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmRecordMessage.AlarmParam.devCode)
}

// optional int32 chnSeq = 3 [default = 0];
inline bool AlarmRecordMessage_AlarmParam::has_chnseq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmRecordMessage_AlarmParam::set_has_chnseq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmRecordMessage_AlarmParam::clear_has_chnseq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmRecordMessage_AlarmParam::clear_chnseq() {
  chnseq_ = 0;
  clear_has_chnseq();
}
inline ::google::protobuf::int32 AlarmRecordMessage_AlarmParam::chnseq() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordMessage.AlarmParam.chnSeq)
  return chnseq_;
}
inline void AlarmRecordMessage_AlarmParam::set_chnseq(::google::protobuf::int32 value) {
  set_has_chnseq();
  chnseq_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordMessage.AlarmParam.chnSeq)
}

// optional int32 limit = 4 [default = 0];
inline bool AlarmRecordMessage_AlarmParam::has_limit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmRecordMessage_AlarmParam::set_has_limit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmRecordMessage_AlarmParam::clear_has_limit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmRecordMessage_AlarmParam::clear_limit() {
  limit_ = 0;
  clear_has_limit();
}
inline ::google::protobuf::int32 AlarmRecordMessage_AlarmParam::limit() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordMessage.AlarmParam.limit)
  return limit_;
}
inline void AlarmRecordMessage_AlarmParam::set_limit(::google::protobuf::int32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordMessage.AlarmParam.limit)
}

// -------------------------------------------------------------------

// AlarmRecordMessage

// optional int32 requestType = 1 [default = -1];
inline bool AlarmRecordMessage::has_requesttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmRecordMessage::set_has_requesttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmRecordMessage::clear_has_requesttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmRecordMessage::clear_requesttype() {
  requesttype_ = -1;
  clear_has_requesttype();
}
inline ::google::protobuf::int32 AlarmRecordMessage::requesttype() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordMessage.requestType)
  return requesttype_;
}
inline void AlarmRecordMessage::set_requesttype(::google::protobuf::int32 value) {
  set_has_requesttype();
  requesttype_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordMessage.requestType)
}

// optional int32 result = 2 [default = -1];
inline bool AlarmRecordMessage::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmRecordMessage::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmRecordMessage::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmRecordMessage::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::google::protobuf::int32 AlarmRecordMessage::result() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordMessage.result)
  return result_;
}
inline void AlarmRecordMessage::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordMessage.result)
}

// optional bytes resultDescribe = 3 [default = ""];
inline bool AlarmRecordMessage::has_resultdescribe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmRecordMessage::set_has_resultdescribe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmRecordMessage::clear_has_resultdescribe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmRecordMessage::clear_resultdescribe() {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_->clear();
  }
  clear_has_resultdescribe();
}
inline const ::std::string& AlarmRecordMessage::resultdescribe() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordMessage.resultDescribe)
  return *resultdescribe_;
}
inline void AlarmRecordMessage::set_resultdescribe(const ::std::string& value) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordMessage.resultDescribe)
}
inline void AlarmRecordMessage::set_resultdescribe(const char* value) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmRecordMessage.resultDescribe)
}
inline void AlarmRecordMessage::set_resultdescribe(const void* value, size_t size) {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  resultdescribe_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmRecordMessage.resultDescribe)
}
inline ::std::string* AlarmRecordMessage::mutable_resultdescribe() {
  set_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resultdescribe_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRecordMessage.resultDescribe)
  return resultdescribe_;
}
inline ::std::string* AlarmRecordMessage::release_resultdescribe() {
  clear_has_resultdescribe();
  if (resultdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = resultdescribe_;
    resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmRecordMessage::set_allocated_resultdescribe(::std::string* resultdescribe) {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdescribe_;
  }
  if (resultdescribe) {
    set_has_resultdescribe();
    resultdescribe_ = resultdescribe;
  } else {
    clear_has_resultdescribe();
    resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmRecordMessage.resultDescribe)
}

// repeated .com.arges.file.proto.AlarmRecordData datas = 4;
inline int AlarmRecordMessage::datas_size() const {
  return datas_.size();
}
inline void AlarmRecordMessage::clear_datas() {
  datas_.Clear();
}
inline const ::com::arges::file::proto::AlarmRecordData& AlarmRecordMessage::datas(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordMessage.datas)
  return datas_.Get(index);
}
inline ::com::arges::file::proto::AlarmRecordData* AlarmRecordMessage::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRecordMessage.datas)
  return datas_.Mutable(index);
}
inline ::com::arges::file::proto::AlarmRecordData* AlarmRecordMessage::add_datas() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmRecordMessage.datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordData >&
AlarmRecordMessage::datas() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmRecordMessage.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordData >*
AlarmRecordMessage::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmRecordMessage.datas)
  return &datas_;
}

// optional int64 startTime = 5 [default = -1];
inline bool AlarmRecordMessage::has_starttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlarmRecordMessage::set_has_starttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AlarmRecordMessage::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AlarmRecordMessage::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(-1);
  clear_has_starttime();
}
inline ::google::protobuf::int64 AlarmRecordMessage::starttime() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordMessage.startTime)
  return starttime_;
}
inline void AlarmRecordMessage::set_starttime(::google::protobuf::int64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordMessage.startTime)
}

// optional int64 endTime = 6 [default = -1];
inline bool AlarmRecordMessage::has_endtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AlarmRecordMessage::set_has_endtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AlarmRecordMessage::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AlarmRecordMessage::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(-1);
  clear_has_endtime();
}
inline ::google::protobuf::int64 AlarmRecordMessage::endtime() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordMessage.endTime)
  return endtime_;
}
inline void AlarmRecordMessage::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordMessage.endTime)
}

// repeated .com.arges.file.proto.AlarmRecordMessage.AlarmParam params = 7;
inline int AlarmRecordMessage::params_size() const {
  return params_.size();
}
inline void AlarmRecordMessage::clear_params() {
  params_.Clear();
}
inline const ::com::arges::file::proto::AlarmRecordMessage_AlarmParam& AlarmRecordMessage::params(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordMessage.params)
  return params_.Get(index);
}
inline ::com::arges::file::proto::AlarmRecordMessage_AlarmParam* AlarmRecordMessage::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRecordMessage.params)
  return params_.Mutable(index);
}
inline ::com::arges::file::proto::AlarmRecordMessage_AlarmParam* AlarmRecordMessage::add_params() {
  // @@protoc_insertion_point(field_add:com.arges.file.proto.AlarmRecordMessage.params)
  return params_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordMessage_AlarmParam >&
AlarmRecordMessage::params() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.AlarmRecordMessage.params)
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::arges::file::proto::AlarmRecordMessage_AlarmParam >*
AlarmRecordMessage::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.AlarmRecordMessage.params)
  return &params_;
}

// optional string nginxConf = 8 [default = ""];
inline bool AlarmRecordMessage::has_nginxconf() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AlarmRecordMessage::set_has_nginxconf() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AlarmRecordMessage::clear_has_nginxconf() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AlarmRecordMessage::clear_nginxconf() {
  if (nginxconf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nginxconf_->clear();
  }
  clear_has_nginxconf();
}
inline const ::std::string& AlarmRecordMessage::nginxconf() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordMessage.nginxConf)
  return *nginxconf_;
}
inline void AlarmRecordMessage::set_nginxconf(const ::std::string& value) {
  set_has_nginxconf();
  if (nginxconf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nginxconf_ = new ::std::string;
  }
  nginxconf_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordMessage.nginxConf)
}
inline void AlarmRecordMessage::set_nginxconf(const char* value) {
  set_has_nginxconf();
  if (nginxconf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nginxconf_ = new ::std::string;
  }
  nginxconf_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmRecordMessage.nginxConf)
}
inline void AlarmRecordMessage::set_nginxconf(const char* value, size_t size) {
  set_has_nginxconf();
  if (nginxconf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nginxconf_ = new ::std::string;
  }
  nginxconf_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmRecordMessage.nginxConf)
}
inline ::std::string* AlarmRecordMessage::mutable_nginxconf() {
  set_has_nginxconf();
  if (nginxconf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nginxconf_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRecordMessage.nginxConf)
  return nginxconf_;
}
inline ::std::string* AlarmRecordMessage::release_nginxconf() {
  clear_has_nginxconf();
  if (nginxconf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nginxconf_;
    nginxconf_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmRecordMessage::set_allocated_nginxconf(::std::string* nginxconf) {
  if (nginxconf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nginxconf_;
  }
  if (nginxconf) {
    set_has_nginxconf();
    nginxconf_ = nginxconf;
  } else {
    clear_has_nginxconf();
    nginxconf_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmRecordMessage.nginxConf)
}

// optional string nginxOut = 9 [default = ""];
inline bool AlarmRecordMessage::has_nginxout() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AlarmRecordMessage::set_has_nginxout() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AlarmRecordMessage::clear_has_nginxout() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AlarmRecordMessage::clear_nginxout() {
  if (nginxout_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nginxout_->clear();
  }
  clear_has_nginxout();
}
inline const ::std::string& AlarmRecordMessage::nginxout() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.AlarmRecordMessage.nginxOut)
  return *nginxout_;
}
inline void AlarmRecordMessage::set_nginxout(const ::std::string& value) {
  set_has_nginxout();
  if (nginxout_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nginxout_ = new ::std::string;
  }
  nginxout_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.AlarmRecordMessage.nginxOut)
}
inline void AlarmRecordMessage::set_nginxout(const char* value) {
  set_has_nginxout();
  if (nginxout_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nginxout_ = new ::std::string;
  }
  nginxout_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.AlarmRecordMessage.nginxOut)
}
inline void AlarmRecordMessage::set_nginxout(const char* value, size_t size) {
  set_has_nginxout();
  if (nginxout_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nginxout_ = new ::std::string;
  }
  nginxout_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.AlarmRecordMessage.nginxOut)
}
inline ::std::string* AlarmRecordMessage::mutable_nginxout() {
  set_has_nginxout();
  if (nginxout_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nginxout_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.AlarmRecordMessage.nginxOut)
  return nginxout_;
}
inline ::std::string* AlarmRecordMessage::release_nginxout() {
  clear_has_nginxout();
  if (nginxout_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nginxout_;
    nginxout_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmRecordMessage::set_allocated_nginxout(::std::string* nginxout) {
  if (nginxout_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nginxout_;
  }
  if (nginxout) {
    set_has_nginxout();
    nginxout_ = nginxout;
  } else {
    clear_has_nginxout();
    nginxout_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.AlarmRecordMessage.nginxOut)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace file
}  // namespace arges
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::arges::file::proto::DEVICE_TYPE_OF_ALARM_SROUCE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::DEVICE_TYPE_OF_ALARM_SROUCE>() {
  return ::com::arges::file::proto::DEVICE_TYPE_OF_ALARM_SROUCE_descriptor();
}
template <> struct is_proto_enum< ::com::arges::file::proto::RESULT_TYPE_OF_ALARM> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::RESULT_TYPE_OF_ALARM>() {
  return ::com::arges::file::proto::RESULT_TYPE_OF_ALARM_descriptor();
}
template <> struct is_proto_enum< ::com::arges::file::proto::REQUEST_TYPE_OF_ALARM_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::REQUEST_TYPE_OF_ALARM_TYPE>() {
  return ::com::arges::file::proto::REQUEST_TYPE_OF_ALARM_TYPE_descriptor();
}
template <> struct is_proto_enum< ::com::arges::file::proto::RESULT_TYPE_OF_ALARM_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::RESULT_TYPE_OF_ALARM_TYPE>() {
  return ::com::arges::file::proto::RESULT_TYPE_OF_ALARM_TYPE_descriptor();
}
template <> struct is_proto_enum< ::com::arges::file::proto::REQUEST_TYPE_OF_ACTION_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::REQUEST_TYPE_OF_ACTION_TYPE>() {
  return ::com::arges::file::proto::REQUEST_TYPE_OF_ACTION_TYPE_descriptor();
}
template <> struct is_proto_enum< ::com::arges::file::proto::RESULT_TYPE_OF_ACTION_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::RESULT_TYPE_OF_ACTION_TYPE>() {
  return ::com::arges::file::proto::RESULT_TYPE_OF_ACTION_TYPE_descriptor();
}
template <> struct is_proto_enum< ::com::arges::file::proto::FLAG_TYPE_OF_ALARM_DATA> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::FLAG_TYPE_OF_ALARM_DATA>() {
  return ::com::arges::file::proto::FLAG_TYPE_OF_ALARM_DATA_descriptor();
}
template <> struct is_proto_enum< ::com::arges::file::proto::USING_STAT_OF_ALARM_PLAN> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::USING_STAT_OF_ALARM_PLAN>() {
  return ::com::arges::file::proto::USING_STAT_OF_ALARM_PLAN_descriptor();
}
template <> struct is_proto_enum< ::com::arges::file::proto::USER_TYPE_OF_ALARM_PLAN> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::USER_TYPE_OF_ALARM_PLAN>() {
  return ::com::arges::file::proto::USER_TYPE_OF_ALARM_PLAN_descriptor();
}
template <> struct is_proto_enum< ::com::arges::file::proto::RESULT_TYPE_OF_ALARM_PLAN> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::RESULT_TYPE_OF_ALARM_PLAN>() {
  return ::com::arges::file::proto::RESULT_TYPE_OF_ALARM_PLAN_descriptor();
}
template <> struct is_proto_enum< ::com::arges::file::proto::REQUEST_TYPE_OF_ALARM_PLAN> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::REQUEST_TYPE_OF_ALARM_PLAN>() {
  return ::com::arges::file::proto::REQUEST_TYPE_OF_ALARM_PLAN_descriptor();
}
template <> struct is_proto_enum< ::com::arges::file::proto::RESULT_TYPE_OF_ALARM_GET_DEV> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::RESULT_TYPE_OF_ALARM_GET_DEV>() {
  return ::com::arges::file::proto::RESULT_TYPE_OF_ALARM_GET_DEV_descriptor();
}
template <> struct is_proto_enum< ::com::arges::file::proto::RESULT_TYPE_OF_GET_SRCSOURCE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::RESULT_TYPE_OF_GET_SRCSOURCE>() {
  return ::com::arges::file::proto::RESULT_TYPE_OF_GET_SRCSOURCE_descriptor();
}
template <> struct is_proto_enum< ::com::arges::file::proto::REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE>() {
  return ::com::arges::file::proto::REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_descriptor();
}
template <> struct is_proto_enum< ::com::arges::file::proto::REQUEST_TYPE_OF_ALARM_RECORD> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::REQUEST_TYPE_OF_ALARM_RECORD>() {
  return ::com::arges::file::proto::REQUEST_TYPE_OF_ALARM_RECORD_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AlarmBean_2eproto__INCLUDED
