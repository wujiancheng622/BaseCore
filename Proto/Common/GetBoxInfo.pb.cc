// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GetBoxInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GetBoxInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace arges {
namespace file {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* ReqGetBoxInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqGetBoxInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RspGetBoxInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RspGetBoxInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_GetBoxInfo_2eproto() {
  protobuf_AddDesc_GetBoxInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "GetBoxInfo.proto");
  GOOGLE_CHECK(file != NULL);
  ReqGetBoxInfo_descriptor_ = file->message_type(0);
  static const int ReqGetBoxInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGetBoxInfo, describe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGetBoxInfo, requesttype_),
  };
  ReqGetBoxInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqGetBoxInfo_descriptor_,
      ReqGetBoxInfo::default_instance_,
      ReqGetBoxInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGetBoxInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqGetBoxInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqGetBoxInfo));
  RspGetBoxInfo_descriptor_ = file->message_type(1);
  static const int RspGetBoxInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspGetBoxInfo, boxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspGetBoxInfo, resultdescirbe_),
  };
  RspGetBoxInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RspGetBoxInfo_descriptor_,
      RspGetBoxInfo::default_instance_,
      RspGetBoxInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspGetBoxInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspGetBoxInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RspGetBoxInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_GetBoxInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqGetBoxInfo_descriptor_, &ReqGetBoxInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RspGetBoxInfo_descriptor_, &RspGetBoxInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_GetBoxInfo_2eproto() {
  delete ReqGetBoxInfo::default_instance_;
  delete ReqGetBoxInfo_reflection_;
  delete RspGetBoxInfo::default_instance_;
  delete RspGetBoxInfo_reflection_;
}

void protobuf_AddDesc_GetBoxInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020GetBoxInfo.proto\022\024com.arges.file.proto"
    "\"<\n\rReqGetBoxInfo\022\022\n\010describe\030\001 \001(\t:\000\022\027\n"
    "\013requesTtype\030\002 \001(\005:\002-1\":\n\rRspGetBoxInfo\022"
    "\017\n\005boxid\030\001 \001(\t:\000\022\030\n\016resultDescirbe\030\002 \001(\t"
    ":\000", 162);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GetBoxInfo.proto", &protobuf_RegisterTypes);
  ReqGetBoxInfo::default_instance_ = new ReqGetBoxInfo();
  RspGetBoxInfo::default_instance_ = new RspGetBoxInfo();
  ReqGetBoxInfo::default_instance_->InitAsDefaultInstance();
  RspGetBoxInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_GetBoxInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_GetBoxInfo_2eproto {
  StaticDescriptorInitializer_GetBoxInfo_2eproto() {
    protobuf_AddDesc_GetBoxInfo_2eproto();
  }
} static_descriptor_initializer_GetBoxInfo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ReqGetBoxInfo::kDescribeFieldNumber;
const int ReqGetBoxInfo::kRequesTtypeFieldNumber;
#endif  // !_MSC_VER

ReqGetBoxInfo::ReqGetBoxInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.ReqGetBoxInfo)
}

void ReqGetBoxInfo::InitAsDefaultInstance() {
}

ReqGetBoxInfo::ReqGetBoxInfo(const ReqGetBoxInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.ReqGetBoxInfo)
}

void ReqGetBoxInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  describe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requesttype_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqGetBoxInfo::~ReqGetBoxInfo() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.ReqGetBoxInfo)
  SharedDtor();
}

void ReqGetBoxInfo::SharedDtor() {
  if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete describe_;
  }
  if (this != default_instance_) {
  }
}

void ReqGetBoxInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqGetBoxInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqGetBoxInfo_descriptor_;
}

const ReqGetBoxInfo& ReqGetBoxInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GetBoxInfo_2eproto();
  return *default_instance_;
}

ReqGetBoxInfo* ReqGetBoxInfo::default_instance_ = NULL;

ReqGetBoxInfo* ReqGetBoxInfo::New() const {
  return new ReqGetBoxInfo;
}

void ReqGetBoxInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_describe()) {
      if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        describe_->clear();
      }
    }
    requesttype_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqGetBoxInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.ReqGetBoxInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string describe = 1 [default = ""];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_describe()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->describe().data(), this->describe().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "describe");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_requesTtype;
        break;
      }

      // optional int32 requesTtype = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_requesTtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requesttype_)));
          set_has_requesttype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.ReqGetBoxInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.ReqGetBoxInfo)
  return false;
#undef DO_
}

void ReqGetBoxInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.ReqGetBoxInfo)
  // optional string describe = 1 [default = ""];
  if (has_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "describe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->describe(), output);
  }

  // optional int32 requesTtype = 2 [default = -1];
  if (has_requesttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->requesttype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.ReqGetBoxInfo)
}

::google::protobuf::uint8* ReqGetBoxInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.ReqGetBoxInfo)
  // optional string describe = 1 [default = ""];
  if (has_describe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "describe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->describe(), target);
  }

  // optional int32 requesTtype = 2 [default = -1];
  if (has_requesttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->requesttype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.ReqGetBoxInfo)
  return target;
}

int ReqGetBoxInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string describe = 1 [default = ""];
    if (has_describe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->describe());
    }

    // optional int32 requesTtype = 2 [default = -1];
    if (has_requesttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->requesttype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqGetBoxInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqGetBoxInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqGetBoxInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqGetBoxInfo::MergeFrom(const ReqGetBoxInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_describe()) {
      set_describe(from.describe());
    }
    if (from.has_requesttype()) {
      set_requesttype(from.requesttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqGetBoxInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGetBoxInfo::CopyFrom(const ReqGetBoxInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGetBoxInfo::IsInitialized() const {

  return true;
}

void ReqGetBoxInfo::Swap(ReqGetBoxInfo* other) {
  if (other != this) {
    std::swap(describe_, other->describe_);
    std::swap(requesttype_, other->requesttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqGetBoxInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqGetBoxInfo_descriptor_;
  metadata.reflection = ReqGetBoxInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RspGetBoxInfo::kBoxidFieldNumber;
const int RspGetBoxInfo::kResultDescirbeFieldNumber;
#endif  // !_MSC_VER

RspGetBoxInfo::RspGetBoxInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.RspGetBoxInfo)
}

void RspGetBoxInfo::InitAsDefaultInstance() {
}

RspGetBoxInfo::RspGetBoxInfo(const RspGetBoxInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.RspGetBoxInfo)
}

void RspGetBoxInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  boxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resultdescirbe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RspGetBoxInfo::~RspGetBoxInfo() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.RspGetBoxInfo)
  SharedDtor();
}

void RspGetBoxInfo::SharedDtor() {
  if (boxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete boxid_;
  }
  if (resultdescirbe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdescirbe_;
  }
  if (this != default_instance_) {
  }
}

void RspGetBoxInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RspGetBoxInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RspGetBoxInfo_descriptor_;
}

const RspGetBoxInfo& RspGetBoxInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GetBoxInfo_2eproto();
  return *default_instance_;
}

RspGetBoxInfo* RspGetBoxInfo::default_instance_ = NULL;

RspGetBoxInfo* RspGetBoxInfo::New() const {
  return new RspGetBoxInfo;
}

void RspGetBoxInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_boxid()) {
      if (boxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        boxid_->clear();
      }
    }
    if (has_resultdescirbe()) {
      if (resultdescirbe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resultdescirbe_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RspGetBoxInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.RspGetBoxInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string boxid = 1 [default = ""];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_boxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->boxid().data(), this->boxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "boxid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resultDescirbe;
        break;
      }

      // optional string resultDescirbe = 2 [default = ""];
      case 2: {
        if (tag == 18) {
         parse_resultDescirbe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resultdescirbe()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resultdescirbe().data(), this->resultdescirbe().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resultdescirbe");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.RspGetBoxInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.RspGetBoxInfo)
  return false;
#undef DO_
}

void RspGetBoxInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.RspGetBoxInfo)
  // optional string boxid = 1 [default = ""];
  if (has_boxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->boxid().data(), this->boxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "boxid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->boxid(), output);
  }

  // optional string resultDescirbe = 2 [default = ""];
  if (has_resultdescirbe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdescirbe().data(), this->resultdescirbe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdescirbe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resultdescirbe(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.RspGetBoxInfo)
}

::google::protobuf::uint8* RspGetBoxInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.RspGetBoxInfo)
  // optional string boxid = 1 [default = ""];
  if (has_boxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->boxid().data(), this->boxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "boxid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->boxid(), target);
  }

  // optional string resultDescirbe = 2 [default = ""];
  if (has_resultdescirbe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdescirbe().data(), this->resultdescirbe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdescirbe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->resultdescirbe(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.RspGetBoxInfo)
  return target;
}

int RspGetBoxInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string boxid = 1 [default = ""];
    if (has_boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->boxid());
    }

    // optional string resultDescirbe = 2 [default = ""];
    if (has_resultdescirbe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resultdescirbe());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RspGetBoxInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RspGetBoxInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RspGetBoxInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RspGetBoxInfo::MergeFrom(const RspGetBoxInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_boxid()) {
      set_boxid(from.boxid());
    }
    if (from.has_resultdescirbe()) {
      set_resultdescirbe(from.resultdescirbe());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RspGetBoxInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspGetBoxInfo::CopyFrom(const RspGetBoxInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspGetBoxInfo::IsInitialized() const {

  return true;
}

void RspGetBoxInfo::Swap(RspGetBoxInfo* other) {
  if (other != this) {
    std::swap(boxid_, other->boxid_);
    std::swap(resultdescirbe_, other->resultdescirbe_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RspGetBoxInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RspGetBoxInfo_descriptor_;
  metadata.reflection = RspGetBoxInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace file
}  // namespace arges
}  // namespace com

// @@protoc_insertion_point(global_scope)
