// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TimeTemplateBean.proto

#ifndef PROTOBUF_TimeTemplateBean_2eproto__INCLUDED
#define PROTOBUF_TimeTemplateBean_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace arges {
namespace file {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TimeTemplateBean_2eproto();
void protobuf_AssignDesc_TimeTemplateBean_2eproto();
void protobuf_ShutdownFile_TimeTemplateBean_2eproto();

class TimeTemplateData;

// ===================================================================

class TimeTemplateData : public ::google::protobuf::Message {
 public:
  TimeTemplateData();
  virtual ~TimeTemplateData();

  TimeTemplateData(const TimeTemplateData& from);

  inline TimeTemplateData& operator=(const TimeTemplateData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeTemplateData& default_instance();

  void Swap(TimeTemplateData* other);

  // implements Message ----------------------------------------------

  TimeTemplateData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimeTemplateData& from);
  void MergeFrom(const TimeTemplateData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 startTime = 1 [default = 0];
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 1;
  inline ::google::protobuf::int64 starttime() const;
  inline void set_starttime(::google::protobuf::int64 value);

  // optional int64 endTime = 2 [default = 0];
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 2;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // optional bool isRepeat = 3 [default = false];
  inline bool has_isrepeat() const;
  inline void clear_isrepeat();
  static const int kIsRepeatFieldNumber = 3;
  inline bool isrepeat() const;
  inline void set_isrepeat(bool value);

  // optional string repeatWeek = 4 [default = ""];
  inline bool has_repeatweek() const;
  inline void clear_repeatweek();
  static const int kRepeatWeekFieldNumber = 4;
  inline const ::std::string& repeatweek() const;
  inline void set_repeatweek(const ::std::string& value);
  inline void set_repeatweek(const char* value);
  inline void set_repeatweek(const char* value, size_t size);
  inline ::std::string* mutable_repeatweek();
  inline ::std::string* release_repeatweek();
  inline void set_allocated_repeatweek(::std::string* repeatweek);

  // optional bool isRepeatForever = 5 [default = false];
  inline bool has_isrepeatforever() const;
  inline void clear_isrepeatforever();
  static const int kIsRepeatForeverFieldNumber = 5;
  inline bool isrepeatforever() const;
  inline void set_isrepeatforever(bool value);

  // optional int64 repeatEndTime = 6 [default = 0];
  inline bool has_repeatendtime() const;
  inline void clear_repeatendtime();
  static const int kRepeatEndTimeFieldNumber = 6;
  inline ::google::protobuf::int64 repeatendtime() const;
  inline void set_repeatendtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.TimeTemplateData)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_isrepeat();
  inline void clear_has_isrepeat();
  inline void set_has_repeatweek();
  inline void clear_has_repeatweek();
  inline void set_has_isrepeatforever();
  inline void clear_has_isrepeatforever();
  inline void set_has_repeatendtime();
  inline void clear_has_repeatendtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 starttime_;
  ::google::protobuf::int64 endtime_;
  ::std::string* repeatweek_;
  ::google::protobuf::int64 repeatendtime_;
  bool isrepeat_;
  bool isrepeatforever_;
  friend void  protobuf_AddDesc_TimeTemplateBean_2eproto();
  friend void protobuf_AssignDesc_TimeTemplateBean_2eproto();
  friend void protobuf_ShutdownFile_TimeTemplateBean_2eproto();

  void InitAsDefaultInstance();
  static TimeTemplateData* default_instance_;
};
// ===================================================================


// ===================================================================

// TimeTemplateData

// optional int64 startTime = 1 [default = 0];
inline bool TimeTemplateData::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeTemplateData::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimeTemplateData::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimeTemplateData::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::int64 TimeTemplateData::starttime() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.TimeTemplateData.startTime)
  return starttime_;
}
inline void TimeTemplateData::set_starttime(::google::protobuf::int64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.TimeTemplateData.startTime)
}

// optional int64 endTime = 2 [default = 0];
inline bool TimeTemplateData::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimeTemplateData::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimeTemplateData::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimeTemplateData::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 TimeTemplateData::endtime() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.TimeTemplateData.endTime)
  return endtime_;
}
inline void TimeTemplateData::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.TimeTemplateData.endTime)
}

// optional bool isRepeat = 3 [default = false];
inline bool TimeTemplateData::has_isrepeat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TimeTemplateData::set_has_isrepeat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TimeTemplateData::clear_has_isrepeat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TimeTemplateData::clear_isrepeat() {
  isrepeat_ = false;
  clear_has_isrepeat();
}
inline bool TimeTemplateData::isrepeat() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.TimeTemplateData.isRepeat)
  return isrepeat_;
}
inline void TimeTemplateData::set_isrepeat(bool value) {
  set_has_isrepeat();
  isrepeat_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.TimeTemplateData.isRepeat)
}

// optional string repeatWeek = 4 [default = ""];
inline bool TimeTemplateData::has_repeatweek() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TimeTemplateData::set_has_repeatweek() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TimeTemplateData::clear_has_repeatweek() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TimeTemplateData::clear_repeatweek() {
  if (repeatweek_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    repeatweek_->clear();
  }
  clear_has_repeatweek();
}
inline const ::std::string& TimeTemplateData::repeatweek() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.TimeTemplateData.repeatWeek)
  return *repeatweek_;
}
inline void TimeTemplateData::set_repeatweek(const ::std::string& value) {
  set_has_repeatweek();
  if (repeatweek_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    repeatweek_ = new ::std::string;
  }
  repeatweek_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.TimeTemplateData.repeatWeek)
}
inline void TimeTemplateData::set_repeatweek(const char* value) {
  set_has_repeatweek();
  if (repeatweek_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    repeatweek_ = new ::std::string;
  }
  repeatweek_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.TimeTemplateData.repeatWeek)
}
inline void TimeTemplateData::set_repeatweek(const char* value, size_t size) {
  set_has_repeatweek();
  if (repeatweek_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    repeatweek_ = new ::std::string;
  }
  repeatweek_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.TimeTemplateData.repeatWeek)
}
inline ::std::string* TimeTemplateData::mutable_repeatweek() {
  set_has_repeatweek();
  if (repeatweek_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    repeatweek_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.TimeTemplateData.repeatWeek)
  return repeatweek_;
}
inline ::std::string* TimeTemplateData::release_repeatweek() {
  clear_has_repeatweek();
  if (repeatweek_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = repeatweek_;
    repeatweek_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TimeTemplateData::set_allocated_repeatweek(::std::string* repeatweek) {
  if (repeatweek_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete repeatweek_;
  }
  if (repeatweek) {
    set_has_repeatweek();
    repeatweek_ = repeatweek;
  } else {
    clear_has_repeatweek();
    repeatweek_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.TimeTemplateData.repeatWeek)
}

// optional bool isRepeatForever = 5 [default = false];
inline bool TimeTemplateData::has_isrepeatforever() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TimeTemplateData::set_has_isrepeatforever() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TimeTemplateData::clear_has_isrepeatforever() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TimeTemplateData::clear_isrepeatforever() {
  isrepeatforever_ = false;
  clear_has_isrepeatforever();
}
inline bool TimeTemplateData::isrepeatforever() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.TimeTemplateData.isRepeatForever)
  return isrepeatforever_;
}
inline void TimeTemplateData::set_isrepeatforever(bool value) {
  set_has_isrepeatforever();
  isrepeatforever_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.TimeTemplateData.isRepeatForever)
}

// optional int64 repeatEndTime = 6 [default = 0];
inline bool TimeTemplateData::has_repeatendtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TimeTemplateData::set_has_repeatendtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TimeTemplateData::clear_has_repeatendtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TimeTemplateData::clear_repeatendtime() {
  repeatendtime_ = GOOGLE_LONGLONG(0);
  clear_has_repeatendtime();
}
inline ::google::protobuf::int64 TimeTemplateData::repeatendtime() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.TimeTemplateData.repeatEndTime)
  return repeatendtime_;
}
inline void TimeTemplateData::set_repeatendtime(::google::protobuf::int64 value) {
  set_has_repeatendtime();
  repeatendtime_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.TimeTemplateData.repeatEndTime)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace file
}  // namespace arges
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TimeTemplateBean_2eproto__INCLUDED
