// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AlarmHost.proto

#ifndef PROTOBUF_AlarmHost_2eproto__INCLUDED
#define PROTOBUF_AlarmHost_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace arges {
namespace file {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AlarmHost_2eproto();
void protobuf_AssignDesc_AlarmHost_2eproto();
void protobuf_ShutdownFile_AlarmHost_2eproto();

class SetAHostMassage;

enum ALARMHOST_OPT_TYPE {
  AHOST_OPERATE_DEVICE = 1,
  AHOST_OPERATE_CHANNEL = 2,
  AHOST_OPERATE_PARTITION = 3
};
bool ALARMHOST_OPT_TYPE_IsValid(int value);
const ALARMHOST_OPT_TYPE ALARMHOST_OPT_TYPE_MIN = AHOST_OPERATE_DEVICE;
const ALARMHOST_OPT_TYPE ALARMHOST_OPT_TYPE_MAX = AHOST_OPERATE_PARTITION;
const int ALARMHOST_OPT_TYPE_ARRAYSIZE = ALARMHOST_OPT_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* ALARMHOST_OPT_TYPE_descriptor();
inline const ::std::string& ALARMHOST_OPT_TYPE_Name(ALARMHOST_OPT_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    ALARMHOST_OPT_TYPE_descriptor(), value);
}
inline bool ALARMHOST_OPT_TYPE_Parse(
    const ::std::string& name, ALARMHOST_OPT_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ALARMHOST_OPT_TYPE>(
    ALARMHOST_OPT_TYPE_descriptor(), name, value);
}
enum AHOST_CMD_TYPE {
  AHOST_CMD_ENABLE = 1,
  AHOST_CMD_DISABLE = 2,
  AHOST_CMD_BYPASS = 3,
  AHOST_CMD_CANCELKBLIGHT = 4,
  AHOST_CMD_ALARMMODE = 5,
  AHOST_CMD_CANCELALARM = 6,
  AHOST_CMD_ALARMOUT_ON = 7,
  AHOST_CMD_ALARMOUT_OFF = 8
};
bool AHOST_CMD_TYPE_IsValid(int value);
const AHOST_CMD_TYPE AHOST_CMD_TYPE_MIN = AHOST_CMD_ENABLE;
const AHOST_CMD_TYPE AHOST_CMD_TYPE_MAX = AHOST_CMD_ALARMOUT_OFF;
const int AHOST_CMD_TYPE_ARRAYSIZE = AHOST_CMD_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* AHOST_CMD_TYPE_descriptor();
inline const ::std::string& AHOST_CMD_TYPE_Name(AHOST_CMD_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    AHOST_CMD_TYPE_descriptor(), value);
}
inline bool AHOST_CMD_TYPE_Parse(
    const ::std::string& name, AHOST_CMD_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AHOST_CMD_TYPE>(
    AHOST_CMD_TYPE_descriptor(), name, value);
}
// ===================================================================

class SetAHostMassage : public ::google::protobuf::Message {
 public:
  SetAHostMassage();
  virtual ~SetAHostMassage();

  SetAHostMassage(const SetAHostMassage& from);

  inline SetAHostMassage& operator=(const SetAHostMassage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetAHostMassage& default_instance();

  void Swap(SetAHostMassage* other);

  // implements Message ----------------------------------------------

  SetAHostMassage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetAHostMassage& from);
  void MergeFrom(const SetAHostMassage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string devid = 1 [default = ""];
  inline bool has_devid() const;
  inline void clear_devid();
  static const int kDevidFieldNumber = 1;
  inline const ::std::string& devid() const;
  inline void set_devid(const ::std::string& value);
  inline void set_devid(const char* value);
  inline void set_devid(const char* value, size_t size);
  inline ::std::string* mutable_devid();
  inline ::std::string* release_devid();
  inline void set_allocated_devid(::std::string* devid);

  // repeated string nodeid = 2;
  inline int nodeid_size() const;
  inline void clear_nodeid();
  static const int kNodeidFieldNumber = 2;
  inline const ::std::string& nodeid(int index) const;
  inline ::std::string* mutable_nodeid(int index);
  inline void set_nodeid(int index, const ::std::string& value);
  inline void set_nodeid(int index, const char* value);
  inline void set_nodeid(int index, const char* value, size_t size);
  inline ::std::string* add_nodeid();
  inline void add_nodeid(const ::std::string& value);
  inline void add_nodeid(const char* value);
  inline void add_nodeid(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& nodeid() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_nodeid();

  // optional int32 type = 3 [default = -1];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 cmd = 4 [default = -1];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 4;
  inline ::google::protobuf::int32 cmd() const;
  inline void set_cmd(::google::protobuf::int32 value);

  // optional int64 startTime = 5 [default = -1];
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 5;
  inline ::google::protobuf::int64 starttime() const;
  inline void set_starttime(::google::protobuf::int64 value);

  // optional int64 endTime = 6 [default = -1];
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 6;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.arges.file.proto.SetAHostMassage)
 private:
  inline void set_has_devid();
  inline void clear_has_devid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* devid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> nodeid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int64 starttime_;
  ::google::protobuf::int64 endtime_;
  friend void  protobuf_AddDesc_AlarmHost_2eproto();
  friend void protobuf_AssignDesc_AlarmHost_2eproto();
  friend void protobuf_ShutdownFile_AlarmHost_2eproto();

  void InitAsDefaultInstance();
  static SetAHostMassage* default_instance_;
};
// ===================================================================


// ===================================================================

// SetAHostMassage

// optional string devid = 1 [default = ""];
inline bool SetAHostMassage::has_devid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetAHostMassage::set_has_devid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetAHostMassage::clear_has_devid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetAHostMassage::clear_devid() {
  if (devid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devid_->clear();
  }
  clear_has_devid();
}
inline const ::std::string& SetAHostMassage::devid() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.SetAHostMassage.devid)
  return *devid_;
}
inline void SetAHostMassage::set_devid(const ::std::string& value) {
  set_has_devid();
  if (devid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devid_ = new ::std::string;
  }
  devid_->assign(value);
  // @@protoc_insertion_point(field_set:com.arges.file.proto.SetAHostMassage.devid)
}
inline void SetAHostMassage::set_devid(const char* value) {
  set_has_devid();
  if (devid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devid_ = new ::std::string;
  }
  devid_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.SetAHostMassage.devid)
}
inline void SetAHostMassage::set_devid(const char* value, size_t size) {
  set_has_devid();
  if (devid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devid_ = new ::std::string;
  }
  devid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.SetAHostMassage.devid)
}
inline ::std::string* SetAHostMassage::mutable_devid() {
  set_has_devid();
  if (devid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.SetAHostMassage.devid)
  return devid_;
}
inline ::std::string* SetAHostMassage::release_devid() {
  clear_has_devid();
  if (devid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = devid_;
    devid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SetAHostMassage::set_allocated_devid(::std::string* devid) {
  if (devid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete devid_;
  }
  if (devid) {
    set_has_devid();
    devid_ = devid;
  } else {
    clear_has_devid();
    devid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.arges.file.proto.SetAHostMassage.devid)
}

// repeated string nodeid = 2;
inline int SetAHostMassage::nodeid_size() const {
  return nodeid_.size();
}
inline void SetAHostMassage::clear_nodeid() {
  nodeid_.Clear();
}
inline const ::std::string& SetAHostMassage::nodeid(int index) const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.SetAHostMassage.nodeid)
  return nodeid_.Get(index);
}
inline ::std::string* SetAHostMassage::mutable_nodeid(int index) {
  // @@protoc_insertion_point(field_mutable:com.arges.file.proto.SetAHostMassage.nodeid)
  return nodeid_.Mutable(index);
}
inline void SetAHostMassage::set_nodeid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.arges.file.proto.SetAHostMassage.nodeid)
  nodeid_.Mutable(index)->assign(value);
}
inline void SetAHostMassage::set_nodeid(int index, const char* value) {
  nodeid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.arges.file.proto.SetAHostMassage.nodeid)
}
inline void SetAHostMassage::set_nodeid(int index, const char* value, size_t size) {
  nodeid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.arges.file.proto.SetAHostMassage.nodeid)
}
inline ::std::string* SetAHostMassage::add_nodeid() {
  return nodeid_.Add();
}
inline void SetAHostMassage::add_nodeid(const ::std::string& value) {
  nodeid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.arges.file.proto.SetAHostMassage.nodeid)
}
inline void SetAHostMassage::add_nodeid(const char* value) {
  nodeid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.arges.file.proto.SetAHostMassage.nodeid)
}
inline void SetAHostMassage::add_nodeid(const char* value, size_t size) {
  nodeid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.arges.file.proto.SetAHostMassage.nodeid)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SetAHostMassage::nodeid() const {
  // @@protoc_insertion_point(field_list:com.arges.file.proto.SetAHostMassage.nodeid)
  return nodeid_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SetAHostMassage::mutable_nodeid() {
  // @@protoc_insertion_point(field_mutable_list:com.arges.file.proto.SetAHostMassage.nodeid)
  return &nodeid_;
}

// optional int32 type = 3 [default = -1];
inline bool SetAHostMassage::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetAHostMassage::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetAHostMassage::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetAHostMassage::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::google::protobuf::int32 SetAHostMassage::type() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.SetAHostMassage.type)
  return type_;
}
inline void SetAHostMassage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.SetAHostMassage.type)
}

// optional int32 cmd = 4 [default = -1];
inline bool SetAHostMassage::has_cmd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetAHostMassage::set_has_cmd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetAHostMassage::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetAHostMassage::clear_cmd() {
  cmd_ = -1;
  clear_has_cmd();
}
inline ::google::protobuf::int32 SetAHostMassage::cmd() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.SetAHostMassage.cmd)
  return cmd_;
}
inline void SetAHostMassage::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.SetAHostMassage.cmd)
}

// optional int64 startTime = 5 [default = -1];
inline bool SetAHostMassage::has_starttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SetAHostMassage::set_has_starttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SetAHostMassage::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SetAHostMassage::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(-1);
  clear_has_starttime();
}
inline ::google::protobuf::int64 SetAHostMassage::starttime() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.SetAHostMassage.startTime)
  return starttime_;
}
inline void SetAHostMassage::set_starttime(::google::protobuf::int64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.SetAHostMassage.startTime)
}

// optional int64 endTime = 6 [default = -1];
inline bool SetAHostMassage::has_endtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SetAHostMassage::set_has_endtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SetAHostMassage::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SetAHostMassage::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(-1);
  clear_has_endtime();
}
inline ::google::protobuf::int64 SetAHostMassage::endtime() const {
  // @@protoc_insertion_point(field_get:com.arges.file.proto.SetAHostMassage.endTime)
  return endtime_;
}
inline void SetAHostMassage::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:com.arges.file.proto.SetAHostMassage.endTime)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace file
}  // namespace arges
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::arges::file::proto::ALARMHOST_OPT_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::ALARMHOST_OPT_TYPE>() {
  return ::com::arges::file::proto::ALARMHOST_OPT_TYPE_descriptor();
}
template <> struct is_proto_enum< ::com::arges::file::proto::AHOST_CMD_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::arges::file::proto::AHOST_CMD_TYPE>() {
  return ::com::arges::file::proto::AHOST_CMD_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AlarmHost_2eproto__INCLUDED
