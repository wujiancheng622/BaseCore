// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AlarmBean.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AlarmBean.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace arges {
namespace file {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* ActionLinkData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActionLinkData_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmSrcDevInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmSrcDevInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmTypeData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmTypeData_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmTypeMassage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmTypeMassage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActionTypeData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActionTypeData_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActionTypeMassage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActionTypeMassage_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmData_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmData_RaisuDustAlarm_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmData_RaisuDustAlarm_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmMassage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmMassage_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmPlanData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmPlanData_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmRuleData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmRuleData_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmPlanMassage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmPlanMassage_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmDataForDIS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmDataForDIS_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAlarmDataForDIS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAlarmDataForDIS_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmGetSrcsourceMassage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmGetSrcsourceMassage_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmRecordData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmRecordData_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmRecordData_LinkVideoData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmRecordData_LinkVideoData_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmRecordData_RaiseAlarmData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmRecordData_RaiseAlarmData_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmRecordMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmRecordMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlarmRecordMessage_AlarmParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlarmRecordMessage_AlarmParam_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DEVICE_TYPE_OF_ALARM_SROUCE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_ALARM_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* REQUEST_TYPE_OF_ALARM_TYPE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_ALARM_TYPE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* REQUEST_TYPE_OF_ACTION_TYPE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_ACTION_TYPE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* FLAG_TYPE_OF_ALARM_DATA_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* USING_STAT_OF_ALARM_PLAN_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* USER_TYPE_OF_ALARM_PLAN_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_ALARM_PLAN_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* REQUEST_TYPE_OF_ALARM_PLAN_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_ALARM_GET_DEV_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_GET_SRCSOURCE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* REQUEST_TYPE_OF_ALARM_RECORD_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_AlarmBean_2eproto() {
  protobuf_AddDesc_AlarmBean_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AlarmBean.proto");
  GOOGLE_CHECK(file != NULL);
  ActionLinkData_descriptor_ = file->message_type(0);
  static const int ActionLinkData_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionLinkData, sounds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionLinkData, lights_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionLinkData, videos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionLinkData, records_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionLinkData, sms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionLinkData, tvwalls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionLinkData, emails_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionLinkData, cpts_),
  };
  ActionLinkData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActionLinkData_descriptor_,
      ActionLinkData::default_instance_,
      ActionLinkData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionLinkData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionLinkData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActionLinkData));
  AlarmSrcDevInfo_descriptor_ = file->message_type(1);
  static const int AlarmSrcDevInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmSrcDevInfo, ruleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmSrcDevInfo, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmSrcDevInfo, nodetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmSrcDevInfo, cascadedevdomain_),
  };
  AlarmSrcDevInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmSrcDevInfo_descriptor_,
      AlarmSrcDevInfo::default_instance_,
      AlarmSrcDevInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmSrcDevInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmSrcDevInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmSrcDevInfo));
  AlarmTypeData_descriptor_ = file->message_type(2);
  static const int AlarmTypeData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmTypeData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmTypeData, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmTypeData, describe_),
  };
  AlarmTypeData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmTypeData_descriptor_,
      AlarmTypeData::default_instance_,
      AlarmTypeData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmTypeData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmTypeData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmTypeData));
  AlarmTypeMassage_descriptor_ = file->message_type(3);
  static const int AlarmTypeMassage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmTypeMassage, requesttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmTypeMassage, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmTypeMassage, resultdescribe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmTypeMassage, alarmtypes_),
  };
  AlarmTypeMassage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmTypeMassage_descriptor_,
      AlarmTypeMassage::default_instance_,
      AlarmTypeMassage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmTypeMassage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmTypeMassage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmTypeMassage));
  ActionTypeData_descriptor_ = file->message_type(4);
  static const int ActionTypeData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTypeData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTypeData, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTypeData, describe_),
  };
  ActionTypeData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActionTypeData_descriptor_,
      ActionTypeData::default_instance_,
      ActionTypeData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTypeData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTypeData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActionTypeData));
  ActionTypeMassage_descriptor_ = file->message_type(5);
  static const int ActionTypeMassage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTypeMassage, requesttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTypeMassage, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTypeMassage, resultdescribe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTypeMassage, actionstypes_),
  };
  ActionTypeMassage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActionTypeMassage_descriptor_,
      ActionTypeMassage::default_instance_,
      ActionTypeMassage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTypeMassage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTypeMassage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActionTypeMassage));
  AlarmData_descriptor_ = file->message_type(6);
  static const int AlarmData_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData, srcdevcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData, srcdevchannelseq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData, alarmtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData, alarmname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData, alarmdescirbe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData, currentalarmdev_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData, alarmtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData, isalarmhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData, alarmflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData, sn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData, raisealarms_),
  };
  AlarmData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmData_descriptor_,
      AlarmData::default_instance_,
      AlarmData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmData));
  AlarmData_RaisuDustAlarm_descriptor_ = AlarmData_descriptor_->nested_type(0);
  static const int AlarmData_RaisuDustAlarm_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData_RaisuDustAlarm, alarmcap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData_RaisuDustAlarm, alarmnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData_RaisuDustAlarm, alarmtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData_RaisuDustAlarm, standardnum_),
  };
  AlarmData_RaisuDustAlarm_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmData_RaisuDustAlarm_descriptor_,
      AlarmData_RaisuDustAlarm::default_instance_,
      AlarmData_RaisuDustAlarm_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData_RaisuDustAlarm, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmData_RaisuDustAlarm, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmData_RaisuDustAlarm));
  AlarmMassage_descriptor_ = file->message_type(7);
  static const int AlarmMassage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmMassage, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmMassage, resultdescribe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmMassage, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmMassage, alarm_),
  };
  AlarmMassage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmMassage_descriptor_,
      AlarmMassage::default_instance_,
      AlarmMassage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmMassage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmMassage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmMassage));
  AlarmPlanData_descriptor_ = file->message_type(8);
  static const int AlarmPlanData_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanData, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanData, usertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanData, timetemplat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanData, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanData, describe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanData, alarms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanData, sounds_),
  };
  AlarmPlanData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmPlanData_descriptor_,
      AlarmPlanData::default_instance_,
      AlarmPlanData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmPlanData));
  AlarmRuleData_descriptor_ = file->message_type(9);
  static const int AlarmRuleData_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRuleData, ruleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRuleData, planid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRuleData, alarmtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRuleData, rulename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRuleData, ruledescribe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRuleData, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRuleData, srcdevs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRuleData, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRuleData, srcdevsfromdis_),
  };
  AlarmRuleData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmRuleData_descriptor_,
      AlarmRuleData::default_instance_,
      AlarmRuleData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRuleData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRuleData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmRuleData));
  AlarmPlanMassage_descriptor_ = file->message_type(10);
  static const int AlarmPlanMassage_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanMassage, requesttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanMassage, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanMassage, resultdescribe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanMassage, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanMassage, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanMassage, plan_),
  };
  AlarmPlanMassage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmPlanMassage_descriptor_,
      AlarmPlanMassage::default_instance_,
      AlarmPlanMassage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanMassage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmPlanMassage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmPlanMassage));
  AlarmDataForDIS_descriptor_ = file->message_type(11);
  static const int AlarmDataForDIS_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmDataForDIS, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmDataForDIS, srcdevcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmDataForDIS, alarm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmDataForDIS, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmDataForDIS, istoats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmDataForDIS, iswritetodc_),
  };
  AlarmDataForDIS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmDataForDIS_descriptor_,
      AlarmDataForDIS::default_instance_,
      AlarmDataForDIS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmDataForDIS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmDataForDIS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmDataForDIS));
  GetAlarmDataForDIS_descriptor_ = file->message_type(12);
  static const int GetAlarmDataForDIS_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAlarmDataForDIS, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAlarmDataForDIS, alarm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAlarmDataForDIS, isneedtosendtopic_),
  };
  GetAlarmDataForDIS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetAlarmDataForDIS_descriptor_,
      GetAlarmDataForDIS::default_instance_,
      GetAlarmDataForDIS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAlarmDataForDIS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAlarmDataForDIS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetAlarmDataForDIS));
  AlarmGetSrcsourceMassage_descriptor_ = file->message_type(13);
  static const int AlarmGetSrcsourceMassage_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmGetSrcsourceMassage, requesttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmGetSrcsourceMassage, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmGetSrcsourceMassage, resultdescribe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmGetSrcsourceMassage, cascadedevdomain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmGetSrcsourceMassage, gpsdev_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmGetSrcsourceMassage, grepdev_),
  };
  AlarmGetSrcsourceMassage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmGetSrcsourceMassage_descriptor_,
      AlarmGetSrcsourceMassage::default_instance_,
      AlarmGetSrcsourceMassage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmGetSrcsourceMassage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmGetSrcsourceMassage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmGetSrcsourceMassage));
  AlarmRecordData_descriptor_ = file->message_type(14);
  static const int AlarmRecordData_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, devcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, unittype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, unitseq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, chnseq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, chnname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, alarmtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, alarmdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, alarmgrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, handleuser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, handledate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, handlemsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, handlestat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, devname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, alarmstat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, videos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, raises_),
  };
  AlarmRecordData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmRecordData_descriptor_,
      AlarmRecordData::default_instance_,
      AlarmRecordData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmRecordData));
  AlarmRecordData_LinkVideoData_descriptor_ = AlarmRecordData_descriptor_->nested_type(0);
  static const int AlarmRecordData_LinkVideoData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData_LinkVideoData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData_LinkVideoData, alarmid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData_LinkVideoData, filepath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData_LinkVideoData, channelcode_),
  };
  AlarmRecordData_LinkVideoData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmRecordData_LinkVideoData_descriptor_,
      AlarmRecordData_LinkVideoData::default_instance_,
      AlarmRecordData_LinkVideoData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData_LinkVideoData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData_LinkVideoData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmRecordData_LinkVideoData));
  AlarmRecordData_RaiseAlarmData_descriptor_ = AlarmRecordData_descriptor_->nested_type(1);
  static const int AlarmRecordData_RaiseAlarmData_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData_RaiseAlarmData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData_RaiseAlarmData, alarmid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData_RaiseAlarmData, alarmcap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData_RaiseAlarmData, alarmnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData_RaiseAlarmData, alarmgroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData_RaiseAlarmData, standardnum_),
  };
  AlarmRecordData_RaiseAlarmData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmRecordData_RaiseAlarmData_descriptor_,
      AlarmRecordData_RaiseAlarmData::default_instance_,
      AlarmRecordData_RaiseAlarmData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData_RaiseAlarmData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordData_RaiseAlarmData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmRecordData_RaiseAlarmData));
  AlarmRecordMessage_descriptor_ = file->message_type(15);
  static const int AlarmRecordMessage_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage, requesttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage, resultdescribe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage, datas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage, starttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage, endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage, nginxconf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage, nginxout_),
  };
  AlarmRecordMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmRecordMessage_descriptor_,
      AlarmRecordMessage::default_instance_,
      AlarmRecordMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmRecordMessage));
  AlarmRecordMessage_AlarmParam_descriptor_ = AlarmRecordMessage_descriptor_->nested_type(0);
  static const int AlarmRecordMessage_AlarmParam_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage_AlarmParam, alarmtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage_AlarmParam, devcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage_AlarmParam, chnseq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage_AlarmParam, limit_),
  };
  AlarmRecordMessage_AlarmParam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AlarmRecordMessage_AlarmParam_descriptor_,
      AlarmRecordMessage_AlarmParam::default_instance_,
      AlarmRecordMessage_AlarmParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage_AlarmParam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRecordMessage_AlarmParam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AlarmRecordMessage_AlarmParam));
  DEVICE_TYPE_OF_ALARM_SROUCE_descriptor_ = file->enum_type(0);
  RESULT_TYPE_OF_ALARM_descriptor_ = file->enum_type(1);
  REQUEST_TYPE_OF_ALARM_TYPE_descriptor_ = file->enum_type(2);
  RESULT_TYPE_OF_ALARM_TYPE_descriptor_ = file->enum_type(3);
  REQUEST_TYPE_OF_ACTION_TYPE_descriptor_ = file->enum_type(4);
  RESULT_TYPE_OF_ACTION_TYPE_descriptor_ = file->enum_type(5);
  FLAG_TYPE_OF_ALARM_DATA_descriptor_ = file->enum_type(6);
  USING_STAT_OF_ALARM_PLAN_descriptor_ = file->enum_type(7);
  USER_TYPE_OF_ALARM_PLAN_descriptor_ = file->enum_type(8);
  RESULT_TYPE_OF_ALARM_PLAN_descriptor_ = file->enum_type(9);
  REQUEST_TYPE_OF_ALARM_PLAN_descriptor_ = file->enum_type(10);
  RESULT_TYPE_OF_ALARM_GET_DEV_descriptor_ = file->enum_type(11);
  RESULT_TYPE_OF_GET_SRCSOURCE_descriptor_ = file->enum_type(12);
  REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_descriptor_ = file->enum_type(13);
  REQUEST_TYPE_OF_ALARM_RECORD_descriptor_ = file->enum_type(14);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AlarmBean_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActionLinkData_descriptor_, &ActionLinkData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmSrcDevInfo_descriptor_, &AlarmSrcDevInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmTypeData_descriptor_, &AlarmTypeData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmTypeMassage_descriptor_, &AlarmTypeMassage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActionTypeData_descriptor_, &ActionTypeData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActionTypeMassage_descriptor_, &ActionTypeMassage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmData_descriptor_, &AlarmData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmData_RaisuDustAlarm_descriptor_, &AlarmData_RaisuDustAlarm::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmMassage_descriptor_, &AlarmMassage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmPlanData_descriptor_, &AlarmPlanData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmRuleData_descriptor_, &AlarmRuleData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmPlanMassage_descriptor_, &AlarmPlanMassage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmDataForDIS_descriptor_, &AlarmDataForDIS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetAlarmDataForDIS_descriptor_, &GetAlarmDataForDIS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmGetSrcsourceMassage_descriptor_, &AlarmGetSrcsourceMassage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmRecordData_descriptor_, &AlarmRecordData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmRecordData_LinkVideoData_descriptor_, &AlarmRecordData_LinkVideoData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmRecordData_RaiseAlarmData_descriptor_, &AlarmRecordData_RaiseAlarmData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmRecordMessage_descriptor_, &AlarmRecordMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AlarmRecordMessage_AlarmParam_descriptor_, &AlarmRecordMessage_AlarmParam::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AlarmBean_2eproto() {
  delete ActionLinkData::default_instance_;
  delete ActionLinkData_reflection_;
  delete AlarmSrcDevInfo::default_instance_;
  delete AlarmSrcDevInfo_reflection_;
  delete AlarmTypeData::default_instance_;
  delete AlarmTypeData_reflection_;
  delete AlarmTypeMassage::default_instance_;
  delete AlarmTypeMassage_reflection_;
  delete ActionTypeData::default_instance_;
  delete ActionTypeData_reflection_;
  delete ActionTypeMassage::default_instance_;
  delete ActionTypeMassage_reflection_;
  delete AlarmData::default_instance_;
  delete AlarmData_reflection_;
  delete AlarmData_RaisuDustAlarm::default_instance_;
  delete AlarmData_RaisuDustAlarm_reflection_;
  delete AlarmMassage::default_instance_;
  delete AlarmMassage_reflection_;
  delete AlarmPlanData::default_instance_;
  delete AlarmPlanData_reflection_;
  delete AlarmRuleData::default_instance_;
  delete AlarmRuleData_reflection_;
  delete AlarmPlanMassage::default_instance_;
  delete AlarmPlanMassage_reflection_;
  delete AlarmDataForDIS::default_instance_;
  delete AlarmDataForDIS_reflection_;
  delete GetAlarmDataForDIS::default_instance_;
  delete GetAlarmDataForDIS_reflection_;
  delete AlarmGetSrcsourceMassage::default_instance_;
  delete AlarmGetSrcsourceMassage_reflection_;
  delete AlarmRecordData::default_instance_;
  delete AlarmRecordData_reflection_;
  delete AlarmRecordData_LinkVideoData::default_instance_;
  delete AlarmRecordData_LinkVideoData_reflection_;
  delete AlarmRecordData_RaiseAlarmData::default_instance_;
  delete AlarmRecordData_RaiseAlarmData_reflection_;
  delete AlarmRecordMessage::default_instance_;
  delete AlarmRecordMessage_reflection_;
  delete AlarmRecordMessage_AlarmParam::default_instance_;
  delete AlarmRecordMessage_AlarmParam_reflection_;
}

void protobuf_AddDesc_AlarmBean_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::com::arges::file::proto::protobuf_AddDesc_DevInfoListBean_2eproto();
  ::com::arges::file::proto::protobuf_AddDesc_ActionLinkBean_2eproto();
  ::com::arges::file::proto::protobuf_AddDesc_TimeTemplateBean_2eproto();
  ::com::arges::file::proto::protobuf_AddDesc_RaiseDustDataBean_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017AlarmBean.proto\022\024com.arges.file.proto\032"
    "\025DevInfoListBean.proto\032\024ActionLinkBean.p"
    "roto\032\026TimeTemplateBean.proto\032\027RaiseDustD"
    "ataBean.proto\"\270\003\n\016ActionLinkData\0223\n\006soun"
    "ds\030\001 \003(\0132#.com.arges.file.proto.SoundLin"
    "kData\0223\n\006lights\030\002 \003(\0132#.com.arges.file.p"
    "roto.LightLinkData\0223\n\006videos\030\003 \003(\0132#.com"
    ".arges.file.proto.VideoLinkData\0225\n\007recor"
    "ds\030\004 \003(\0132$.com.arges.file.proto.RecordLi"
    "nkData\022.\n\003sms\030\005 \003(\0132!.com.arges.file.pro"
    "to.SmsLinkData\0225\n\007tvwalls\030\006 \003(\0132$.com.ar"
    "ges.file.proto.TvwallLinkData\0223\n\006emails\030"
    "\007 \003(\0132#.com.arges.file.proto.EmailLinkDa"
    "ta\0224\n\004cpts\030\010 \003(\0132&.com.arges.file.proto."
    "CapitureLinkData\"g\n\017AlarmSrcDevInfo\022\022\n\006r"
    "uleId\030\001 \001(\003:\002-1\022\016\n\004code\030\002 \001(\t:\000\022\024\n\010nodeT"
    "ype\030\003 \001(\005:\002-1\022\032\n\020cascadeDevDomain\030\004 \001(\t:"
    "\000\"E\n\rAlarmTypeData\022\016\n\002id\030\001 \001(\003:\002-1\022\020\n\004ty"
    "pe\030\002 \001(\005:\002-1\022\022\n\010describe\030\003 \001(\014:\000\"\222\001\n\020Ala"
    "rmTypeMassage\022\027\n\013requestType\030\001 \001(\005:\002-1\022\022"
    "\n\006result\030\002 \001(\005:\002-1\022\030\n\016resultDescribe\030\003 \001"
    "(\014:\000\0227\n\nalarmTypes\030\004 \003(\0132#.com.arges.fil"
    "e.proto.AlarmTypeData\"F\n\016ActionTypeData\022"
    "\016\n\002id\030\001 \001(\003:\002-1\022\020\n\004type\030\002 \001(\005:\002-1\022\022\n\010des"
    "cribe\030\003 \001(\014:\000\"\226\001\n\021ActionTypeMassage\022\027\n\013r"
    "equestType\030\001 \001(\005:\002-1\022\022\n\006result\030\002 \001(\005:\002-1"
    "\022\030\n\016resultDescribe\030\003 \001(\014:\000\022:\n\014actionsTyp"
    "es\030\004 \003(\0132$.com.arges.file.proto.ActionTy"
    "peData\"\355\003\n\tAlarmData\022\024\n\nsrcDevCode\030\001 \001(\t"
    ":\000\022\034\n\020srcDevChannelSeq\030\002 \001(\005:\002-1\022\021\n\talar"
    "mType\030\003 \001(\005\022\023\n\talarmName\030\004 \001(\t:\000\022\027\n\ralar"
    "mDescirbe\030\005 \001(\014:\000\0229\n\017currentAlarmDev\030\006 \001"
    "(\0132 .com.arges.file.proto.DeviceInfo\0224\n\006"
    "action\030\007 \001(\0132$.com.arges.file.proto.Acti"
    "onLinkData\022\021\n\talarmTime\030\010 \001(\003\022\023\n\013isAlarm"
    "Host\030\t \001(\010\022\021\n\tAlarmFlag\030\n \001(\005\022\014\n\002sn\030\013 \001("
    "\t:\000\022C\n\013raiseAlarms\030\014 \003(\0132..com.arges.fil"
    "e.proto.AlarmData.RaisuDustAlarm\032l\n\016Rais"
    "uDustAlarm\022\024\n\010alarmCap\030\001 \001(\005:\002-1\022\024\n\010alar"
    "mNum\030\002 \001(\002:\002-1\022\025\n\talarmType\030\003 \001(\005:\002-1\022\027\n"
    "\013standardNum\030\004 \001(\002:\002-1\"|\n\014AlarmMassage\022\022"
    "\n\006result\030\001 \001(\005:\002-1\022\030\n\016resultDescribe\030\002 \001"
    "(\014:\000\022\016\n\006userId\030\003 \003(\003\022.\n\005alarm\030\004 \001(\0132\037.co"
    "m.arges.file.proto.AlarmData\"\241\002\n\rAlarmPl"
    "anData\022\014\n\002id\030\001 \001(\t:\000\022\016\n\006userId\030\002 \003(\003\022\024\n\010"
    "userType\030\003 \001(\005:\002-1\022\016\n\004name\030\004 \001(\t:\000\022;\n\013ti"
    "meTemplat\030\005 \001(\0132&.com.arges.file.proto.T"
    "imeTemplateData\022\021\n\005state\030\006 \001(\005:\002-1\022\022\n\010de"
    "scribe\030\007 \001(\014:\000\0223\n\006alarms\030\010 \003(\0132#.com.arg"
    "es.file.proto.AlarmRuleData\0223\n\006sounds\030\t "
    "\003(\0132#.com.arges.file.proto.SoundLinkData"
    "\"\261\002\n\rAlarmRuleData\022\022\n\006ruleId\030\001 \001(\003:\002-1\022\022"
    "\n\006planId\030\002 \001(\003:\002-1\022\021\n\talarmType\030\003 \003(\003\022\022\n"
    "\010ruleName\030\004 \001(\t:\000\022\026\n\014ruleDescribe\030\005 \001(\014:"
    "\000\022\021\n\005state\030\007 \001(\005:\002-1\0226\n\007srcDevs\030\010 \003(\0132%."
    "com.arges.file.proto.AlarmSrcDevInfo\0224\n\006"
    "action\030\t \001(\0132$.com.arges.file.proto.Acti"
    "onLinkData\0228\n\016srcDevsFromDis\030\n \003(\0132 .com"
    ".arges.file.proto.DeviceInfo\"\250\001\n\020AlarmPl"
    "anMassage\022\027\n\013requestType\030\001 \001(\005:\002-1\022\022\n\006re"
    "sult\030\002 \001(\005:\002-1\022\030\n\016resultDescribe\030\003 \001(\014:\000"
    "\022\n\n\002id\030\004 \003(\t\022\016\n\004name\030\005 \001(\t:\000\0221\n\004plan\030\006 \003"
    "(\0132#.com.arges.file.proto.AlarmPlanData\""
    "\242\001\n\017AlarmDataForDIS\022\016\n\006result\030\001 \001(\005\022\022\n\ns"
    "rcDevCode\030\002 \001(\t\022.\n\005alarm\030\003 \001(\0132\037.com.arg"
    "es.file.proto.AlarmData\022\016\n\006userId\030\004 \003(\003\022"
    "\017\n\007isToAts\030\005 \001(\010\022\032\n\013isWriteToDc\030\006 \001(\010:\005f"
    "alse\"z\n\022GetAlarmDataForDIS\022\016\n\006result\030\001 \001"
    "(\005\0222\n\005alarm\030\002 \001(\0132#.com.arges.file.proto"
    ".AlarmPlanData\022 \n\021isNeedToSendTopic\030\003 \001("
    "\010:\005false\"\342\001\n\030AlarmGetSrcsourceMassage\022\027\n"
    "\013requestType\030\001 \001(\005:\002-1\022\022\n\006result\030\002 \001(\005:\002"
    "-1\022\030\n\016resultDescribe\030\003 \001(\t:\000\022\032\n\020cascadeD"
    "evDomain\030\004 \001(\t:\000\0220\n\006GpsDev\030\005 \003(\0132 .com.a"
    "rges.file.proto.DeviceInfo\0221\n\007GrepDev\030\006 "
    "\003(\0132 .com.arges.file.proto.DeviceInfo\"\320\005"
    "\n\017AlarmRecordData\022\016\n\002id\030\001 \001(\003:\002-1\022\021\n\007dev"
    "Code\030\002 \001(\t:\000\022\024\n\010unitType\030\003 \001(\005:\002-1\022\023\n\007un"
    "itSeq\030\004 \001(\005:\002-1\022\022\n\006chnSeq\030\005 \001(\005:\002-1\022\021\n\007c"
    "hnName\030\006 \001(\t:\000\022\025\n\talarmType\030\007 \001(\005:\002-1\022\025\n"
    "\talarmDate\030\010 \001(\003:\002-1\022\026\n\nalarmGrade\030\t \001(\005"
    ":\002-1\022\024\n\nhandleUser\030\n \001(\t:\000\022\026\n\nhandleDate"
    "\030\013 \001(\003:\002-1\022\023\n\thandleMsg\030\014 \001(\014:\000\022\026\n\nhandl"
    "eStat\030\r \001(\005:\002-1\022\021\n\007devName\030\016 \001(\t:\000\022\025\n\tal"
    "armStat\030\017 \001(\005:\002-1\022C\n\006videos\030\020 \003(\01323.com."
    "arges.file.proto.AlarmRecordData.LinkVid"
    "eoData\022D\n\006raises\030\021 \003(\01324.com.arges.file."
    "proto.AlarmRecordData.RaiseAlarmData\032_\n\r"
    "LinkVideoData\022\016\n\002id\030\001 \001(\003:\002-1\022\023\n\007alarmId"
    "\030\002 \001(\003:\002-1\022\022\n\010filePath\030\003 \001(\t:\000\022\025\n\013channe"
    "lCode\030\004 \001(\t:\000\032\220\001\n\016RaiseAlarmData\022\016\n\002id\030\001"
    " \001(\003:\002-1\022\023\n\007alarmId\030\002 \001(\003:\002-1\022\024\n\010alarmCa"
    "p\030\003 \001(\005:\002-1\022\023\n\010alarmNum\030\004 \001(\002:\0010\022\026\n\nalar"
    "mGroup\030\005 \001(\005:\002-1\022\026\n\013standardNum\030\006 \001(\002:\0010"
    "\"\210\003\n\022AlarmRecordMessage\022\027\n\013requestType\030\001"
    " \001(\005:\002-1\022\022\n\006result\030\002 \001(\005:\002-1\022\030\n\016resultDe"
    "scribe\030\003 \001(\014:\000\0224\n\005datas\030\004 \003(\0132%.com.arge"
    "s.file.proto.AlarmRecordData\022\025\n\tstartTim"
    "e\030\005 \001(\003:\002-1\022\023\n\007endTime\030\006 \001(\003:\002-1\022C\n\006para"
    "ms\030\007 \003(\01323.com.arges.file.proto.AlarmRec"
    "ordMessage.AlarmParam\022\023\n\tnginxConf\030\010 \001(\t"
    ":\000\022\022\n\010nginxOut\030\t \001(\t:\000\032[\n\nAlarmParam\022\025\n\t"
    "alarmType\030\001 \001(\003:\002-1\022\021\n\007devCode\030\002 \001(\t:\000\022\021"
    "\n\006chnSeq\030\003 \001(\005:\0010\022\020\n\005limit\030\004 \001(\005:\0010*\256\001\n\033"
    "DEVICE_TYPE_OF_ALARM_SROUCE\022!\n\035ALARM_DEV"
    "ICE_SOURCE_IS_DEVICE\020\001\022 \n\034ALARM_DEVICE_S"
    "OURCE_IS_VIDEO\020\002\022\"\n\036ALARM_DEVICE_SOURCE_"
    "IS_ALARMIN\020\003\022&\n\"ALARM_DEVICE_SOURCE_IS_I"
    "NTELLIGENT\020\004*;\n\024RESULT_TYPE_OF_ALARM\022\017\n\013"
    "ALARM_IS_OK\020\001\022\022\n\016ALARM_IS_ERROR\020\002*4\n\032REQ"
    "UEST_TYPE_OF_ALARM_TYPE\022\026\n\022ALARM_TYPE_GE"
    "T_ALL\020\001*X\n\031RESULT_TYPE_OF_ALARM_TYPE\022\033\n\027"
    "ALARM_TYPE_RESULT_IS_OK\020\001\022\036\n\032ALARM_TYPE_"
    "RESULT_IS_ERROR\020\002*6\n\033REQUEST_TYPE_OF_ACT"
    "ION_TYPE\022\027\n\023ACTION_TYPE_GET_ALL\020\001*[\n\032RES"
    "ULT_TYPE_OF_ACTION_TYPE\022\034\n\030ACTION_TYPE_R"
    "ESULT_IS_OK\020\001\022\037\n\033ACTION_TYPE_RESULT_IS_E"
    "RROR\020\002*S\n\027FLAG_TYPE_OF_ALARM_DATA\022\033\n\027ALA"
    "RM_DATA_ALARM_OCCURS\020\001\022\033\n\027ALARM_DATA_ALA"
    "RM_CANCEL\020\002*K\n\030USING_STAT_OF_ALARM_PLAN\022"
    "\027\n\023ALARM_PLAN_IS_START\020\001\022\026\n\022ALARM_PLAN_I"
    "S_STOP\020\000*W\n\027USER_TYPE_OF_ALARM_PLAN\022\032\n\026A"
    "LARM_PLAN_WEST_IN_WEB\020\001\022 \n\034ALARM_PLAN_WE"
    "ST_IN_CS_CLIENT\020\002*X\n\031RESULT_TYPE_OF_ALAR"
    "M_PLAN\022\033\n\027ALARM_PLAN_IS_CONFIG_OK\020\001\022\036\n\032A"
    "LARM_PLAN_IS_CONFIG_ERROR\020\002*\221\001\n\032REQUEST_"
    "TYPE_OF_ALARM_PLAN\022\026\n\022ALARM_PLAN_GET_ALL"
    "\020\001\022\022\n\016ALARM_PLAN_ADD\020\002\022\025\n\021ALARM_PLAN_UPD"
    "ATE\020\003\022\025\n\021ALARM_PLAN_DELETE\020\004\022\031\n\025ALARM_PL"
    "AN_GET_BY_IDS\020\006*S\n\034RESULT_TYPE_OF_ALARM_"
    "GET_DEV\022\027\n\023ALARM_GET_DEV_IS_OK\020\001\022\032\n\026ALAR"
    "M_GET_DEV_IS_ERROR\020\002*\200\001\n\034RESULT_TYPE_OF_"
    "GET_SRCSOURCE\022\035\n\031ALARM_GET_SRCSOURCE_IS_"
    "OK\020\001\022 \n\034ALARM_GET_SRCSOURCE_IS_ERROR\020\002\022\037"
    "\n\033ALARM_GET_SRCSOURCE_IS_NULL\020\003*\227\001\n#REQU"
    "EST_TYPE_OF_ALARM_GET_SRCSOURCE\022\027\n\023ALARM"
    "_SRCSOURCE_ALL\020\001\022\027\n\023ALARM_SRCSOURCE_ADD\020"
    "\002\022\032\n\026ALARM_SRCSOURCE_DELETE\020\003\022\"\n\036ALARM_S"
    "RCSOURCE_GET_BY_BOXCODE\020\004*<\n\034REQUEST_TYP"
    "E_OF_ALARM_RECORD\022\034\n\030ALARM_RECORD_REQUES"
    "T_ALL\020\001P\003", 5609);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AlarmBean.proto", &protobuf_RegisterTypes);
  ActionLinkData::default_instance_ = new ActionLinkData();
  AlarmSrcDevInfo::default_instance_ = new AlarmSrcDevInfo();
  AlarmTypeData::default_instance_ = new AlarmTypeData();
  AlarmTypeMassage::default_instance_ = new AlarmTypeMassage();
  ActionTypeData::default_instance_ = new ActionTypeData();
  ActionTypeMassage::default_instance_ = new ActionTypeMassage();
  AlarmData::default_instance_ = new AlarmData();
  AlarmData_RaisuDustAlarm::default_instance_ = new AlarmData_RaisuDustAlarm();
  AlarmMassage::default_instance_ = new AlarmMassage();
  AlarmPlanData::default_instance_ = new AlarmPlanData();
  AlarmRuleData::default_instance_ = new AlarmRuleData();
  AlarmPlanMassage::default_instance_ = new AlarmPlanMassage();
  AlarmDataForDIS::default_instance_ = new AlarmDataForDIS();
  GetAlarmDataForDIS::default_instance_ = new GetAlarmDataForDIS();
  AlarmGetSrcsourceMassage::default_instance_ = new AlarmGetSrcsourceMassage();
  AlarmRecordData::default_instance_ = new AlarmRecordData();
  AlarmRecordData_LinkVideoData::default_instance_ = new AlarmRecordData_LinkVideoData();
  AlarmRecordData_RaiseAlarmData::default_instance_ = new AlarmRecordData_RaiseAlarmData();
  AlarmRecordMessage::default_instance_ = new AlarmRecordMessage();
  AlarmRecordMessage_AlarmParam::default_instance_ = new AlarmRecordMessage_AlarmParam();
  ActionLinkData::default_instance_->InitAsDefaultInstance();
  AlarmSrcDevInfo::default_instance_->InitAsDefaultInstance();
  AlarmTypeData::default_instance_->InitAsDefaultInstance();
  AlarmTypeMassage::default_instance_->InitAsDefaultInstance();
  ActionTypeData::default_instance_->InitAsDefaultInstance();
  ActionTypeMassage::default_instance_->InitAsDefaultInstance();
  AlarmData::default_instance_->InitAsDefaultInstance();
  AlarmData_RaisuDustAlarm::default_instance_->InitAsDefaultInstance();
  AlarmMassage::default_instance_->InitAsDefaultInstance();
  AlarmPlanData::default_instance_->InitAsDefaultInstance();
  AlarmRuleData::default_instance_->InitAsDefaultInstance();
  AlarmPlanMassage::default_instance_->InitAsDefaultInstance();
  AlarmDataForDIS::default_instance_->InitAsDefaultInstance();
  GetAlarmDataForDIS::default_instance_->InitAsDefaultInstance();
  AlarmGetSrcsourceMassage::default_instance_->InitAsDefaultInstance();
  AlarmRecordData::default_instance_->InitAsDefaultInstance();
  AlarmRecordData_LinkVideoData::default_instance_->InitAsDefaultInstance();
  AlarmRecordData_RaiseAlarmData::default_instance_->InitAsDefaultInstance();
  AlarmRecordMessage::default_instance_->InitAsDefaultInstance();
  AlarmRecordMessage_AlarmParam::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AlarmBean_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AlarmBean_2eproto {
  StaticDescriptorInitializer_AlarmBean_2eproto() {
    protobuf_AddDesc_AlarmBean_2eproto();
  }
} static_descriptor_initializer_AlarmBean_2eproto_;
const ::google::protobuf::EnumDescriptor* DEVICE_TYPE_OF_ALARM_SROUCE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DEVICE_TYPE_OF_ALARM_SROUCE_descriptor_;
}
bool DEVICE_TYPE_OF_ALARM_SROUCE_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_ALARM_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RESULT_TYPE_OF_ALARM_descriptor_;
}
bool RESULT_TYPE_OF_ALARM_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* REQUEST_TYPE_OF_ALARM_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return REQUEST_TYPE_OF_ALARM_TYPE_descriptor_;
}
bool REQUEST_TYPE_OF_ALARM_TYPE_IsValid(int value) {
  switch(value) {
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_ALARM_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RESULT_TYPE_OF_ALARM_TYPE_descriptor_;
}
bool RESULT_TYPE_OF_ALARM_TYPE_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* REQUEST_TYPE_OF_ACTION_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return REQUEST_TYPE_OF_ACTION_TYPE_descriptor_;
}
bool REQUEST_TYPE_OF_ACTION_TYPE_IsValid(int value) {
  switch(value) {
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_ACTION_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RESULT_TYPE_OF_ACTION_TYPE_descriptor_;
}
bool RESULT_TYPE_OF_ACTION_TYPE_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FLAG_TYPE_OF_ALARM_DATA_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FLAG_TYPE_OF_ALARM_DATA_descriptor_;
}
bool FLAG_TYPE_OF_ALARM_DATA_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* USING_STAT_OF_ALARM_PLAN_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return USING_STAT_OF_ALARM_PLAN_descriptor_;
}
bool USING_STAT_OF_ALARM_PLAN_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* USER_TYPE_OF_ALARM_PLAN_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return USER_TYPE_OF_ALARM_PLAN_descriptor_;
}
bool USER_TYPE_OF_ALARM_PLAN_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_ALARM_PLAN_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RESULT_TYPE_OF_ALARM_PLAN_descriptor_;
}
bool RESULT_TYPE_OF_ALARM_PLAN_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* REQUEST_TYPE_OF_ALARM_PLAN_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return REQUEST_TYPE_OF_ALARM_PLAN_descriptor_;
}
bool REQUEST_TYPE_OF_ALARM_PLAN_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_ALARM_GET_DEV_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RESULT_TYPE_OF_ALARM_GET_DEV_descriptor_;
}
bool RESULT_TYPE_OF_ALARM_GET_DEV_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RESULT_TYPE_OF_GET_SRCSOURCE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RESULT_TYPE_OF_GET_SRCSOURCE_descriptor_;
}
bool RESULT_TYPE_OF_GET_SRCSOURCE_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_descriptor_;
}
bool REQUEST_TYPE_OF_ALARM_GET_SRCSOURCE_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* REQUEST_TYPE_OF_ALARM_RECORD_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return REQUEST_TYPE_OF_ALARM_RECORD_descriptor_;
}
bool REQUEST_TYPE_OF_ALARM_RECORD_IsValid(int value) {
  switch(value) {
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int ActionLinkData::kSoundsFieldNumber;
const int ActionLinkData::kLightsFieldNumber;
const int ActionLinkData::kVideosFieldNumber;
const int ActionLinkData::kRecordsFieldNumber;
const int ActionLinkData::kSmsFieldNumber;
const int ActionLinkData::kTvwallsFieldNumber;
const int ActionLinkData::kEmailsFieldNumber;
const int ActionLinkData::kCptsFieldNumber;
#endif  // !_MSC_VER

ActionLinkData::ActionLinkData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.ActionLinkData)
}

void ActionLinkData::InitAsDefaultInstance() {
}

ActionLinkData::ActionLinkData(const ActionLinkData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.ActionLinkData)
}

void ActionLinkData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActionLinkData::~ActionLinkData() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.ActionLinkData)
  SharedDtor();
}

void ActionLinkData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActionLinkData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionLinkData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionLinkData_descriptor_;
}

const ActionLinkData& ActionLinkData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

ActionLinkData* ActionLinkData::default_instance_ = NULL;

ActionLinkData* ActionLinkData::New() const {
  return new ActionLinkData;
}

void ActionLinkData::Clear() {
  sounds_.Clear();
  lights_.Clear();
  videos_.Clear();
  records_.Clear();
  sms_.Clear();
  tvwalls_.Clear();
  emails_.Clear();
  cpts_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActionLinkData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.ActionLinkData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.arges.file.proto.SoundLinkData sounds = 1;
      case 1: {
        if (tag == 10) {
         parse_sounds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sounds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_sounds;
        if (input->ExpectTag(18)) goto parse_lights;
        break;
      }

      // repeated .com.arges.file.proto.LightLinkData lights = 2;
      case 2: {
        if (tag == 18) {
         parse_lights:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lights()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_lights;
        if (input->ExpectTag(26)) goto parse_videos;
        break;
      }

      // repeated .com.arges.file.proto.VideoLinkData videos = 3;
      case 3: {
        if (tag == 26) {
         parse_videos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_videos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_videos;
        if (input->ExpectTag(34)) goto parse_records;
        break;
      }

      // repeated .com.arges.file.proto.RecordLinkData records = 4;
      case 4: {
        if (tag == 34) {
         parse_records:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_records;
        if (input->ExpectTag(42)) goto parse_sms;
        break;
      }

      // repeated .com.arges.file.proto.SmsLinkData sms = 5;
      case 5: {
        if (tag == 42) {
         parse_sms:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sms()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sms;
        if (input->ExpectTag(50)) goto parse_tvwalls;
        break;
      }

      // repeated .com.arges.file.proto.TvwallLinkData tvwalls = 6;
      case 6: {
        if (tag == 50) {
         parse_tvwalls:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tvwalls()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_tvwalls;
        if (input->ExpectTag(58)) goto parse_emails;
        break;
      }

      // repeated .com.arges.file.proto.EmailLinkData emails = 7;
      case 7: {
        if (tag == 58) {
         parse_emails:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_emails()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_emails;
        if (input->ExpectTag(66)) goto parse_cpts;
        break;
      }

      // repeated .com.arges.file.proto.CapitureLinkData cpts = 8;
      case 8: {
        if (tag == 66) {
         parse_cpts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cpts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_cpts;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.ActionLinkData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.ActionLinkData)
  return false;
#undef DO_
}

void ActionLinkData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.ActionLinkData)
  // repeated .com.arges.file.proto.SoundLinkData sounds = 1;
  for (int i = 0; i < this->sounds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sounds(i), output);
  }

  // repeated .com.arges.file.proto.LightLinkData lights = 2;
  for (int i = 0; i < this->lights_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->lights(i), output);
  }

  // repeated .com.arges.file.proto.VideoLinkData videos = 3;
  for (int i = 0; i < this->videos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->videos(i), output);
  }

  // repeated .com.arges.file.proto.RecordLinkData records = 4;
  for (int i = 0; i < this->records_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->records(i), output);
  }

  // repeated .com.arges.file.proto.SmsLinkData sms = 5;
  for (int i = 0; i < this->sms_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->sms(i), output);
  }

  // repeated .com.arges.file.proto.TvwallLinkData tvwalls = 6;
  for (int i = 0; i < this->tvwalls_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->tvwalls(i), output);
  }

  // repeated .com.arges.file.proto.EmailLinkData emails = 7;
  for (int i = 0; i < this->emails_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->emails(i), output);
  }

  // repeated .com.arges.file.proto.CapitureLinkData cpts = 8;
  for (int i = 0; i < this->cpts_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->cpts(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.ActionLinkData)
}

::google::protobuf::uint8* ActionLinkData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.ActionLinkData)
  // repeated .com.arges.file.proto.SoundLinkData sounds = 1;
  for (int i = 0; i < this->sounds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sounds(i), target);
  }

  // repeated .com.arges.file.proto.LightLinkData lights = 2;
  for (int i = 0; i < this->lights_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->lights(i), target);
  }

  // repeated .com.arges.file.proto.VideoLinkData videos = 3;
  for (int i = 0; i < this->videos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->videos(i), target);
  }

  // repeated .com.arges.file.proto.RecordLinkData records = 4;
  for (int i = 0; i < this->records_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->records(i), target);
  }

  // repeated .com.arges.file.proto.SmsLinkData sms = 5;
  for (int i = 0; i < this->sms_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->sms(i), target);
  }

  // repeated .com.arges.file.proto.TvwallLinkData tvwalls = 6;
  for (int i = 0; i < this->tvwalls_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->tvwalls(i), target);
  }

  // repeated .com.arges.file.proto.EmailLinkData emails = 7;
  for (int i = 0; i < this->emails_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->emails(i), target);
  }

  // repeated .com.arges.file.proto.CapitureLinkData cpts = 8;
  for (int i = 0; i < this->cpts_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->cpts(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.ActionLinkData)
  return target;
}

int ActionLinkData::ByteSize() const {
  int total_size = 0;

  // repeated .com.arges.file.proto.SoundLinkData sounds = 1;
  total_size += 1 * this->sounds_size();
  for (int i = 0; i < this->sounds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sounds(i));
  }

  // repeated .com.arges.file.proto.LightLinkData lights = 2;
  total_size += 1 * this->lights_size();
  for (int i = 0; i < this->lights_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lights(i));
  }

  // repeated .com.arges.file.proto.VideoLinkData videos = 3;
  total_size += 1 * this->videos_size();
  for (int i = 0; i < this->videos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->videos(i));
  }

  // repeated .com.arges.file.proto.RecordLinkData records = 4;
  total_size += 1 * this->records_size();
  for (int i = 0; i < this->records_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->records(i));
  }

  // repeated .com.arges.file.proto.SmsLinkData sms = 5;
  total_size += 1 * this->sms_size();
  for (int i = 0; i < this->sms_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sms(i));
  }

  // repeated .com.arges.file.proto.TvwallLinkData tvwalls = 6;
  total_size += 1 * this->tvwalls_size();
  for (int i = 0; i < this->tvwalls_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tvwalls(i));
  }

  // repeated .com.arges.file.proto.EmailLinkData emails = 7;
  total_size += 1 * this->emails_size();
  for (int i = 0; i < this->emails_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->emails(i));
  }

  // repeated .com.arges.file.proto.CapitureLinkData cpts = 8;
  total_size += 1 * this->cpts_size();
  for (int i = 0; i < this->cpts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cpts(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionLinkData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActionLinkData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActionLinkData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActionLinkData::MergeFrom(const ActionLinkData& from) {
  GOOGLE_CHECK_NE(&from, this);
  sounds_.MergeFrom(from.sounds_);
  lights_.MergeFrom(from.lights_);
  videos_.MergeFrom(from.videos_);
  records_.MergeFrom(from.records_);
  sms_.MergeFrom(from.sms_);
  tvwalls_.MergeFrom(from.tvwalls_);
  emails_.MergeFrom(from.emails_);
  cpts_.MergeFrom(from.cpts_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActionLinkData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionLinkData::CopyFrom(const ActionLinkData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionLinkData::IsInitialized() const {

  return true;
}

void ActionLinkData::Swap(ActionLinkData* other) {
  if (other != this) {
    sounds_.Swap(&other->sounds_);
    lights_.Swap(&other->lights_);
    videos_.Swap(&other->videos_);
    records_.Swap(&other->records_);
    sms_.Swap(&other->sms_);
    tvwalls_.Swap(&other->tvwalls_);
    emails_.Swap(&other->emails_);
    cpts_.Swap(&other->cpts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActionLinkData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActionLinkData_descriptor_;
  metadata.reflection = ActionLinkData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AlarmSrcDevInfo::kRuleIdFieldNumber;
const int AlarmSrcDevInfo::kCodeFieldNumber;
const int AlarmSrcDevInfo::kNodeTypeFieldNumber;
const int AlarmSrcDevInfo::kCascadeDevDomainFieldNumber;
#endif  // !_MSC_VER

AlarmSrcDevInfo::AlarmSrcDevInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmSrcDevInfo)
}

void AlarmSrcDevInfo::InitAsDefaultInstance() {
}

AlarmSrcDevInfo::AlarmSrcDevInfo(const AlarmSrcDevInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmSrcDevInfo)
}

void AlarmSrcDevInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ruleid_ = GOOGLE_LONGLONG(-1);
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodetype_ = -1;
  cascadedevdomain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmSrcDevInfo::~AlarmSrcDevInfo() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmSrcDevInfo)
  SharedDtor();
}

void AlarmSrcDevInfo::SharedDtor() {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (cascadedevdomain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cascadedevdomain_;
  }
  if (this != default_instance_) {
  }
}

void AlarmSrcDevInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmSrcDevInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmSrcDevInfo_descriptor_;
}

const AlarmSrcDevInfo& AlarmSrcDevInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmSrcDevInfo* AlarmSrcDevInfo::default_instance_ = NULL;

AlarmSrcDevInfo* AlarmSrcDevInfo::New() const {
  return new AlarmSrcDevInfo;
}

void AlarmSrcDevInfo::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    ruleid_ = GOOGLE_LONGLONG(-1);
    if (has_code()) {
      if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        code_->clear();
      }
    }
    nodetype_ = -1;
    if (has_cascadedevdomain()) {
      if (cascadedevdomain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        cascadedevdomain_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmSrcDevInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmSrcDevInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ruleId = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ruleid_)));
          set_has_ruleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_code;
        break;
      }

      // optional string code = 2 [default = ""];
      case 2: {
        if (tag == 18) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_nodeType;
        break;
      }

      // optional int32 nodeType = 3 [default = -1];
      case 3: {
        if (tag == 24) {
         parse_nodeType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodetype_)));
          set_has_nodetype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_cascadeDevDomain;
        break;
      }

      // optional string cascadeDevDomain = 4 [default = ""];
      case 4: {
        if (tag == 34) {
         parse_cascadeDevDomain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cascadedevdomain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cascadedevdomain().data(), this->cascadedevdomain().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cascadedevdomain");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmSrcDevInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmSrcDevInfo)
  return false;
#undef DO_
}

void AlarmSrcDevInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmSrcDevInfo)
  // optional int64 ruleId = 1 [default = -1];
  if (has_ruleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ruleid(), output);
  }

  // optional string code = 2 [default = ""];
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  // optional int32 nodeType = 3 [default = -1];
  if (has_nodetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nodetype(), output);
  }

  // optional string cascadeDevDomain = 4 [default = ""];
  if (has_cascadedevdomain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cascadedevdomain().data(), this->cascadedevdomain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cascadedevdomain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cascadedevdomain(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmSrcDevInfo)
}

::google::protobuf::uint8* AlarmSrcDevInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmSrcDevInfo)
  // optional int64 ruleId = 1 [default = -1];
  if (has_ruleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ruleid(), target);
  }

  // optional string code = 2 [default = ""];
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  // optional int32 nodeType = 3 [default = -1];
  if (has_nodetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nodetype(), target);
  }

  // optional string cascadeDevDomain = 4 [default = ""];
  if (has_cascadedevdomain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cascadedevdomain().data(), this->cascadedevdomain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cascadedevdomain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cascadedevdomain(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmSrcDevInfo)
  return target;
}

int AlarmSrcDevInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 ruleId = 1 [default = -1];
    if (has_ruleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ruleid());
    }

    // optional string code = 2 [default = ""];
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional int32 nodeType = 3 [default = -1];
    if (has_nodetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodetype());
    }

    // optional string cascadeDevDomain = 4 [default = ""];
    if (has_cascadedevdomain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cascadedevdomain());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmSrcDevInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmSrcDevInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmSrcDevInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmSrcDevInfo::MergeFrom(const AlarmSrcDevInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ruleid()) {
      set_ruleid(from.ruleid());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_nodetype()) {
      set_nodetype(from.nodetype());
    }
    if (from.has_cascadedevdomain()) {
      set_cascadedevdomain(from.cascadedevdomain());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmSrcDevInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmSrcDevInfo::CopyFrom(const AlarmSrcDevInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmSrcDevInfo::IsInitialized() const {

  return true;
}

void AlarmSrcDevInfo::Swap(AlarmSrcDevInfo* other) {
  if (other != this) {
    std::swap(ruleid_, other->ruleid_);
    std::swap(code_, other->code_);
    std::swap(nodetype_, other->nodetype_);
    std::swap(cascadedevdomain_, other->cascadedevdomain_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmSrcDevInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmSrcDevInfo_descriptor_;
  metadata.reflection = AlarmSrcDevInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AlarmTypeData::kIdFieldNumber;
const int AlarmTypeData::kTypeFieldNumber;
const int AlarmTypeData::kDescribeFieldNumber;
#endif  // !_MSC_VER

AlarmTypeData::AlarmTypeData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmTypeData)
}

void AlarmTypeData::InitAsDefaultInstance() {
}

AlarmTypeData::AlarmTypeData(const AlarmTypeData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmTypeData)
}

void AlarmTypeData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(-1);
  type_ = -1;
  describe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmTypeData::~AlarmTypeData() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmTypeData)
  SharedDtor();
}

void AlarmTypeData::SharedDtor() {
  if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete describe_;
  }
  if (this != default_instance_) {
  }
}

void AlarmTypeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmTypeData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmTypeData_descriptor_;
}

const AlarmTypeData& AlarmTypeData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmTypeData* AlarmTypeData::default_instance_ = NULL;

AlarmTypeData* AlarmTypeData::New() const {
  return new AlarmTypeData;
}

void AlarmTypeData::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    id_ = GOOGLE_LONGLONG(-1);
    type_ = -1;
    if (has_describe()) {
      if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        describe_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmTypeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmTypeData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional int32 type = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_describe;
        break;
      }

      // optional bytes describe = 3 [default = ""];
      case 3: {
        if (tag == 26) {
         parse_describe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_describe()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmTypeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmTypeData)
  return false;
#undef DO_
}

void AlarmTypeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmTypeData)
  // optional int64 id = 1 [default = -1];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional int32 type = 2 [default = -1];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional bytes describe = 3 [default = ""];
  if (has_describe()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->describe(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmTypeData)
}

::google::protobuf::uint8* AlarmTypeData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmTypeData)
  // optional int64 id = 1 [default = -1];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional int32 type = 2 [default = -1];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional bytes describe = 3 [default = ""];
  if (has_describe()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->describe(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmTypeData)
  return target;
}

int AlarmTypeData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 id = 1 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional int32 type = 2 [default = -1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional bytes describe = 3 [default = ""];
    if (has_describe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->describe());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmTypeData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmTypeData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmTypeData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmTypeData::MergeFrom(const AlarmTypeData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_describe()) {
      set_describe(from.describe());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmTypeData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmTypeData::CopyFrom(const AlarmTypeData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmTypeData::IsInitialized() const {

  return true;
}

void AlarmTypeData::Swap(AlarmTypeData* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(describe_, other->describe_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmTypeData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmTypeData_descriptor_;
  metadata.reflection = AlarmTypeData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AlarmTypeMassage::kRequestTypeFieldNumber;
const int AlarmTypeMassage::kResultFieldNumber;
const int AlarmTypeMassage::kResultDescribeFieldNumber;
const int AlarmTypeMassage::kAlarmTypesFieldNumber;
#endif  // !_MSC_VER

AlarmTypeMassage::AlarmTypeMassage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmTypeMassage)
}

void AlarmTypeMassage::InitAsDefaultInstance() {
}

AlarmTypeMassage::AlarmTypeMassage(const AlarmTypeMassage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmTypeMassage)
}

void AlarmTypeMassage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  requesttype_ = -1;
  result_ = -1;
  resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmTypeMassage::~AlarmTypeMassage() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmTypeMassage)
  SharedDtor();
}

void AlarmTypeMassage::SharedDtor() {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdescribe_;
  }
  if (this != default_instance_) {
  }
}

void AlarmTypeMassage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmTypeMassage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmTypeMassage_descriptor_;
}

const AlarmTypeMassage& AlarmTypeMassage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmTypeMassage* AlarmTypeMassage::default_instance_ = NULL;

AlarmTypeMassage* AlarmTypeMassage::New() const {
  return new AlarmTypeMassage;
}

void AlarmTypeMassage::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    requesttype_ = -1;
    result_ = -1;
    if (has_resultdescribe()) {
      if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resultdescribe_->clear();
      }
    }
  }
  alarmtypes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmTypeMassage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmTypeMassage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 requestType = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requesttype_)));
          set_has_requesttype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional int32 result = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_resultDescribe;
        break;
      }

      // optional bytes resultDescribe = 3 [default = ""];
      case 3: {
        if (tag == 26) {
         parse_resultDescribe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_resultdescribe()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_alarmTypes;
        break;
      }

      // repeated .com.arges.file.proto.AlarmTypeData alarmTypes = 4;
      case 4: {
        if (tag == 34) {
         parse_alarmTypes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_alarmtypes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_alarmTypes;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmTypeMassage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmTypeMassage)
  return false;
#undef DO_
}

void AlarmTypeMassage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmTypeMassage)
  // optional int32 requestType = 1 [default = -1];
  if (has_requesttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requesttype(), output);
  }

  // optional int32 result = 2 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  // optional bytes resultDescribe = 3 [default = ""];
  if (has_resultdescribe()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->resultdescribe(), output);
  }

  // repeated .com.arges.file.proto.AlarmTypeData alarmTypes = 4;
  for (int i = 0; i < this->alarmtypes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->alarmtypes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmTypeMassage)
}

::google::protobuf::uint8* AlarmTypeMassage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmTypeMassage)
  // optional int32 requestType = 1 [default = -1];
  if (has_requesttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requesttype(), target);
  }

  // optional int32 result = 2 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  // optional bytes resultDescribe = 3 [default = ""];
  if (has_resultdescribe()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->resultdescribe(), target);
  }

  // repeated .com.arges.file.proto.AlarmTypeData alarmTypes = 4;
  for (int i = 0; i < this->alarmtypes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->alarmtypes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmTypeMassage)
  return target;
}

int AlarmTypeMassage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 requestType = 1 [default = -1];
    if (has_requesttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->requesttype());
    }

    // optional int32 result = 2 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional bytes resultDescribe = 3 [default = ""];
    if (has_resultdescribe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->resultdescribe());
    }

  }
  // repeated .com.arges.file.proto.AlarmTypeData alarmTypes = 4;
  total_size += 1 * this->alarmtypes_size();
  for (int i = 0; i < this->alarmtypes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->alarmtypes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmTypeMassage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmTypeMassage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmTypeMassage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmTypeMassage::MergeFrom(const AlarmTypeMassage& from) {
  GOOGLE_CHECK_NE(&from, this);
  alarmtypes_.MergeFrom(from.alarmtypes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requesttype()) {
      set_requesttype(from.requesttype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_resultdescribe()) {
      set_resultdescribe(from.resultdescribe());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmTypeMassage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmTypeMassage::CopyFrom(const AlarmTypeMassage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmTypeMassage::IsInitialized() const {

  return true;
}

void AlarmTypeMassage::Swap(AlarmTypeMassage* other) {
  if (other != this) {
    std::swap(requesttype_, other->requesttype_);
    std::swap(result_, other->result_);
    std::swap(resultdescribe_, other->resultdescribe_);
    alarmtypes_.Swap(&other->alarmtypes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmTypeMassage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmTypeMassage_descriptor_;
  metadata.reflection = AlarmTypeMassage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActionTypeData::kIdFieldNumber;
const int ActionTypeData::kTypeFieldNumber;
const int ActionTypeData::kDescribeFieldNumber;
#endif  // !_MSC_VER

ActionTypeData::ActionTypeData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.ActionTypeData)
}

void ActionTypeData::InitAsDefaultInstance() {
}

ActionTypeData::ActionTypeData(const ActionTypeData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.ActionTypeData)
}

void ActionTypeData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(-1);
  type_ = -1;
  describe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActionTypeData::~ActionTypeData() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.ActionTypeData)
  SharedDtor();
}

void ActionTypeData::SharedDtor() {
  if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete describe_;
  }
  if (this != default_instance_) {
  }
}

void ActionTypeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionTypeData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionTypeData_descriptor_;
}

const ActionTypeData& ActionTypeData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

ActionTypeData* ActionTypeData::default_instance_ = NULL;

ActionTypeData* ActionTypeData::New() const {
  return new ActionTypeData;
}

void ActionTypeData::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    id_ = GOOGLE_LONGLONG(-1);
    type_ = -1;
    if (has_describe()) {
      if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        describe_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActionTypeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.ActionTypeData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional int32 type = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_describe;
        break;
      }

      // optional bytes describe = 3 [default = ""];
      case 3: {
        if (tag == 26) {
         parse_describe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_describe()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.ActionTypeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.ActionTypeData)
  return false;
#undef DO_
}

void ActionTypeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.ActionTypeData)
  // optional int64 id = 1 [default = -1];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional int32 type = 2 [default = -1];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional bytes describe = 3 [default = ""];
  if (has_describe()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->describe(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.ActionTypeData)
}

::google::protobuf::uint8* ActionTypeData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.ActionTypeData)
  // optional int64 id = 1 [default = -1];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional int32 type = 2 [default = -1];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional bytes describe = 3 [default = ""];
  if (has_describe()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->describe(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.ActionTypeData)
  return target;
}

int ActionTypeData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 id = 1 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional int32 type = 2 [default = -1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional bytes describe = 3 [default = ""];
    if (has_describe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->describe());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionTypeData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActionTypeData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActionTypeData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActionTypeData::MergeFrom(const ActionTypeData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_describe()) {
      set_describe(from.describe());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActionTypeData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionTypeData::CopyFrom(const ActionTypeData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionTypeData::IsInitialized() const {

  return true;
}

void ActionTypeData::Swap(ActionTypeData* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(describe_, other->describe_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActionTypeData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActionTypeData_descriptor_;
  metadata.reflection = ActionTypeData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActionTypeMassage::kRequestTypeFieldNumber;
const int ActionTypeMassage::kResultFieldNumber;
const int ActionTypeMassage::kResultDescribeFieldNumber;
const int ActionTypeMassage::kActionsTypesFieldNumber;
#endif  // !_MSC_VER

ActionTypeMassage::ActionTypeMassage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.ActionTypeMassage)
}

void ActionTypeMassage::InitAsDefaultInstance() {
}

ActionTypeMassage::ActionTypeMassage(const ActionTypeMassage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.ActionTypeMassage)
}

void ActionTypeMassage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  requesttype_ = -1;
  result_ = -1;
  resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActionTypeMassage::~ActionTypeMassage() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.ActionTypeMassage)
  SharedDtor();
}

void ActionTypeMassage::SharedDtor() {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdescribe_;
  }
  if (this != default_instance_) {
  }
}

void ActionTypeMassage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionTypeMassage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionTypeMassage_descriptor_;
}

const ActionTypeMassage& ActionTypeMassage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

ActionTypeMassage* ActionTypeMassage::default_instance_ = NULL;

ActionTypeMassage* ActionTypeMassage::New() const {
  return new ActionTypeMassage;
}

void ActionTypeMassage::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    requesttype_ = -1;
    result_ = -1;
    if (has_resultdescribe()) {
      if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resultdescribe_->clear();
      }
    }
  }
  actionstypes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActionTypeMassage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.ActionTypeMassage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 requestType = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requesttype_)));
          set_has_requesttype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional int32 result = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_resultDescribe;
        break;
      }

      // optional bytes resultDescribe = 3 [default = ""];
      case 3: {
        if (tag == 26) {
         parse_resultDescribe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_resultdescribe()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_actionsTypes;
        break;
      }

      // repeated .com.arges.file.proto.ActionTypeData actionsTypes = 4;
      case 4: {
        if (tag == 34) {
         parse_actionsTypes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_actionstypes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_actionsTypes;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.ActionTypeMassage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.ActionTypeMassage)
  return false;
#undef DO_
}

void ActionTypeMassage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.ActionTypeMassage)
  // optional int32 requestType = 1 [default = -1];
  if (has_requesttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requesttype(), output);
  }

  // optional int32 result = 2 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  // optional bytes resultDescribe = 3 [default = ""];
  if (has_resultdescribe()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->resultdescribe(), output);
  }

  // repeated .com.arges.file.proto.ActionTypeData actionsTypes = 4;
  for (int i = 0; i < this->actionstypes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->actionstypes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.ActionTypeMassage)
}

::google::protobuf::uint8* ActionTypeMassage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.ActionTypeMassage)
  // optional int32 requestType = 1 [default = -1];
  if (has_requesttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requesttype(), target);
  }

  // optional int32 result = 2 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  // optional bytes resultDescribe = 3 [default = ""];
  if (has_resultdescribe()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->resultdescribe(), target);
  }

  // repeated .com.arges.file.proto.ActionTypeData actionsTypes = 4;
  for (int i = 0; i < this->actionstypes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->actionstypes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.ActionTypeMassage)
  return target;
}

int ActionTypeMassage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 requestType = 1 [default = -1];
    if (has_requesttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->requesttype());
    }

    // optional int32 result = 2 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional bytes resultDescribe = 3 [default = ""];
    if (has_resultdescribe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->resultdescribe());
    }

  }
  // repeated .com.arges.file.proto.ActionTypeData actionsTypes = 4;
  total_size += 1 * this->actionstypes_size();
  for (int i = 0; i < this->actionstypes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->actionstypes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionTypeMassage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActionTypeMassage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActionTypeMassage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActionTypeMassage::MergeFrom(const ActionTypeMassage& from) {
  GOOGLE_CHECK_NE(&from, this);
  actionstypes_.MergeFrom(from.actionstypes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requesttype()) {
      set_requesttype(from.requesttype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_resultdescribe()) {
      set_resultdescribe(from.resultdescribe());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActionTypeMassage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionTypeMassage::CopyFrom(const ActionTypeMassage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionTypeMassage::IsInitialized() const {

  return true;
}

void ActionTypeMassage::Swap(ActionTypeMassage* other) {
  if (other != this) {
    std::swap(requesttype_, other->requesttype_);
    std::swap(result_, other->result_);
    std::swap(resultdescribe_, other->resultdescribe_);
    actionstypes_.Swap(&other->actionstypes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActionTypeMassage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActionTypeMassage_descriptor_;
  metadata.reflection = ActionTypeMassage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AlarmData_RaisuDustAlarm::kAlarmCapFieldNumber;
const int AlarmData_RaisuDustAlarm::kAlarmNumFieldNumber;
const int AlarmData_RaisuDustAlarm::kAlarmTypeFieldNumber;
const int AlarmData_RaisuDustAlarm::kStandardNumFieldNumber;
#endif  // !_MSC_VER

AlarmData_RaisuDustAlarm::AlarmData_RaisuDustAlarm()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmData.RaisuDustAlarm)
}

void AlarmData_RaisuDustAlarm::InitAsDefaultInstance() {
}

AlarmData_RaisuDustAlarm::AlarmData_RaisuDustAlarm(const AlarmData_RaisuDustAlarm& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmData.RaisuDustAlarm)
}

void AlarmData_RaisuDustAlarm::SharedCtor() {
  _cached_size_ = 0;
  alarmcap_ = -1;
  alarmnum_ = -1;
  alarmtype_ = -1;
  standardnum_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmData_RaisuDustAlarm::~AlarmData_RaisuDustAlarm() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmData.RaisuDustAlarm)
  SharedDtor();
}

void AlarmData_RaisuDustAlarm::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AlarmData_RaisuDustAlarm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmData_RaisuDustAlarm::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmData_RaisuDustAlarm_descriptor_;
}

const AlarmData_RaisuDustAlarm& AlarmData_RaisuDustAlarm::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmData_RaisuDustAlarm* AlarmData_RaisuDustAlarm::default_instance_ = NULL;

AlarmData_RaisuDustAlarm* AlarmData_RaisuDustAlarm::New() const {
  return new AlarmData_RaisuDustAlarm;
}

void AlarmData_RaisuDustAlarm::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    alarmcap_ = -1;
    alarmnum_ = -1;
    alarmtype_ = -1;
    standardnum_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmData_RaisuDustAlarm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmData.RaisuDustAlarm)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 alarmCap = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alarmcap_)));
          set_has_alarmcap();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_alarmNum;
        break;
      }

      // optional float alarmNum = 2 [default = -1];
      case 2: {
        if (tag == 21) {
         parse_alarmNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &alarmnum_)));
          set_has_alarmnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_alarmType;
        break;
      }

      // optional int32 alarmType = 3 [default = -1];
      case 3: {
        if (tag == 24) {
         parse_alarmType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alarmtype_)));
          set_has_alarmtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_standardNum;
        break;
      }

      // optional float standardNum = 4 [default = -1];
      case 4: {
        if (tag == 37) {
         parse_standardNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &standardnum_)));
          set_has_standardnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmData.RaisuDustAlarm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmData.RaisuDustAlarm)
  return false;
#undef DO_
}

void AlarmData_RaisuDustAlarm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmData.RaisuDustAlarm)
  // optional int32 alarmCap = 1 [default = -1];
  if (has_alarmcap()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->alarmcap(), output);
  }

  // optional float alarmNum = 2 [default = -1];
  if (has_alarmnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->alarmnum(), output);
  }

  // optional int32 alarmType = 3 [default = -1];
  if (has_alarmtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->alarmtype(), output);
  }

  // optional float standardNum = 4 [default = -1];
  if (has_standardnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->standardnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmData.RaisuDustAlarm)
}

::google::protobuf::uint8* AlarmData_RaisuDustAlarm::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmData.RaisuDustAlarm)
  // optional int32 alarmCap = 1 [default = -1];
  if (has_alarmcap()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->alarmcap(), target);
  }

  // optional float alarmNum = 2 [default = -1];
  if (has_alarmnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->alarmnum(), target);
  }

  // optional int32 alarmType = 3 [default = -1];
  if (has_alarmtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->alarmtype(), target);
  }

  // optional float standardNum = 4 [default = -1];
  if (has_standardnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->standardnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmData.RaisuDustAlarm)
  return target;
}

int AlarmData_RaisuDustAlarm::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 alarmCap = 1 [default = -1];
    if (has_alarmcap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->alarmcap());
    }

    // optional float alarmNum = 2 [default = -1];
    if (has_alarmnum()) {
      total_size += 1 + 4;
    }

    // optional int32 alarmType = 3 [default = -1];
    if (has_alarmtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->alarmtype());
    }

    // optional float standardNum = 4 [default = -1];
    if (has_standardnum()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmData_RaisuDustAlarm::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmData_RaisuDustAlarm* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmData_RaisuDustAlarm*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmData_RaisuDustAlarm::MergeFrom(const AlarmData_RaisuDustAlarm& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_alarmcap()) {
      set_alarmcap(from.alarmcap());
    }
    if (from.has_alarmnum()) {
      set_alarmnum(from.alarmnum());
    }
    if (from.has_alarmtype()) {
      set_alarmtype(from.alarmtype());
    }
    if (from.has_standardnum()) {
      set_standardnum(from.standardnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmData_RaisuDustAlarm::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmData_RaisuDustAlarm::CopyFrom(const AlarmData_RaisuDustAlarm& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmData_RaisuDustAlarm::IsInitialized() const {

  return true;
}

void AlarmData_RaisuDustAlarm::Swap(AlarmData_RaisuDustAlarm* other) {
  if (other != this) {
    std::swap(alarmcap_, other->alarmcap_);
    std::swap(alarmnum_, other->alarmnum_);
    std::swap(alarmtype_, other->alarmtype_);
    std::swap(standardnum_, other->standardnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmData_RaisuDustAlarm::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmData_RaisuDustAlarm_descriptor_;
  metadata.reflection = AlarmData_RaisuDustAlarm_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AlarmData::kSrcDevCodeFieldNumber;
const int AlarmData::kSrcDevChannelSeqFieldNumber;
const int AlarmData::kAlarmTypeFieldNumber;
const int AlarmData::kAlarmNameFieldNumber;
const int AlarmData::kAlarmDescirbeFieldNumber;
const int AlarmData::kCurrentAlarmDevFieldNumber;
const int AlarmData::kActionFieldNumber;
const int AlarmData::kAlarmTimeFieldNumber;
const int AlarmData::kIsAlarmHostFieldNumber;
const int AlarmData::kAlarmFlagFieldNumber;
const int AlarmData::kSnFieldNumber;
const int AlarmData::kRaiseAlarmsFieldNumber;
#endif  // !_MSC_VER

AlarmData::AlarmData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmData)
}

void AlarmData::InitAsDefaultInstance() {
  currentalarmdev_ = const_cast< ::com::arges::file::proto::DeviceInfo*>(&::com::arges::file::proto::DeviceInfo::default_instance());
  action_ = const_cast< ::com::arges::file::proto::ActionLinkData*>(&::com::arges::file::proto::ActionLinkData::default_instance());
}

AlarmData::AlarmData(const AlarmData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmData)
}

void AlarmData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  srcdevcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcdevchannelseq_ = -1;
  alarmtype_ = 0;
  alarmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alarmdescirbe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currentalarmdev_ = NULL;
  action_ = NULL;
  alarmtime_ = GOOGLE_LONGLONG(0);
  isalarmhost_ = false;
  alarmflag_ = 0;
  sn_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmData::~AlarmData() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmData)
  SharedDtor();
}

void AlarmData::SharedDtor() {
  if (srcdevcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srcdevcode_;
  }
  if (alarmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete alarmname_;
  }
  if (alarmdescirbe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete alarmdescirbe_;
  }
  if (sn_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sn_;
  }
  if (this != default_instance_) {
    delete currentalarmdev_;
    delete action_;
  }
}

void AlarmData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmData_descriptor_;
}

const AlarmData& AlarmData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmData* AlarmData::default_instance_ = NULL;

AlarmData* AlarmData::New() const {
  return new AlarmData;
}

void AlarmData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<AlarmData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    if (has_srcdevcode()) {
      if (srcdevcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srcdevcode_->clear();
      }
    }
    srcdevchannelseq_ = -1;
    alarmtype_ = 0;
    if (has_alarmname()) {
      if (alarmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        alarmname_->clear();
      }
    }
    if (has_alarmdescirbe()) {
      if (alarmdescirbe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        alarmdescirbe_->clear();
      }
    }
    if (has_currentalarmdev()) {
      if (currentalarmdev_ != NULL) currentalarmdev_->::com::arges::file::proto::DeviceInfo::Clear();
    }
    if (has_action()) {
      if (action_ != NULL) action_->::com::arges::file::proto::ActionLinkData::Clear();
    }
    alarmtime_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & 1792) {
    ZR_(isalarmhost_, alarmflag_);
    if (has_sn()) {
      if (sn_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sn_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  raisealarms_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string srcDevCode = 1 [default = ""];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcdevcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srcdevcode().data(), this->srcdevcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srcdevcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_srcDevChannelSeq;
        break;
      }

      // optional int32 srcDevChannelSeq = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_srcDevChannelSeq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &srcdevchannelseq_)));
          set_has_srcdevchannelseq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_alarmType;
        break;
      }

      // optional int32 alarmType = 3;
      case 3: {
        if (tag == 24) {
         parse_alarmType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alarmtype_)));
          set_has_alarmtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_alarmName;
        break;
      }

      // optional string alarmName = 4 [default = ""];
      case 4: {
        if (tag == 34) {
         parse_alarmName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alarmname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alarmname().data(), this->alarmname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "alarmname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_alarmDescirbe;
        break;
      }

      // optional bytes alarmDescirbe = 5 [default = ""];
      case 5: {
        if (tag == 42) {
         parse_alarmDescirbe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_alarmdescirbe()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_currentAlarmDev;
        break;
      }

      // optional .com.arges.file.proto.DeviceInfo currentAlarmDev = 6;
      case 6: {
        if (tag == 50) {
         parse_currentAlarmDev:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_currentalarmdev()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_action;
        break;
      }

      // optional .com.arges.file.proto.ActionLinkData action = 7;
      case 7: {
        if (tag == 58) {
         parse_action:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_alarmTime;
        break;
      }

      // optional int64 alarmTime = 8;
      case 8: {
        if (tag == 64) {
         parse_alarmTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &alarmtime_)));
          set_has_alarmtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_isAlarmHost;
        break;
      }

      // optional bool isAlarmHost = 9;
      case 9: {
        if (tag == 72) {
         parse_isAlarmHost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isalarmhost_)));
          set_has_isalarmhost();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_AlarmFlag;
        break;
      }

      // optional int32 AlarmFlag = 10;
      case 10: {
        if (tag == 80) {
         parse_AlarmFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alarmflag_)));
          set_has_alarmflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_sn;
        break;
      }

      // optional string sn = 11 [default = ""];
      case 11: {
        if (tag == 90) {
         parse_sn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sn().data(), this->sn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_raiseAlarms;
        break;
      }

      // repeated .com.arges.file.proto.AlarmData.RaisuDustAlarm raiseAlarms = 12;
      case 12: {
        if (tag == 98) {
         parse_raiseAlarms:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_raisealarms()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_raiseAlarms;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmData)
  return false;
#undef DO_
}

void AlarmData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmData)
  // optional string srcDevCode = 1 [default = ""];
  if (has_srcdevcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srcdevcode().data(), this->srcdevcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srcdevcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->srcdevcode(), output);
  }

  // optional int32 srcDevChannelSeq = 2 [default = -1];
  if (has_srcdevchannelseq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->srcdevchannelseq(), output);
  }

  // optional int32 alarmType = 3;
  if (has_alarmtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->alarmtype(), output);
  }

  // optional string alarmName = 4 [default = ""];
  if (has_alarmname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alarmname().data(), this->alarmname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "alarmname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->alarmname(), output);
  }

  // optional bytes alarmDescirbe = 5 [default = ""];
  if (has_alarmdescirbe()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->alarmdescirbe(), output);
  }

  // optional .com.arges.file.proto.DeviceInfo currentAlarmDev = 6;
  if (has_currentalarmdev()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->currentalarmdev(), output);
  }

  // optional .com.arges.file.proto.ActionLinkData action = 7;
  if (has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->action(), output);
  }

  // optional int64 alarmTime = 8;
  if (has_alarmtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->alarmtime(), output);
  }

  // optional bool isAlarmHost = 9;
  if (has_isalarmhost()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->isalarmhost(), output);
  }

  // optional int32 AlarmFlag = 10;
  if (has_alarmflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->alarmflag(), output);
  }

  // optional string sn = 11 [default = ""];
  if (has_sn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sn(), output);
  }

  // repeated .com.arges.file.proto.AlarmData.RaisuDustAlarm raiseAlarms = 12;
  for (int i = 0; i < this->raisealarms_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->raisealarms(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmData)
}

::google::protobuf::uint8* AlarmData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmData)
  // optional string srcDevCode = 1 [default = ""];
  if (has_srcdevcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srcdevcode().data(), this->srcdevcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srcdevcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->srcdevcode(), target);
  }

  // optional int32 srcDevChannelSeq = 2 [default = -1];
  if (has_srcdevchannelseq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->srcdevchannelseq(), target);
  }

  // optional int32 alarmType = 3;
  if (has_alarmtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->alarmtype(), target);
  }

  // optional string alarmName = 4 [default = ""];
  if (has_alarmname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alarmname().data(), this->alarmname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "alarmname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->alarmname(), target);
  }

  // optional bytes alarmDescirbe = 5 [default = ""];
  if (has_alarmdescirbe()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->alarmdescirbe(), target);
  }

  // optional .com.arges.file.proto.DeviceInfo currentAlarmDev = 6;
  if (has_currentalarmdev()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->currentalarmdev(), target);
  }

  // optional .com.arges.file.proto.ActionLinkData action = 7;
  if (has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->action(), target);
  }

  // optional int64 alarmTime = 8;
  if (has_alarmtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->alarmtime(), target);
  }

  // optional bool isAlarmHost = 9;
  if (has_isalarmhost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->isalarmhost(), target);
  }

  // optional int32 AlarmFlag = 10;
  if (has_alarmflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->alarmflag(), target);
  }

  // optional string sn = 11 [default = ""];
  if (has_sn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sn(), target);
  }

  // repeated .com.arges.file.proto.AlarmData.RaisuDustAlarm raiseAlarms = 12;
  for (int i = 0; i < this->raisealarms_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->raisealarms(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmData)
  return target;
}

int AlarmData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string srcDevCode = 1 [default = ""];
    if (has_srcdevcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srcdevcode());
    }

    // optional int32 srcDevChannelSeq = 2 [default = -1];
    if (has_srcdevchannelseq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->srcdevchannelseq());
    }

    // optional int32 alarmType = 3;
    if (has_alarmtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->alarmtype());
    }

    // optional string alarmName = 4 [default = ""];
    if (has_alarmname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alarmname());
    }

    // optional bytes alarmDescirbe = 5 [default = ""];
    if (has_alarmdescirbe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->alarmdescirbe());
    }

    // optional .com.arges.file.proto.DeviceInfo currentAlarmDev = 6;
    if (has_currentalarmdev()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->currentalarmdev());
    }

    // optional .com.arges.file.proto.ActionLinkData action = 7;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->action());
    }

    // optional int64 alarmTime = 8;
    if (has_alarmtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->alarmtime());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool isAlarmHost = 9;
    if (has_isalarmhost()) {
      total_size += 1 + 1;
    }

    // optional int32 AlarmFlag = 10;
    if (has_alarmflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->alarmflag());
    }

    // optional string sn = 11 [default = ""];
    if (has_sn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sn());
    }

  }
  // repeated .com.arges.file.proto.AlarmData.RaisuDustAlarm raiseAlarms = 12;
  total_size += 1 * this->raisealarms_size();
  for (int i = 0; i < this->raisealarms_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->raisealarms(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmData::MergeFrom(const AlarmData& from) {
  GOOGLE_CHECK_NE(&from, this);
  raisealarms_.MergeFrom(from.raisealarms_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_srcdevcode()) {
      set_srcdevcode(from.srcdevcode());
    }
    if (from.has_srcdevchannelseq()) {
      set_srcdevchannelseq(from.srcdevchannelseq());
    }
    if (from.has_alarmtype()) {
      set_alarmtype(from.alarmtype());
    }
    if (from.has_alarmname()) {
      set_alarmname(from.alarmname());
    }
    if (from.has_alarmdescirbe()) {
      set_alarmdescirbe(from.alarmdescirbe());
    }
    if (from.has_currentalarmdev()) {
      mutable_currentalarmdev()->::com::arges::file::proto::DeviceInfo::MergeFrom(from.currentalarmdev());
    }
    if (from.has_action()) {
      mutable_action()->::com::arges::file::proto::ActionLinkData::MergeFrom(from.action());
    }
    if (from.has_alarmtime()) {
      set_alarmtime(from.alarmtime());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_isalarmhost()) {
      set_isalarmhost(from.isalarmhost());
    }
    if (from.has_alarmflag()) {
      set_alarmflag(from.alarmflag());
    }
    if (from.has_sn()) {
      set_sn(from.sn());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmData::CopyFrom(const AlarmData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmData::IsInitialized() const {

  return true;
}

void AlarmData::Swap(AlarmData* other) {
  if (other != this) {
    std::swap(srcdevcode_, other->srcdevcode_);
    std::swap(srcdevchannelseq_, other->srcdevchannelseq_);
    std::swap(alarmtype_, other->alarmtype_);
    std::swap(alarmname_, other->alarmname_);
    std::swap(alarmdescirbe_, other->alarmdescirbe_);
    std::swap(currentalarmdev_, other->currentalarmdev_);
    std::swap(action_, other->action_);
    std::swap(alarmtime_, other->alarmtime_);
    std::swap(isalarmhost_, other->isalarmhost_);
    std::swap(alarmflag_, other->alarmflag_);
    std::swap(sn_, other->sn_);
    raisealarms_.Swap(&other->raisealarms_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmData_descriptor_;
  metadata.reflection = AlarmData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AlarmMassage::kResultFieldNumber;
const int AlarmMassage::kResultDescribeFieldNumber;
const int AlarmMassage::kUserIdFieldNumber;
const int AlarmMassage::kAlarmFieldNumber;
#endif  // !_MSC_VER

AlarmMassage::AlarmMassage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmMassage)
}

void AlarmMassage::InitAsDefaultInstance() {
  alarm_ = const_cast< ::com::arges::file::proto::AlarmData*>(&::com::arges::file::proto::AlarmData::default_instance());
}

AlarmMassage::AlarmMassage(const AlarmMassage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmMassage)
}

void AlarmMassage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = -1;
  resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alarm_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmMassage::~AlarmMassage() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmMassage)
  SharedDtor();
}

void AlarmMassage::SharedDtor() {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdescribe_;
  }
  if (this != default_instance_) {
    delete alarm_;
  }
}

void AlarmMassage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmMassage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmMassage_descriptor_;
}

const AlarmMassage& AlarmMassage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmMassage* AlarmMassage::default_instance_ = NULL;

AlarmMassage* AlarmMassage::New() const {
  return new AlarmMassage;
}

void AlarmMassage::Clear() {
  if (_has_bits_[0 / 32] & 11) {
    result_ = -1;
    if (has_resultdescribe()) {
      if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resultdescribe_->clear();
      }
    }
    if (has_alarm()) {
      if (alarm_ != NULL) alarm_->::com::arges::file::proto::AlarmData::Clear();
    }
  }
  userid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmMassage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmMassage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resultDescribe;
        break;
      }

      // optional bytes resultDescribe = 2 [default = ""];
      case 2: {
        if (tag == 18) {
         parse_resultDescribe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_resultdescribe()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userId;
        break;
      }

      // repeated int64 userId = 3;
      case 3: {
        if (tag == 24) {
         parse_userId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_userid())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_userid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userId;
        if (input->ExpectTag(34)) goto parse_alarm;
        break;
      }

      // optional .com.arges.file.proto.AlarmData alarm = 4;
      case 4: {
        if (tag == 34) {
         parse_alarm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_alarm()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmMassage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmMassage)
  return false;
#undef DO_
}

void AlarmMassage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmMassage)
  // optional int32 result = 1 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional bytes resultDescribe = 2 [default = ""];
  if (has_resultdescribe()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->resultdescribe(), output);
  }

  // repeated int64 userId = 3;
  for (int i = 0; i < this->userid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->userid(i), output);
  }

  // optional .com.arges.file.proto.AlarmData alarm = 4;
  if (has_alarm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->alarm(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmMassage)
}

::google::protobuf::uint8* AlarmMassage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmMassage)
  // optional int32 result = 1 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional bytes resultDescribe = 2 [default = ""];
  if (has_resultdescribe()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->resultdescribe(), target);
  }

  // repeated int64 userId = 3;
  for (int i = 0; i < this->userid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->userid(i), target);
  }

  // optional .com.arges.file.proto.AlarmData alarm = 4;
  if (has_alarm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->alarm(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmMassage)
  return target;
}

int AlarmMassage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional bytes resultDescribe = 2 [default = ""];
    if (has_resultdescribe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->resultdescribe());
    }

    // optional .com.arges.file.proto.AlarmData alarm = 4;
    if (has_alarm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->alarm());
    }

  }
  // repeated int64 userId = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->userid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->userid(i));
    }
    total_size += 1 * this->userid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmMassage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmMassage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmMassage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmMassage::MergeFrom(const AlarmMassage& from) {
  GOOGLE_CHECK_NE(&from, this);
  userid_.MergeFrom(from.userid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_resultdescribe()) {
      set_resultdescribe(from.resultdescribe());
    }
    if (from.has_alarm()) {
      mutable_alarm()->::com::arges::file::proto::AlarmData::MergeFrom(from.alarm());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmMassage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmMassage::CopyFrom(const AlarmMassage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmMassage::IsInitialized() const {

  return true;
}

void AlarmMassage::Swap(AlarmMassage* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(resultdescribe_, other->resultdescribe_);
    userid_.Swap(&other->userid_);
    std::swap(alarm_, other->alarm_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmMassage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmMassage_descriptor_;
  metadata.reflection = AlarmMassage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AlarmPlanData::kIdFieldNumber;
const int AlarmPlanData::kUserIdFieldNumber;
const int AlarmPlanData::kUserTypeFieldNumber;
const int AlarmPlanData::kNameFieldNumber;
const int AlarmPlanData::kTimeTemplatFieldNumber;
const int AlarmPlanData::kStateFieldNumber;
const int AlarmPlanData::kDescribeFieldNumber;
const int AlarmPlanData::kAlarmsFieldNumber;
const int AlarmPlanData::kSoundsFieldNumber;
#endif  // !_MSC_VER

AlarmPlanData::AlarmPlanData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmPlanData)
}

void AlarmPlanData::InitAsDefaultInstance() {
  timetemplat_ = const_cast< ::com::arges::file::proto::TimeTemplateData*>(&::com::arges::file::proto::TimeTemplateData::default_instance());
}

AlarmPlanData::AlarmPlanData(const AlarmPlanData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmPlanData)
}

void AlarmPlanData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usertype_ = -1;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timetemplat_ = NULL;
  state_ = -1;
  describe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmPlanData::~AlarmPlanData() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmPlanData)
  SharedDtor();
}

void AlarmPlanData::SharedDtor() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete describe_;
  }
  if (this != default_instance_) {
    delete timetemplat_;
  }
}

void AlarmPlanData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmPlanData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmPlanData_descriptor_;
}

const AlarmPlanData& AlarmPlanData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmPlanData* AlarmPlanData::default_instance_ = NULL;

AlarmPlanData* AlarmPlanData::New() const {
  return new AlarmPlanData;
}

void AlarmPlanData::Clear() {
  if (_has_bits_[0 / 32] & 125) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        id_->clear();
      }
    }
    usertype_ = -1;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_timetemplat()) {
      if (timetemplat_ != NULL) timetemplat_->::com::arges::file::proto::TimeTemplateData::Clear();
    }
    state_ = -1;
    if (has_describe()) {
      if (describe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        describe_->clear();
      }
    }
  }
  userid_.Clear();
  alarms_.Clear();
  sounds_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmPlanData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmPlanData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1 [default = ""];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userId;
        break;
      }

      // repeated int64 userId = 2;
      case 2: {
        if (tag == 16) {
         parse_userId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_userid())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_userid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userId;
        if (input->ExpectTag(24)) goto parse_userType;
        break;
      }

      // optional int32 userType = 3 [default = -1];
      case 3: {
        if (tag == 24) {
         parse_userType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usertype_)));
          set_has_usertype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // optional string name = 4 [default = ""];
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_timeTemplat;
        break;
      }

      // optional .com.arges.file.proto.TimeTemplateData timeTemplat = 5;
      case 5: {
        if (tag == 42) {
         parse_timeTemplat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timetemplat()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_state;
        break;
      }

      // optional int32 state = 6 [default = -1];
      case 6: {
        if (tag == 48) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_describe;
        break;
      }

      // optional bytes describe = 7 [default = ""];
      case 7: {
        if (tag == 58) {
         parse_describe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_describe()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_alarms;
        break;
      }

      // repeated .com.arges.file.proto.AlarmRuleData alarms = 8;
      case 8: {
        if (tag == 66) {
         parse_alarms:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_alarms()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_alarms;
        if (input->ExpectTag(74)) goto parse_sounds;
        break;
      }

      // repeated .com.arges.file.proto.SoundLinkData sounds = 9;
      case 9: {
        if (tag == 74) {
         parse_sounds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sounds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_sounds;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmPlanData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmPlanData)
  return false;
#undef DO_
}

void AlarmPlanData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmPlanData)
  // optional string id = 1 [default = ""];
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // repeated int64 userId = 2;
  for (int i = 0; i < this->userid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->userid(i), output);
  }

  // optional int32 userType = 3 [default = -1];
  if (has_usertype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->usertype(), output);
  }

  // optional string name = 4 [default = ""];
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional .com.arges.file.proto.TimeTemplateData timeTemplat = 5;
  if (has_timetemplat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->timetemplat(), output);
  }

  // optional int32 state = 6 [default = -1];
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->state(), output);
  }

  // optional bytes describe = 7 [default = ""];
  if (has_describe()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->describe(), output);
  }

  // repeated .com.arges.file.proto.AlarmRuleData alarms = 8;
  for (int i = 0; i < this->alarms_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->alarms(i), output);
  }

  // repeated .com.arges.file.proto.SoundLinkData sounds = 9;
  for (int i = 0; i < this->sounds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->sounds(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmPlanData)
}

::google::protobuf::uint8* AlarmPlanData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmPlanData)
  // optional string id = 1 [default = ""];
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // repeated int64 userId = 2;
  for (int i = 0; i < this->userid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->userid(i), target);
  }

  // optional int32 userType = 3 [default = -1];
  if (has_usertype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->usertype(), target);
  }

  // optional string name = 4 [default = ""];
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional .com.arges.file.proto.TimeTemplateData timeTemplat = 5;
  if (has_timetemplat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->timetemplat(), target);
  }

  // optional int32 state = 6 [default = -1];
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->state(), target);
  }

  // optional bytes describe = 7 [default = ""];
  if (has_describe()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->describe(), target);
  }

  // repeated .com.arges.file.proto.AlarmRuleData alarms = 8;
  for (int i = 0; i < this->alarms_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->alarms(i), target);
  }

  // repeated .com.arges.file.proto.SoundLinkData sounds = 9;
  for (int i = 0; i < this->sounds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->sounds(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmPlanData)
  return target;
}

int AlarmPlanData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string id = 1 [default = ""];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional int32 userType = 3 [default = -1];
    if (has_usertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usertype());
    }

    // optional string name = 4 [default = ""];
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .com.arges.file.proto.TimeTemplateData timeTemplat = 5;
    if (has_timetemplat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->timetemplat());
    }

    // optional int32 state = 6 [default = -1];
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

    // optional bytes describe = 7 [default = ""];
    if (has_describe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->describe());
    }

  }
  // repeated int64 userId = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->userid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->userid(i));
    }
    total_size += 1 * this->userid_size() + data_size;
  }

  // repeated .com.arges.file.proto.AlarmRuleData alarms = 8;
  total_size += 1 * this->alarms_size();
  for (int i = 0; i < this->alarms_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->alarms(i));
  }

  // repeated .com.arges.file.proto.SoundLinkData sounds = 9;
  total_size += 1 * this->sounds_size();
  for (int i = 0; i < this->sounds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sounds(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmPlanData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmPlanData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmPlanData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmPlanData::MergeFrom(const AlarmPlanData& from) {
  GOOGLE_CHECK_NE(&from, this);
  userid_.MergeFrom(from.userid_);
  alarms_.MergeFrom(from.alarms_);
  sounds_.MergeFrom(from.sounds_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_usertype()) {
      set_usertype(from.usertype());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_timetemplat()) {
      mutable_timetemplat()->::com::arges::file::proto::TimeTemplateData::MergeFrom(from.timetemplat());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_describe()) {
      set_describe(from.describe());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmPlanData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmPlanData::CopyFrom(const AlarmPlanData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmPlanData::IsInitialized() const {

  return true;
}

void AlarmPlanData::Swap(AlarmPlanData* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    userid_.Swap(&other->userid_);
    std::swap(usertype_, other->usertype_);
    std::swap(name_, other->name_);
    std::swap(timetemplat_, other->timetemplat_);
    std::swap(state_, other->state_);
    std::swap(describe_, other->describe_);
    alarms_.Swap(&other->alarms_);
    sounds_.Swap(&other->sounds_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmPlanData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmPlanData_descriptor_;
  metadata.reflection = AlarmPlanData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AlarmRuleData::kRuleIdFieldNumber;
const int AlarmRuleData::kPlanIdFieldNumber;
const int AlarmRuleData::kAlarmTypeFieldNumber;
const int AlarmRuleData::kRuleNameFieldNumber;
const int AlarmRuleData::kRuleDescribeFieldNumber;
const int AlarmRuleData::kStateFieldNumber;
const int AlarmRuleData::kSrcDevsFieldNumber;
const int AlarmRuleData::kActionFieldNumber;
const int AlarmRuleData::kSrcDevsFromDisFieldNumber;
#endif  // !_MSC_VER

AlarmRuleData::AlarmRuleData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmRuleData)
}

void AlarmRuleData::InitAsDefaultInstance() {
  action_ = const_cast< ::com::arges::file::proto::ActionLinkData*>(&::com::arges::file::proto::ActionLinkData::default_instance());
}

AlarmRuleData::AlarmRuleData(const AlarmRuleData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmRuleData)
}

void AlarmRuleData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ruleid_ = GOOGLE_LONGLONG(-1);
  planid_ = GOOGLE_LONGLONG(-1);
  rulename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ruledescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = -1;
  action_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmRuleData::~AlarmRuleData() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmRuleData)
  SharedDtor();
}

void AlarmRuleData::SharedDtor() {
  if (rulename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rulename_;
  }
  if (ruledescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ruledescribe_;
  }
  if (this != default_instance_) {
    delete action_;
  }
}

void AlarmRuleData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmRuleData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmRuleData_descriptor_;
}

const AlarmRuleData& AlarmRuleData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmRuleData* AlarmRuleData::default_instance_ = NULL;

AlarmRuleData* AlarmRuleData::New() const {
  return new AlarmRuleData;
}

void AlarmRuleData::Clear() {
  if (_has_bits_[0 / 32] & 187) {
    ruleid_ = GOOGLE_LONGLONG(-1);
    planid_ = GOOGLE_LONGLONG(-1);
    if (has_rulename()) {
      if (rulename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        rulename_->clear();
      }
    }
    if (has_ruledescribe()) {
      if (ruledescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ruledescribe_->clear();
      }
    }
    state_ = -1;
    if (has_action()) {
      if (action_ != NULL) action_->::com::arges::file::proto::ActionLinkData::Clear();
    }
  }
  alarmtype_.Clear();
  srcdevs_.Clear();
  srcdevsfromdis_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmRuleData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmRuleData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ruleId = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ruleid_)));
          set_has_ruleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_planId;
        break;
      }

      // optional int64 planId = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_planId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &planid_)));
          set_has_planid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_alarmType;
        break;
      }

      // repeated int64 alarmType = 3;
      case 3: {
        if (tag == 24) {
         parse_alarmType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_alarmtype())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_alarmtype())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_alarmType;
        if (input->ExpectTag(34)) goto parse_ruleName;
        break;
      }

      // optional string ruleName = 4 [default = ""];
      case 4: {
        if (tag == 34) {
         parse_ruleName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rulename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rulename().data(), this->rulename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "rulename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ruleDescribe;
        break;
      }

      // optional bytes ruleDescribe = 5 [default = ""];
      case 5: {
        if (tag == 42) {
         parse_ruleDescribe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ruledescribe()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_state;
        break;
      }

      // optional int32 state = 7 [default = -1];
      case 7: {
        if (tag == 56) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_srcDevs;
        break;
      }

      // repeated .com.arges.file.proto.AlarmSrcDevInfo srcDevs = 8;
      case 8: {
        if (tag == 66) {
         parse_srcDevs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_srcdevs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_srcDevs;
        if (input->ExpectTag(74)) goto parse_action;
        break;
      }

      // optional .com.arges.file.proto.ActionLinkData action = 9;
      case 9: {
        if (tag == 74) {
         parse_action:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_srcDevsFromDis;
        break;
      }

      // repeated .com.arges.file.proto.DeviceInfo srcDevsFromDis = 10;
      case 10: {
        if (tag == 82) {
         parse_srcDevsFromDis:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_srcdevsfromdis()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_srcDevsFromDis;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmRuleData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmRuleData)
  return false;
#undef DO_
}

void AlarmRuleData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmRuleData)
  // optional int64 ruleId = 1 [default = -1];
  if (has_ruleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ruleid(), output);
  }

  // optional int64 planId = 2 [default = -1];
  if (has_planid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->planid(), output);
  }

  // repeated int64 alarmType = 3;
  for (int i = 0; i < this->alarmtype_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->alarmtype(i), output);
  }

  // optional string ruleName = 4 [default = ""];
  if (has_rulename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rulename().data(), this->rulename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rulename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->rulename(), output);
  }

  // optional bytes ruleDescribe = 5 [default = ""];
  if (has_ruledescribe()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->ruledescribe(), output);
  }

  // optional int32 state = 7 [default = -1];
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->state(), output);
  }

  // repeated .com.arges.file.proto.AlarmSrcDevInfo srcDevs = 8;
  for (int i = 0; i < this->srcdevs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->srcdevs(i), output);
  }

  // optional .com.arges.file.proto.ActionLinkData action = 9;
  if (has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->action(), output);
  }

  // repeated .com.arges.file.proto.DeviceInfo srcDevsFromDis = 10;
  for (int i = 0; i < this->srcdevsfromdis_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->srcdevsfromdis(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmRuleData)
}

::google::protobuf::uint8* AlarmRuleData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmRuleData)
  // optional int64 ruleId = 1 [default = -1];
  if (has_ruleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ruleid(), target);
  }

  // optional int64 planId = 2 [default = -1];
  if (has_planid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->planid(), target);
  }

  // repeated int64 alarmType = 3;
  for (int i = 0; i < this->alarmtype_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->alarmtype(i), target);
  }

  // optional string ruleName = 4 [default = ""];
  if (has_rulename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rulename().data(), this->rulename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rulename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->rulename(), target);
  }

  // optional bytes ruleDescribe = 5 [default = ""];
  if (has_ruledescribe()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->ruledescribe(), target);
  }

  // optional int32 state = 7 [default = -1];
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->state(), target);
  }

  // repeated .com.arges.file.proto.AlarmSrcDevInfo srcDevs = 8;
  for (int i = 0; i < this->srcdevs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->srcdevs(i), target);
  }

  // optional .com.arges.file.proto.ActionLinkData action = 9;
  if (has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->action(), target);
  }

  // repeated .com.arges.file.proto.DeviceInfo srcDevsFromDis = 10;
  for (int i = 0; i < this->srcdevsfromdis_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->srcdevsfromdis(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmRuleData)
  return target;
}

int AlarmRuleData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 ruleId = 1 [default = -1];
    if (has_ruleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ruleid());
    }

    // optional int64 planId = 2 [default = -1];
    if (has_planid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->planid());
    }

    // optional string ruleName = 4 [default = ""];
    if (has_rulename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rulename());
    }

    // optional bytes ruleDescribe = 5 [default = ""];
    if (has_ruledescribe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ruledescribe());
    }

    // optional int32 state = 7 [default = -1];
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

    // optional .com.arges.file.proto.ActionLinkData action = 9;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->action());
    }

  }
  // repeated int64 alarmType = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->alarmtype_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->alarmtype(i));
    }
    total_size += 1 * this->alarmtype_size() + data_size;
  }

  // repeated .com.arges.file.proto.AlarmSrcDevInfo srcDevs = 8;
  total_size += 1 * this->srcdevs_size();
  for (int i = 0; i < this->srcdevs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->srcdevs(i));
  }

  // repeated .com.arges.file.proto.DeviceInfo srcDevsFromDis = 10;
  total_size += 1 * this->srcdevsfromdis_size();
  for (int i = 0; i < this->srcdevsfromdis_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->srcdevsfromdis(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmRuleData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmRuleData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmRuleData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmRuleData::MergeFrom(const AlarmRuleData& from) {
  GOOGLE_CHECK_NE(&from, this);
  alarmtype_.MergeFrom(from.alarmtype_);
  srcdevs_.MergeFrom(from.srcdevs_);
  srcdevsfromdis_.MergeFrom(from.srcdevsfromdis_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ruleid()) {
      set_ruleid(from.ruleid());
    }
    if (from.has_planid()) {
      set_planid(from.planid());
    }
    if (from.has_rulename()) {
      set_rulename(from.rulename());
    }
    if (from.has_ruledescribe()) {
      set_ruledescribe(from.ruledescribe());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_action()) {
      mutable_action()->::com::arges::file::proto::ActionLinkData::MergeFrom(from.action());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmRuleData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmRuleData::CopyFrom(const AlarmRuleData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmRuleData::IsInitialized() const {

  return true;
}

void AlarmRuleData::Swap(AlarmRuleData* other) {
  if (other != this) {
    std::swap(ruleid_, other->ruleid_);
    std::swap(planid_, other->planid_);
    alarmtype_.Swap(&other->alarmtype_);
    std::swap(rulename_, other->rulename_);
    std::swap(ruledescribe_, other->ruledescribe_);
    std::swap(state_, other->state_);
    srcdevs_.Swap(&other->srcdevs_);
    std::swap(action_, other->action_);
    srcdevsfromdis_.Swap(&other->srcdevsfromdis_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmRuleData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmRuleData_descriptor_;
  metadata.reflection = AlarmRuleData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AlarmPlanMassage::kRequestTypeFieldNumber;
const int AlarmPlanMassage::kResultFieldNumber;
const int AlarmPlanMassage::kResultDescribeFieldNumber;
const int AlarmPlanMassage::kIdFieldNumber;
const int AlarmPlanMassage::kNameFieldNumber;
const int AlarmPlanMassage::kPlanFieldNumber;
#endif  // !_MSC_VER

AlarmPlanMassage::AlarmPlanMassage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmPlanMassage)
}

void AlarmPlanMassage::InitAsDefaultInstance() {
}

AlarmPlanMassage::AlarmPlanMassage(const AlarmPlanMassage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmPlanMassage)
}

void AlarmPlanMassage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  requesttype_ = -1;
  result_ = -1;
  resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmPlanMassage::~AlarmPlanMassage() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmPlanMassage)
  SharedDtor();
}

void AlarmPlanMassage::SharedDtor() {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdescribe_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void AlarmPlanMassage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmPlanMassage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmPlanMassage_descriptor_;
}

const AlarmPlanMassage& AlarmPlanMassage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmPlanMassage* AlarmPlanMassage::default_instance_ = NULL;

AlarmPlanMassage* AlarmPlanMassage::New() const {
  return new AlarmPlanMassage;
}

void AlarmPlanMassage::Clear() {
  if (_has_bits_[0 / 32] & 23) {
    requesttype_ = -1;
    result_ = -1;
    if (has_resultdescribe()) {
      if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resultdescribe_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  id_.Clear();
  plan_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmPlanMassage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmPlanMassage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 requestType = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requesttype_)));
          set_has_requesttype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional int32 result = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_resultDescribe;
        break;
      }

      // optional bytes resultDescribe = 3 [default = ""];
      case 3: {
        if (tag == 26) {
         parse_resultDescribe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_resultdescribe()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_id;
        break;
      }

      // repeated string id = 4;
      case 4: {
        if (tag == 34) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id(this->id_size() - 1).data(),
            this->id(this->id_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_id;
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // optional string name = 5 [default = ""];
      case 5: {
        if (tag == 42) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_plan;
        break;
      }

      // repeated .com.arges.file.proto.AlarmPlanData plan = 6;
      case 6: {
        if (tag == 50) {
         parse_plan:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_plan()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_plan;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmPlanMassage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmPlanMassage)
  return false;
#undef DO_
}

void AlarmPlanMassage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmPlanMassage)
  // optional int32 requestType = 1 [default = -1];
  if (has_requesttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requesttype(), output);
  }

  // optional int32 result = 2 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  // optional bytes resultDescribe = 3 [default = ""];
  if (has_resultdescribe()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->resultdescribe(), output);
  }

  // repeated string id = 4;
  for (int i = 0; i < this->id_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->id(i).data(), this->id(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "id");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->id(i), output);
  }

  // optional string name = 5 [default = ""];
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // repeated .com.arges.file.proto.AlarmPlanData plan = 6;
  for (int i = 0; i < this->plan_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->plan(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmPlanMassage)
}

::google::protobuf::uint8* AlarmPlanMassage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmPlanMassage)
  // optional int32 requestType = 1 [default = -1];
  if (has_requesttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requesttype(), target);
  }

  // optional int32 result = 2 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  // optional bytes resultDescribe = 3 [default = ""];
  if (has_resultdescribe()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->resultdescribe(), target);
  }

  // repeated string id = 4;
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id(i).data(), this->id(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->id(i), target);
  }

  // optional string name = 5 [default = ""];
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // repeated .com.arges.file.proto.AlarmPlanData plan = 6;
  for (int i = 0; i < this->plan_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->plan(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmPlanMassage)
  return target;
}

int AlarmPlanMassage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 requestType = 1 [default = -1];
    if (has_requesttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->requesttype());
    }

    // optional int32 result = 2 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional bytes resultDescribe = 3 [default = ""];
    if (has_resultdescribe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->resultdescribe());
    }

    // optional string name = 5 [default = ""];
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated string id = 4;
  total_size += 1 * this->id_size();
  for (int i = 0; i < this->id_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->id(i));
  }

  // repeated .com.arges.file.proto.AlarmPlanData plan = 6;
  total_size += 1 * this->plan_size();
  for (int i = 0; i < this->plan_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->plan(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmPlanMassage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmPlanMassage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmPlanMassage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmPlanMassage::MergeFrom(const AlarmPlanMassage& from) {
  GOOGLE_CHECK_NE(&from, this);
  id_.MergeFrom(from.id_);
  plan_.MergeFrom(from.plan_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requesttype()) {
      set_requesttype(from.requesttype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_resultdescribe()) {
      set_resultdescribe(from.resultdescribe());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmPlanMassage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmPlanMassage::CopyFrom(const AlarmPlanMassage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmPlanMassage::IsInitialized() const {

  return true;
}

void AlarmPlanMassage::Swap(AlarmPlanMassage* other) {
  if (other != this) {
    std::swap(requesttype_, other->requesttype_);
    std::swap(result_, other->result_);
    std::swap(resultdescribe_, other->resultdescribe_);
    id_.Swap(&other->id_);
    std::swap(name_, other->name_);
    plan_.Swap(&other->plan_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmPlanMassage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmPlanMassage_descriptor_;
  metadata.reflection = AlarmPlanMassage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AlarmDataForDIS::kResultFieldNumber;
const int AlarmDataForDIS::kSrcDevCodeFieldNumber;
const int AlarmDataForDIS::kAlarmFieldNumber;
const int AlarmDataForDIS::kUserIdFieldNumber;
const int AlarmDataForDIS::kIsToAtsFieldNumber;
const int AlarmDataForDIS::kIsWriteToDcFieldNumber;
#endif  // !_MSC_VER

AlarmDataForDIS::AlarmDataForDIS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmDataForDIS)
}

void AlarmDataForDIS::InitAsDefaultInstance() {
  alarm_ = const_cast< ::com::arges::file::proto::AlarmData*>(&::com::arges::file::proto::AlarmData::default_instance());
}

AlarmDataForDIS::AlarmDataForDIS(const AlarmDataForDIS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmDataForDIS)
}

void AlarmDataForDIS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  srcdevcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alarm_ = NULL;
  istoats_ = false;
  iswritetodc_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmDataForDIS::~AlarmDataForDIS() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmDataForDIS)
  SharedDtor();
}

void AlarmDataForDIS::SharedDtor() {
  if (srcdevcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srcdevcode_;
  }
  if (this != default_instance_) {
    delete alarm_;
  }
}

void AlarmDataForDIS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmDataForDIS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmDataForDIS_descriptor_;
}

const AlarmDataForDIS& AlarmDataForDIS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmDataForDIS* AlarmDataForDIS::default_instance_ = NULL;

AlarmDataForDIS* AlarmDataForDIS::New() const {
  return new AlarmDataForDIS;
}

void AlarmDataForDIS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<AlarmDataForDIS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 55) {
    ZR_(result_, iswritetodc_);
    if (has_srcdevcode()) {
      if (srcdevcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srcdevcode_->clear();
      }
    }
    if (has_alarm()) {
      if (alarm_ != NULL) alarm_->::com::arges::file::proto::AlarmData::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  userid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmDataForDIS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmDataForDIS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_srcDevCode;
        break;
      }

      // optional string srcDevCode = 2;
      case 2: {
        if (tag == 18) {
         parse_srcDevCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcdevcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srcdevcode().data(), this->srcdevcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srcdevcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_alarm;
        break;
      }

      // optional .com.arges.file.proto.AlarmData alarm = 3;
      case 3: {
        if (tag == 26) {
         parse_alarm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_alarm()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_userId;
        break;
      }

      // repeated int64 userId = 4;
      case 4: {
        if (tag == 32) {
         parse_userId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32, input, this->mutable_userid())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_userid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_userId;
        if (input->ExpectTag(40)) goto parse_isToAts;
        break;
      }

      // optional bool isToAts = 5;
      case 5: {
        if (tag == 40) {
         parse_isToAts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &istoats_)));
          set_has_istoats();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_isWriteToDc;
        break;
      }

      // optional bool isWriteToDc = 6 [default = false];
      case 6: {
        if (tag == 48) {
         parse_isWriteToDc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iswritetodc_)));
          set_has_iswritetodc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmDataForDIS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmDataForDIS)
  return false;
#undef DO_
}

void AlarmDataForDIS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmDataForDIS)
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string srcDevCode = 2;
  if (has_srcdevcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srcdevcode().data(), this->srcdevcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srcdevcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->srcdevcode(), output);
  }

  // optional .com.arges.file.proto.AlarmData alarm = 3;
  if (has_alarm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->alarm(), output);
  }

  // repeated int64 userId = 4;
  for (int i = 0; i < this->userid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->userid(i), output);
  }

  // optional bool isToAts = 5;
  if (has_istoats()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->istoats(), output);
  }

  // optional bool isWriteToDc = 6 [default = false];
  if (has_iswritetodc()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->iswritetodc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmDataForDIS)
}

::google::protobuf::uint8* AlarmDataForDIS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmDataForDIS)
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string srcDevCode = 2;
  if (has_srcdevcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srcdevcode().data(), this->srcdevcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srcdevcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->srcdevcode(), target);
  }

  // optional .com.arges.file.proto.AlarmData alarm = 3;
  if (has_alarm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->alarm(), target);
  }

  // repeated int64 userId = 4;
  for (int i = 0; i < this->userid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->userid(i), target);
  }

  // optional bool isToAts = 5;
  if (has_istoats()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->istoats(), target);
  }

  // optional bool isWriteToDc = 6 [default = false];
  if (has_iswritetodc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->iswritetodc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmDataForDIS)
  return target;
}

int AlarmDataForDIS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional string srcDevCode = 2;
    if (has_srcdevcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srcdevcode());
    }

    // optional .com.arges.file.proto.AlarmData alarm = 3;
    if (has_alarm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->alarm());
    }

    // optional bool isToAts = 5;
    if (has_istoats()) {
      total_size += 1 + 1;
    }

    // optional bool isWriteToDc = 6 [default = false];
    if (has_iswritetodc()) {
      total_size += 1 + 1;
    }

  }
  // repeated int64 userId = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->userid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->userid(i));
    }
    total_size += 1 * this->userid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmDataForDIS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmDataForDIS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmDataForDIS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmDataForDIS::MergeFrom(const AlarmDataForDIS& from) {
  GOOGLE_CHECK_NE(&from, this);
  userid_.MergeFrom(from.userid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_srcdevcode()) {
      set_srcdevcode(from.srcdevcode());
    }
    if (from.has_alarm()) {
      mutable_alarm()->::com::arges::file::proto::AlarmData::MergeFrom(from.alarm());
    }
    if (from.has_istoats()) {
      set_istoats(from.istoats());
    }
    if (from.has_iswritetodc()) {
      set_iswritetodc(from.iswritetodc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmDataForDIS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmDataForDIS::CopyFrom(const AlarmDataForDIS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmDataForDIS::IsInitialized() const {

  return true;
}

void AlarmDataForDIS::Swap(AlarmDataForDIS* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(srcdevcode_, other->srcdevcode_);
    std::swap(alarm_, other->alarm_);
    userid_.Swap(&other->userid_);
    std::swap(istoats_, other->istoats_);
    std::swap(iswritetodc_, other->iswritetodc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmDataForDIS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmDataForDIS_descriptor_;
  metadata.reflection = AlarmDataForDIS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetAlarmDataForDIS::kResultFieldNumber;
const int GetAlarmDataForDIS::kAlarmFieldNumber;
const int GetAlarmDataForDIS::kIsNeedToSendTopicFieldNumber;
#endif  // !_MSC_VER

GetAlarmDataForDIS::GetAlarmDataForDIS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.GetAlarmDataForDIS)
}

void GetAlarmDataForDIS::InitAsDefaultInstance() {
  alarm_ = const_cast< ::com::arges::file::proto::AlarmPlanData*>(&::com::arges::file::proto::AlarmPlanData::default_instance());
}

GetAlarmDataForDIS::GetAlarmDataForDIS(const GetAlarmDataForDIS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.GetAlarmDataForDIS)
}

void GetAlarmDataForDIS::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  alarm_ = NULL;
  isneedtosendtopic_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetAlarmDataForDIS::~GetAlarmDataForDIS() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.GetAlarmDataForDIS)
  SharedDtor();
}

void GetAlarmDataForDIS::SharedDtor() {
  if (this != default_instance_) {
    delete alarm_;
  }
}

void GetAlarmDataForDIS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAlarmDataForDIS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAlarmDataForDIS_descriptor_;
}

const GetAlarmDataForDIS& GetAlarmDataForDIS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

GetAlarmDataForDIS* GetAlarmDataForDIS::default_instance_ = NULL;

GetAlarmDataForDIS* GetAlarmDataForDIS::New() const {
  return new GetAlarmDataForDIS;
}

void GetAlarmDataForDIS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GetAlarmDataForDIS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(result_, isneedtosendtopic_);
    if (has_alarm()) {
      if (alarm_ != NULL) alarm_->::com::arges::file::proto::AlarmPlanData::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetAlarmDataForDIS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.GetAlarmDataForDIS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_alarm;
        break;
      }

      // optional .com.arges.file.proto.AlarmPlanData alarm = 2;
      case 2: {
        if (tag == 18) {
         parse_alarm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_alarm()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_isNeedToSendTopic;
        break;
      }

      // optional bool isNeedToSendTopic = 3 [default = false];
      case 3: {
        if (tag == 24) {
         parse_isNeedToSendTopic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isneedtosendtopic_)));
          set_has_isneedtosendtopic();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.GetAlarmDataForDIS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.GetAlarmDataForDIS)
  return false;
#undef DO_
}

void GetAlarmDataForDIS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.GetAlarmDataForDIS)
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .com.arges.file.proto.AlarmPlanData alarm = 2;
  if (has_alarm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->alarm(), output);
  }

  // optional bool isNeedToSendTopic = 3 [default = false];
  if (has_isneedtosendtopic()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isneedtosendtopic(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.GetAlarmDataForDIS)
}

::google::protobuf::uint8* GetAlarmDataForDIS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.GetAlarmDataForDIS)
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .com.arges.file.proto.AlarmPlanData alarm = 2;
  if (has_alarm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->alarm(), target);
  }

  // optional bool isNeedToSendTopic = 3 [default = false];
  if (has_isneedtosendtopic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isneedtosendtopic(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.GetAlarmDataForDIS)
  return target;
}

int GetAlarmDataForDIS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .com.arges.file.proto.AlarmPlanData alarm = 2;
    if (has_alarm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->alarm());
    }

    // optional bool isNeedToSendTopic = 3 [default = false];
    if (has_isneedtosendtopic()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAlarmDataForDIS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetAlarmDataForDIS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetAlarmDataForDIS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetAlarmDataForDIS::MergeFrom(const GetAlarmDataForDIS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_alarm()) {
      mutable_alarm()->::com::arges::file::proto::AlarmPlanData::MergeFrom(from.alarm());
    }
    if (from.has_isneedtosendtopic()) {
      set_isneedtosendtopic(from.isneedtosendtopic());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetAlarmDataForDIS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAlarmDataForDIS::CopyFrom(const GetAlarmDataForDIS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAlarmDataForDIS::IsInitialized() const {

  return true;
}

void GetAlarmDataForDIS::Swap(GetAlarmDataForDIS* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(alarm_, other->alarm_);
    std::swap(isneedtosendtopic_, other->isneedtosendtopic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetAlarmDataForDIS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAlarmDataForDIS_descriptor_;
  metadata.reflection = GetAlarmDataForDIS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AlarmGetSrcsourceMassage::kRequestTypeFieldNumber;
const int AlarmGetSrcsourceMassage::kResultFieldNumber;
const int AlarmGetSrcsourceMassage::kResultDescribeFieldNumber;
const int AlarmGetSrcsourceMassage::kCascadeDevDomainFieldNumber;
const int AlarmGetSrcsourceMassage::kGpsDevFieldNumber;
const int AlarmGetSrcsourceMassage::kGrepDevFieldNumber;
#endif  // !_MSC_VER

AlarmGetSrcsourceMassage::AlarmGetSrcsourceMassage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmGetSrcsourceMassage)
}

void AlarmGetSrcsourceMassage::InitAsDefaultInstance() {
}

AlarmGetSrcsourceMassage::AlarmGetSrcsourceMassage(const AlarmGetSrcsourceMassage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmGetSrcsourceMassage)
}

void AlarmGetSrcsourceMassage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  requesttype_ = -1;
  result_ = -1;
  resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cascadedevdomain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmGetSrcsourceMassage::~AlarmGetSrcsourceMassage() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmGetSrcsourceMassage)
  SharedDtor();
}

void AlarmGetSrcsourceMassage::SharedDtor() {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdescribe_;
  }
  if (cascadedevdomain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cascadedevdomain_;
  }
  if (this != default_instance_) {
  }
}

void AlarmGetSrcsourceMassage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmGetSrcsourceMassage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmGetSrcsourceMassage_descriptor_;
}

const AlarmGetSrcsourceMassage& AlarmGetSrcsourceMassage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmGetSrcsourceMassage* AlarmGetSrcsourceMassage::default_instance_ = NULL;

AlarmGetSrcsourceMassage* AlarmGetSrcsourceMassage::New() const {
  return new AlarmGetSrcsourceMassage;
}

void AlarmGetSrcsourceMassage::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    requesttype_ = -1;
    result_ = -1;
    if (has_resultdescribe()) {
      if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resultdescribe_->clear();
      }
    }
    if (has_cascadedevdomain()) {
      if (cascadedevdomain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        cascadedevdomain_->clear();
      }
    }
  }
  gpsdev_.Clear();
  grepdev_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmGetSrcsourceMassage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmGetSrcsourceMassage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 requestType = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requesttype_)));
          set_has_requesttype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional int32 result = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_resultDescribe;
        break;
      }

      // optional string resultDescribe = 3 [default = ""];
      case 3: {
        if (tag == 26) {
         parse_resultDescribe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resultdescribe()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resultdescribe().data(), this->resultdescribe().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resultdescribe");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_cascadeDevDomain;
        break;
      }

      // optional string cascadeDevDomain = 4 [default = ""];
      case 4: {
        if (tag == 34) {
         parse_cascadeDevDomain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cascadedevdomain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cascadedevdomain().data(), this->cascadedevdomain().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cascadedevdomain");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_GpsDev;
        break;
      }

      // repeated .com.arges.file.proto.DeviceInfo GpsDev = 5;
      case 5: {
        if (tag == 42) {
         parse_GpsDev:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gpsdev()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_GpsDev;
        if (input->ExpectTag(50)) goto parse_GrepDev;
        break;
      }

      // repeated .com.arges.file.proto.DeviceInfo GrepDev = 6;
      case 6: {
        if (tag == 50) {
         parse_GrepDev:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_grepdev()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_GrepDev;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmGetSrcsourceMassage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmGetSrcsourceMassage)
  return false;
#undef DO_
}

void AlarmGetSrcsourceMassage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmGetSrcsourceMassage)
  // optional int32 requestType = 1 [default = -1];
  if (has_requesttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requesttype(), output);
  }

  // optional int32 result = 2 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  // optional string resultDescribe = 3 [default = ""];
  if (has_resultdescribe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdescribe().data(), this->resultdescribe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdescribe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->resultdescribe(), output);
  }

  // optional string cascadeDevDomain = 4 [default = ""];
  if (has_cascadedevdomain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cascadedevdomain().data(), this->cascadedevdomain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cascadedevdomain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cascadedevdomain(), output);
  }

  // repeated .com.arges.file.proto.DeviceInfo GpsDev = 5;
  for (int i = 0; i < this->gpsdev_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->gpsdev(i), output);
  }

  // repeated .com.arges.file.proto.DeviceInfo GrepDev = 6;
  for (int i = 0; i < this->grepdev_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->grepdev(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmGetSrcsourceMassage)
}

::google::protobuf::uint8* AlarmGetSrcsourceMassage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmGetSrcsourceMassage)
  // optional int32 requestType = 1 [default = -1];
  if (has_requesttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requesttype(), target);
  }

  // optional int32 result = 2 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  // optional string resultDescribe = 3 [default = ""];
  if (has_resultdescribe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdescribe().data(), this->resultdescribe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdescribe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->resultdescribe(), target);
  }

  // optional string cascadeDevDomain = 4 [default = ""];
  if (has_cascadedevdomain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cascadedevdomain().data(), this->cascadedevdomain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cascadedevdomain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cascadedevdomain(), target);
  }

  // repeated .com.arges.file.proto.DeviceInfo GpsDev = 5;
  for (int i = 0; i < this->gpsdev_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->gpsdev(i), target);
  }

  // repeated .com.arges.file.proto.DeviceInfo GrepDev = 6;
  for (int i = 0; i < this->grepdev_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->grepdev(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmGetSrcsourceMassage)
  return target;
}

int AlarmGetSrcsourceMassage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 requestType = 1 [default = -1];
    if (has_requesttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->requesttype());
    }

    // optional int32 result = 2 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional string resultDescribe = 3 [default = ""];
    if (has_resultdescribe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resultdescribe());
    }

    // optional string cascadeDevDomain = 4 [default = ""];
    if (has_cascadedevdomain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cascadedevdomain());
    }

  }
  // repeated .com.arges.file.proto.DeviceInfo GpsDev = 5;
  total_size += 1 * this->gpsdev_size();
  for (int i = 0; i < this->gpsdev_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gpsdev(i));
  }

  // repeated .com.arges.file.proto.DeviceInfo GrepDev = 6;
  total_size += 1 * this->grepdev_size();
  for (int i = 0; i < this->grepdev_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->grepdev(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmGetSrcsourceMassage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmGetSrcsourceMassage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmGetSrcsourceMassage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmGetSrcsourceMassage::MergeFrom(const AlarmGetSrcsourceMassage& from) {
  GOOGLE_CHECK_NE(&from, this);
  gpsdev_.MergeFrom(from.gpsdev_);
  grepdev_.MergeFrom(from.grepdev_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requesttype()) {
      set_requesttype(from.requesttype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_resultdescribe()) {
      set_resultdescribe(from.resultdescribe());
    }
    if (from.has_cascadedevdomain()) {
      set_cascadedevdomain(from.cascadedevdomain());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmGetSrcsourceMassage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmGetSrcsourceMassage::CopyFrom(const AlarmGetSrcsourceMassage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmGetSrcsourceMassage::IsInitialized() const {

  return true;
}

void AlarmGetSrcsourceMassage::Swap(AlarmGetSrcsourceMassage* other) {
  if (other != this) {
    std::swap(requesttype_, other->requesttype_);
    std::swap(result_, other->result_);
    std::swap(resultdescribe_, other->resultdescribe_);
    std::swap(cascadedevdomain_, other->cascadedevdomain_);
    gpsdev_.Swap(&other->gpsdev_);
    grepdev_.Swap(&other->grepdev_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmGetSrcsourceMassage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmGetSrcsourceMassage_descriptor_;
  metadata.reflection = AlarmGetSrcsourceMassage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AlarmRecordData_LinkVideoData::kIdFieldNumber;
const int AlarmRecordData_LinkVideoData::kAlarmIdFieldNumber;
const int AlarmRecordData_LinkVideoData::kFilePathFieldNumber;
const int AlarmRecordData_LinkVideoData::kChannelCodeFieldNumber;
#endif  // !_MSC_VER

AlarmRecordData_LinkVideoData::AlarmRecordData_LinkVideoData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmRecordData.LinkVideoData)
}

void AlarmRecordData_LinkVideoData::InitAsDefaultInstance() {
}

AlarmRecordData_LinkVideoData::AlarmRecordData_LinkVideoData(const AlarmRecordData_LinkVideoData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmRecordData.LinkVideoData)
}

void AlarmRecordData_LinkVideoData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(-1);
  alarmid_ = GOOGLE_LONGLONG(-1);
  filepath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channelcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmRecordData_LinkVideoData::~AlarmRecordData_LinkVideoData() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmRecordData.LinkVideoData)
  SharedDtor();
}

void AlarmRecordData_LinkVideoData::SharedDtor() {
  if (filepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filepath_;
  }
  if (channelcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete channelcode_;
  }
  if (this != default_instance_) {
  }
}

void AlarmRecordData_LinkVideoData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmRecordData_LinkVideoData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmRecordData_LinkVideoData_descriptor_;
}

const AlarmRecordData_LinkVideoData& AlarmRecordData_LinkVideoData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmRecordData_LinkVideoData* AlarmRecordData_LinkVideoData::default_instance_ = NULL;

AlarmRecordData_LinkVideoData* AlarmRecordData_LinkVideoData::New() const {
  return new AlarmRecordData_LinkVideoData;
}

void AlarmRecordData_LinkVideoData::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    id_ = GOOGLE_LONGLONG(-1);
    alarmid_ = GOOGLE_LONGLONG(-1);
    if (has_filepath()) {
      if (filepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        filepath_->clear();
      }
    }
    if (has_channelcode()) {
      if (channelcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        channelcode_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmRecordData_LinkVideoData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmRecordData.LinkVideoData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_alarmId;
        break;
      }

      // optional int64 alarmId = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_alarmId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &alarmid_)));
          set_has_alarmid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_filePath;
        break;
      }

      // optional string filePath = 3 [default = ""];
      case 3: {
        if (tag == 26) {
         parse_filePath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filepath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filepath().data(), this->filepath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filepath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_channelCode;
        break;
      }

      // optional string channelCode = 4 [default = ""];
      case 4: {
        if (tag == 34) {
         parse_channelCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channelcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channelcode().data(), this->channelcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "channelcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmRecordData.LinkVideoData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmRecordData.LinkVideoData)
  return false;
#undef DO_
}

void AlarmRecordData_LinkVideoData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmRecordData.LinkVideoData)
  // optional int64 id = 1 [default = -1];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional int64 alarmId = 2 [default = -1];
  if (has_alarmid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->alarmid(), output);
  }

  // optional string filePath = 3 [default = ""];
  if (has_filepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filepath().data(), this->filepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filepath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filepath(), output);
  }

  // optional string channelCode = 4 [default = ""];
  if (has_channelcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channelcode().data(), this->channelcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "channelcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->channelcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmRecordData.LinkVideoData)
}

::google::protobuf::uint8* AlarmRecordData_LinkVideoData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmRecordData.LinkVideoData)
  // optional int64 id = 1 [default = -1];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional int64 alarmId = 2 [default = -1];
  if (has_alarmid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->alarmid(), target);
  }

  // optional string filePath = 3 [default = ""];
  if (has_filepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filepath().data(), this->filepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filepath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filepath(), target);
  }

  // optional string channelCode = 4 [default = ""];
  if (has_channelcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channelcode().data(), this->channelcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "channelcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->channelcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmRecordData.LinkVideoData)
  return target;
}

int AlarmRecordData_LinkVideoData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 id = 1 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional int64 alarmId = 2 [default = -1];
    if (has_alarmid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->alarmid());
    }

    // optional string filePath = 3 [default = ""];
    if (has_filepath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filepath());
    }

    // optional string channelCode = 4 [default = ""];
    if (has_channelcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channelcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmRecordData_LinkVideoData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmRecordData_LinkVideoData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmRecordData_LinkVideoData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmRecordData_LinkVideoData::MergeFrom(const AlarmRecordData_LinkVideoData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_alarmid()) {
      set_alarmid(from.alarmid());
    }
    if (from.has_filepath()) {
      set_filepath(from.filepath());
    }
    if (from.has_channelcode()) {
      set_channelcode(from.channelcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmRecordData_LinkVideoData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmRecordData_LinkVideoData::CopyFrom(const AlarmRecordData_LinkVideoData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmRecordData_LinkVideoData::IsInitialized() const {

  return true;
}

void AlarmRecordData_LinkVideoData::Swap(AlarmRecordData_LinkVideoData* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(alarmid_, other->alarmid_);
    std::swap(filepath_, other->filepath_);
    std::swap(channelcode_, other->channelcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmRecordData_LinkVideoData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmRecordData_LinkVideoData_descriptor_;
  metadata.reflection = AlarmRecordData_LinkVideoData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AlarmRecordData_RaiseAlarmData::kIdFieldNumber;
const int AlarmRecordData_RaiseAlarmData::kAlarmIdFieldNumber;
const int AlarmRecordData_RaiseAlarmData::kAlarmCapFieldNumber;
const int AlarmRecordData_RaiseAlarmData::kAlarmNumFieldNumber;
const int AlarmRecordData_RaiseAlarmData::kAlarmGroupFieldNumber;
const int AlarmRecordData_RaiseAlarmData::kStandardNumFieldNumber;
#endif  // !_MSC_VER

AlarmRecordData_RaiseAlarmData::AlarmRecordData_RaiseAlarmData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmRecordData.RaiseAlarmData)
}

void AlarmRecordData_RaiseAlarmData::InitAsDefaultInstance() {
}

AlarmRecordData_RaiseAlarmData::AlarmRecordData_RaiseAlarmData(const AlarmRecordData_RaiseAlarmData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmRecordData.RaiseAlarmData)
}

void AlarmRecordData_RaiseAlarmData::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(-1);
  alarmid_ = GOOGLE_LONGLONG(-1);
  alarmcap_ = -1;
  alarmnum_ = 0;
  alarmgroup_ = -1;
  standardnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmRecordData_RaiseAlarmData::~AlarmRecordData_RaiseAlarmData() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmRecordData.RaiseAlarmData)
  SharedDtor();
}

void AlarmRecordData_RaiseAlarmData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AlarmRecordData_RaiseAlarmData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmRecordData_RaiseAlarmData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmRecordData_RaiseAlarmData_descriptor_;
}

const AlarmRecordData_RaiseAlarmData& AlarmRecordData_RaiseAlarmData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmRecordData_RaiseAlarmData* AlarmRecordData_RaiseAlarmData::default_instance_ = NULL;

AlarmRecordData_RaiseAlarmData* AlarmRecordData_RaiseAlarmData::New() const {
  return new AlarmRecordData_RaiseAlarmData;
}

void AlarmRecordData_RaiseAlarmData::Clear() {
  if (_has_bits_[0 / 32] & 63) {
    id_ = GOOGLE_LONGLONG(-1);
    alarmid_ = GOOGLE_LONGLONG(-1);
    alarmcap_ = -1;
    alarmnum_ = 0;
    alarmgroup_ = -1;
    standardnum_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmRecordData_RaiseAlarmData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmRecordData.RaiseAlarmData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_alarmId;
        break;
      }

      // optional int64 alarmId = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_alarmId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &alarmid_)));
          set_has_alarmid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_alarmCap;
        break;
      }

      // optional int32 alarmCap = 3 [default = -1];
      case 3: {
        if (tag == 24) {
         parse_alarmCap:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alarmcap_)));
          set_has_alarmcap();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_alarmNum;
        break;
      }

      // optional float alarmNum = 4 [default = 0];
      case 4: {
        if (tag == 37) {
         parse_alarmNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &alarmnum_)));
          set_has_alarmnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_alarmGroup;
        break;
      }

      // optional int32 alarmGroup = 5 [default = -1];
      case 5: {
        if (tag == 40) {
         parse_alarmGroup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alarmgroup_)));
          set_has_alarmgroup();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_standardNum;
        break;
      }

      // optional float standardNum = 6 [default = 0];
      case 6: {
        if (tag == 53) {
         parse_standardNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &standardnum_)));
          set_has_standardnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmRecordData.RaiseAlarmData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmRecordData.RaiseAlarmData)
  return false;
#undef DO_
}

void AlarmRecordData_RaiseAlarmData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmRecordData.RaiseAlarmData)
  // optional int64 id = 1 [default = -1];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional int64 alarmId = 2 [default = -1];
  if (has_alarmid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->alarmid(), output);
  }

  // optional int32 alarmCap = 3 [default = -1];
  if (has_alarmcap()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->alarmcap(), output);
  }

  // optional float alarmNum = 4 [default = 0];
  if (has_alarmnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->alarmnum(), output);
  }

  // optional int32 alarmGroup = 5 [default = -1];
  if (has_alarmgroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->alarmgroup(), output);
  }

  // optional float standardNum = 6 [default = 0];
  if (has_standardnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->standardnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmRecordData.RaiseAlarmData)
}

::google::protobuf::uint8* AlarmRecordData_RaiseAlarmData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmRecordData.RaiseAlarmData)
  // optional int64 id = 1 [default = -1];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional int64 alarmId = 2 [default = -1];
  if (has_alarmid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->alarmid(), target);
  }

  // optional int32 alarmCap = 3 [default = -1];
  if (has_alarmcap()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->alarmcap(), target);
  }

  // optional float alarmNum = 4 [default = 0];
  if (has_alarmnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->alarmnum(), target);
  }

  // optional int32 alarmGroup = 5 [default = -1];
  if (has_alarmgroup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->alarmgroup(), target);
  }

  // optional float standardNum = 6 [default = 0];
  if (has_standardnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->standardnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmRecordData.RaiseAlarmData)
  return target;
}

int AlarmRecordData_RaiseAlarmData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 id = 1 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional int64 alarmId = 2 [default = -1];
    if (has_alarmid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->alarmid());
    }

    // optional int32 alarmCap = 3 [default = -1];
    if (has_alarmcap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->alarmcap());
    }

    // optional float alarmNum = 4 [default = 0];
    if (has_alarmnum()) {
      total_size += 1 + 4;
    }

    // optional int32 alarmGroup = 5 [default = -1];
    if (has_alarmgroup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->alarmgroup());
    }

    // optional float standardNum = 6 [default = 0];
    if (has_standardnum()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmRecordData_RaiseAlarmData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmRecordData_RaiseAlarmData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmRecordData_RaiseAlarmData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmRecordData_RaiseAlarmData::MergeFrom(const AlarmRecordData_RaiseAlarmData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_alarmid()) {
      set_alarmid(from.alarmid());
    }
    if (from.has_alarmcap()) {
      set_alarmcap(from.alarmcap());
    }
    if (from.has_alarmnum()) {
      set_alarmnum(from.alarmnum());
    }
    if (from.has_alarmgroup()) {
      set_alarmgroup(from.alarmgroup());
    }
    if (from.has_standardnum()) {
      set_standardnum(from.standardnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmRecordData_RaiseAlarmData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmRecordData_RaiseAlarmData::CopyFrom(const AlarmRecordData_RaiseAlarmData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmRecordData_RaiseAlarmData::IsInitialized() const {

  return true;
}

void AlarmRecordData_RaiseAlarmData::Swap(AlarmRecordData_RaiseAlarmData* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(alarmid_, other->alarmid_);
    std::swap(alarmcap_, other->alarmcap_);
    std::swap(alarmnum_, other->alarmnum_);
    std::swap(alarmgroup_, other->alarmgroup_);
    std::swap(standardnum_, other->standardnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmRecordData_RaiseAlarmData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmRecordData_RaiseAlarmData_descriptor_;
  metadata.reflection = AlarmRecordData_RaiseAlarmData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AlarmRecordData::kIdFieldNumber;
const int AlarmRecordData::kDevCodeFieldNumber;
const int AlarmRecordData::kUnitTypeFieldNumber;
const int AlarmRecordData::kUnitSeqFieldNumber;
const int AlarmRecordData::kChnSeqFieldNumber;
const int AlarmRecordData::kChnNameFieldNumber;
const int AlarmRecordData::kAlarmTypeFieldNumber;
const int AlarmRecordData::kAlarmDateFieldNumber;
const int AlarmRecordData::kAlarmGradeFieldNumber;
const int AlarmRecordData::kHandleUserFieldNumber;
const int AlarmRecordData::kHandleDateFieldNumber;
const int AlarmRecordData::kHandleMsgFieldNumber;
const int AlarmRecordData::kHandleStatFieldNumber;
const int AlarmRecordData::kDevNameFieldNumber;
const int AlarmRecordData::kAlarmStatFieldNumber;
const int AlarmRecordData::kVideosFieldNumber;
const int AlarmRecordData::kRaisesFieldNumber;
#endif  // !_MSC_VER

AlarmRecordData::AlarmRecordData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmRecordData)
}

void AlarmRecordData::InitAsDefaultInstance() {
}

AlarmRecordData::AlarmRecordData(const AlarmRecordData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmRecordData)
}

void AlarmRecordData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(-1);
  devcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unittype_ = -1;
  unitseq_ = -1;
  chnseq_ = -1;
  chnname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alarmtype_ = -1;
  alarmdate_ = GOOGLE_LONGLONG(-1);
  alarmgrade_ = -1;
  handleuser_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handledate_ = GOOGLE_LONGLONG(-1);
  handlemsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handlestat_ = -1;
  devname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alarmstat_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmRecordData::~AlarmRecordData() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmRecordData)
  SharedDtor();
}

void AlarmRecordData::SharedDtor() {
  if (devcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete devcode_;
  }
  if (chnname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete chnname_;
  }
  if (handleuser_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete handleuser_;
  }
  if (handlemsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete handlemsg_;
  }
  if (devname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete devname_;
  }
  if (this != default_instance_) {
  }
}

void AlarmRecordData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmRecordData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmRecordData_descriptor_;
}

const AlarmRecordData& AlarmRecordData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmRecordData* AlarmRecordData::default_instance_ = NULL;

AlarmRecordData* AlarmRecordData::New() const {
  return new AlarmRecordData;
}

void AlarmRecordData::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    id_ = GOOGLE_LONGLONG(-1);
    if (has_devcode()) {
      if (devcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        devcode_->clear();
      }
    }
    unittype_ = -1;
    unitseq_ = -1;
    chnseq_ = -1;
    if (has_chnname()) {
      if (chnname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        chnname_->clear();
      }
    }
    alarmtype_ = -1;
    alarmdate_ = GOOGLE_LONGLONG(-1);
  }
  if (_has_bits_[8 / 32] & 32512) {
    alarmgrade_ = -1;
    if (has_handleuser()) {
      if (handleuser_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        handleuser_->clear();
      }
    }
    handledate_ = GOOGLE_LONGLONG(-1);
    if (has_handlemsg()) {
      if (handlemsg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        handlemsg_->clear();
      }
    }
    handlestat_ = -1;
    if (has_devname()) {
      if (devname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        devname_->clear();
      }
    }
    alarmstat_ = -1;
  }
  videos_.Clear();
  raises_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmRecordData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmRecordData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_devCode;
        break;
      }

      // optional string devCode = 2 [default = ""];
      case 2: {
        if (tag == 18) {
         parse_devCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->devcode().data(), this->devcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "devcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_unitType;
        break;
      }

      // optional int32 unitType = 3 [default = -1];
      case 3: {
        if (tag == 24) {
         parse_unitType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unittype_)));
          set_has_unittype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_unitSeq;
        break;
      }

      // optional int32 unitSeq = 4 [default = -1];
      case 4: {
        if (tag == 32) {
         parse_unitSeq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unitseq_)));
          set_has_unitseq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_chnSeq;
        break;
      }

      // optional int32 chnSeq = 5 [default = -1];
      case 5: {
        if (tag == 40) {
         parse_chnSeq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chnseq_)));
          set_has_chnseq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_chnName;
        break;
      }

      // optional string chnName = 6 [default = ""];
      case 6: {
        if (tag == 50) {
         parse_chnName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chnname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chnname().data(), this->chnname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chnname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_alarmType;
        break;
      }

      // optional int32 alarmType = 7 [default = -1];
      case 7: {
        if (tag == 56) {
         parse_alarmType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alarmtype_)));
          set_has_alarmtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_alarmDate;
        break;
      }

      // optional int64 alarmDate = 8 [default = -1];
      case 8: {
        if (tag == 64) {
         parse_alarmDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &alarmdate_)));
          set_has_alarmdate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_alarmGrade;
        break;
      }

      // optional int32 alarmGrade = 9 [default = -1];
      case 9: {
        if (tag == 72) {
         parse_alarmGrade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alarmgrade_)));
          set_has_alarmgrade();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_handleUser;
        break;
      }

      // optional string handleUser = 10 [default = ""];
      case 10: {
        if (tag == 82) {
         parse_handleUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handleuser()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->handleuser().data(), this->handleuser().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "handleuser");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_handleDate;
        break;
      }

      // optional int64 handleDate = 11 [default = -1];
      case 11: {
        if (tag == 88) {
         parse_handleDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &handledate_)));
          set_has_handledate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_handleMsg;
        break;
      }

      // optional bytes handleMsg = 12 [default = ""];
      case 12: {
        if (tag == 98) {
         parse_handleMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_handlemsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_handleStat;
        break;
      }

      // optional int32 handleStat = 13 [default = -1];
      case 13: {
        if (tag == 104) {
         parse_handleStat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handlestat_)));
          set_has_handlestat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_devName;
        break;
      }

      // optional string devName = 14 [default = ""];
      case 14: {
        if (tag == 114) {
         parse_devName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->devname().data(), this->devname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "devname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_alarmStat;
        break;
      }

      // optional int32 alarmStat = 15 [default = -1];
      case 15: {
        if (tag == 120) {
         parse_alarmStat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alarmstat_)));
          set_has_alarmstat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_videos;
        break;
      }

      // repeated .com.arges.file.proto.AlarmRecordData.LinkVideoData videos = 16;
      case 16: {
        if (tag == 130) {
         parse_videos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_videos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_videos;
        if (input->ExpectTag(138)) goto parse_raises;
        break;
      }

      // repeated .com.arges.file.proto.AlarmRecordData.RaiseAlarmData raises = 17;
      case 17: {
        if (tag == 138) {
         parse_raises:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_raises()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_raises;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmRecordData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmRecordData)
  return false;
#undef DO_
}

void AlarmRecordData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmRecordData)
  // optional int64 id = 1 [default = -1];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional string devCode = 2 [default = ""];
  if (has_devcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devcode().data(), this->devcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "devcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->devcode(), output);
  }

  // optional int32 unitType = 3 [default = -1];
  if (has_unittype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->unittype(), output);
  }

  // optional int32 unitSeq = 4 [default = -1];
  if (has_unitseq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->unitseq(), output);
  }

  // optional int32 chnSeq = 5 [default = -1];
  if (has_chnseq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->chnseq(), output);
  }

  // optional string chnName = 6 [default = ""];
  if (has_chnname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chnname().data(), this->chnname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chnname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->chnname(), output);
  }

  // optional int32 alarmType = 7 [default = -1];
  if (has_alarmtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->alarmtype(), output);
  }

  // optional int64 alarmDate = 8 [default = -1];
  if (has_alarmdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->alarmdate(), output);
  }

  // optional int32 alarmGrade = 9 [default = -1];
  if (has_alarmgrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->alarmgrade(), output);
  }

  // optional string handleUser = 10 [default = ""];
  if (has_handleuser()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->handleuser().data(), this->handleuser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "handleuser");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->handleuser(), output);
  }

  // optional int64 handleDate = 11 [default = -1];
  if (has_handledate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->handledate(), output);
  }

  // optional bytes handleMsg = 12 [default = ""];
  if (has_handlemsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->handlemsg(), output);
  }

  // optional int32 handleStat = 13 [default = -1];
  if (has_handlestat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->handlestat(), output);
  }

  // optional string devName = 14 [default = ""];
  if (has_devname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devname().data(), this->devname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "devname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->devname(), output);
  }

  // optional int32 alarmStat = 15 [default = -1];
  if (has_alarmstat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->alarmstat(), output);
  }

  // repeated .com.arges.file.proto.AlarmRecordData.LinkVideoData videos = 16;
  for (int i = 0; i < this->videos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->videos(i), output);
  }

  // repeated .com.arges.file.proto.AlarmRecordData.RaiseAlarmData raises = 17;
  for (int i = 0; i < this->raises_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->raises(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmRecordData)
}

::google::protobuf::uint8* AlarmRecordData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmRecordData)
  // optional int64 id = 1 [default = -1];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional string devCode = 2 [default = ""];
  if (has_devcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devcode().data(), this->devcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "devcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->devcode(), target);
  }

  // optional int32 unitType = 3 [default = -1];
  if (has_unittype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->unittype(), target);
  }

  // optional int32 unitSeq = 4 [default = -1];
  if (has_unitseq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->unitseq(), target);
  }

  // optional int32 chnSeq = 5 [default = -1];
  if (has_chnseq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->chnseq(), target);
  }

  // optional string chnName = 6 [default = ""];
  if (has_chnname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chnname().data(), this->chnname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chnname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->chnname(), target);
  }

  // optional int32 alarmType = 7 [default = -1];
  if (has_alarmtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->alarmtype(), target);
  }

  // optional int64 alarmDate = 8 [default = -1];
  if (has_alarmdate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->alarmdate(), target);
  }

  // optional int32 alarmGrade = 9 [default = -1];
  if (has_alarmgrade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->alarmgrade(), target);
  }

  // optional string handleUser = 10 [default = ""];
  if (has_handleuser()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->handleuser().data(), this->handleuser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "handleuser");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->handleuser(), target);
  }

  // optional int64 handleDate = 11 [default = -1];
  if (has_handledate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->handledate(), target);
  }

  // optional bytes handleMsg = 12 [default = ""];
  if (has_handlemsg()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->handlemsg(), target);
  }

  // optional int32 handleStat = 13 [default = -1];
  if (has_handlestat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->handlestat(), target);
  }

  // optional string devName = 14 [default = ""];
  if (has_devname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devname().data(), this->devname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "devname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->devname(), target);
  }

  // optional int32 alarmStat = 15 [default = -1];
  if (has_alarmstat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->alarmstat(), target);
  }

  // repeated .com.arges.file.proto.AlarmRecordData.LinkVideoData videos = 16;
  for (int i = 0; i < this->videos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->videos(i), target);
  }

  // repeated .com.arges.file.proto.AlarmRecordData.RaiseAlarmData raises = 17;
  for (int i = 0; i < this->raises_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->raises(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmRecordData)
  return target;
}

int AlarmRecordData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 id = 1 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional string devCode = 2 [default = ""];
    if (has_devcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devcode());
    }

    // optional int32 unitType = 3 [default = -1];
    if (has_unittype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unittype());
    }

    // optional int32 unitSeq = 4 [default = -1];
    if (has_unitseq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unitseq());
    }

    // optional int32 chnSeq = 5 [default = -1];
    if (has_chnseq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chnseq());
    }

    // optional string chnName = 6 [default = ""];
    if (has_chnname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chnname());
    }

    // optional int32 alarmType = 7 [default = -1];
    if (has_alarmtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->alarmtype());
    }

    // optional int64 alarmDate = 8 [default = -1];
    if (has_alarmdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->alarmdate());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 alarmGrade = 9 [default = -1];
    if (has_alarmgrade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->alarmgrade());
    }

    // optional string handleUser = 10 [default = ""];
    if (has_handleuser()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->handleuser());
    }

    // optional int64 handleDate = 11 [default = -1];
    if (has_handledate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->handledate());
    }

    // optional bytes handleMsg = 12 [default = ""];
    if (has_handlemsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->handlemsg());
    }

    // optional int32 handleStat = 13 [default = -1];
    if (has_handlestat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->handlestat());
    }

    // optional string devName = 14 [default = ""];
    if (has_devname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devname());
    }

    // optional int32 alarmStat = 15 [default = -1];
    if (has_alarmstat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->alarmstat());
    }

  }
  // repeated .com.arges.file.proto.AlarmRecordData.LinkVideoData videos = 16;
  total_size += 2 * this->videos_size();
  for (int i = 0; i < this->videos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->videos(i));
  }

  // repeated .com.arges.file.proto.AlarmRecordData.RaiseAlarmData raises = 17;
  total_size += 2 * this->raises_size();
  for (int i = 0; i < this->raises_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->raises(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmRecordData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmRecordData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmRecordData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmRecordData::MergeFrom(const AlarmRecordData& from) {
  GOOGLE_CHECK_NE(&from, this);
  videos_.MergeFrom(from.videos_);
  raises_.MergeFrom(from.raises_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_devcode()) {
      set_devcode(from.devcode());
    }
    if (from.has_unittype()) {
      set_unittype(from.unittype());
    }
    if (from.has_unitseq()) {
      set_unitseq(from.unitseq());
    }
    if (from.has_chnseq()) {
      set_chnseq(from.chnseq());
    }
    if (from.has_chnname()) {
      set_chnname(from.chnname());
    }
    if (from.has_alarmtype()) {
      set_alarmtype(from.alarmtype());
    }
    if (from.has_alarmdate()) {
      set_alarmdate(from.alarmdate());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_alarmgrade()) {
      set_alarmgrade(from.alarmgrade());
    }
    if (from.has_handleuser()) {
      set_handleuser(from.handleuser());
    }
    if (from.has_handledate()) {
      set_handledate(from.handledate());
    }
    if (from.has_handlemsg()) {
      set_handlemsg(from.handlemsg());
    }
    if (from.has_handlestat()) {
      set_handlestat(from.handlestat());
    }
    if (from.has_devname()) {
      set_devname(from.devname());
    }
    if (from.has_alarmstat()) {
      set_alarmstat(from.alarmstat());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmRecordData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmRecordData::CopyFrom(const AlarmRecordData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmRecordData::IsInitialized() const {

  return true;
}

void AlarmRecordData::Swap(AlarmRecordData* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(devcode_, other->devcode_);
    std::swap(unittype_, other->unittype_);
    std::swap(unitseq_, other->unitseq_);
    std::swap(chnseq_, other->chnseq_);
    std::swap(chnname_, other->chnname_);
    std::swap(alarmtype_, other->alarmtype_);
    std::swap(alarmdate_, other->alarmdate_);
    std::swap(alarmgrade_, other->alarmgrade_);
    std::swap(handleuser_, other->handleuser_);
    std::swap(handledate_, other->handledate_);
    std::swap(handlemsg_, other->handlemsg_);
    std::swap(handlestat_, other->handlestat_);
    std::swap(devname_, other->devname_);
    std::swap(alarmstat_, other->alarmstat_);
    videos_.Swap(&other->videos_);
    raises_.Swap(&other->raises_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmRecordData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmRecordData_descriptor_;
  metadata.reflection = AlarmRecordData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AlarmRecordMessage_AlarmParam::kAlarmTypeFieldNumber;
const int AlarmRecordMessage_AlarmParam::kDevCodeFieldNumber;
const int AlarmRecordMessage_AlarmParam::kChnSeqFieldNumber;
const int AlarmRecordMessage_AlarmParam::kLimitFieldNumber;
#endif  // !_MSC_VER

AlarmRecordMessage_AlarmParam::AlarmRecordMessage_AlarmParam()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmRecordMessage.AlarmParam)
}

void AlarmRecordMessage_AlarmParam::InitAsDefaultInstance() {
}

AlarmRecordMessage_AlarmParam::AlarmRecordMessage_AlarmParam(const AlarmRecordMessage_AlarmParam& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmRecordMessage.AlarmParam)
}

void AlarmRecordMessage_AlarmParam::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  alarmtype_ = GOOGLE_LONGLONG(-1);
  devcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chnseq_ = 0;
  limit_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmRecordMessage_AlarmParam::~AlarmRecordMessage_AlarmParam() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmRecordMessage.AlarmParam)
  SharedDtor();
}

void AlarmRecordMessage_AlarmParam::SharedDtor() {
  if (devcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete devcode_;
  }
  if (this != default_instance_) {
  }
}

void AlarmRecordMessage_AlarmParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmRecordMessage_AlarmParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmRecordMessage_AlarmParam_descriptor_;
}

const AlarmRecordMessage_AlarmParam& AlarmRecordMessage_AlarmParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmRecordMessage_AlarmParam* AlarmRecordMessage_AlarmParam::default_instance_ = NULL;

AlarmRecordMessage_AlarmParam* AlarmRecordMessage_AlarmParam::New() const {
  return new AlarmRecordMessage_AlarmParam;
}

void AlarmRecordMessage_AlarmParam::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<AlarmRecordMessage_AlarmParam*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(chnseq_, limit_);
    alarmtype_ = GOOGLE_LONGLONG(-1);
    if (has_devcode()) {
      if (devcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        devcode_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmRecordMessage_AlarmParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmRecordMessage.AlarmParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 alarmType = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &alarmtype_)));
          set_has_alarmtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_devCode;
        break;
      }

      // optional string devCode = 2 [default = ""];
      case 2: {
        if (tag == 18) {
         parse_devCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->devcode().data(), this->devcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "devcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_chnSeq;
        break;
      }

      // optional int32 chnSeq = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_chnSeq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chnseq_)));
          set_has_chnseq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_limit;
        break;
      }

      // optional int32 limit = 4 [default = 0];
      case 4: {
        if (tag == 32) {
         parse_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmRecordMessage.AlarmParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmRecordMessage.AlarmParam)
  return false;
#undef DO_
}

void AlarmRecordMessage_AlarmParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmRecordMessage.AlarmParam)
  // optional int64 alarmType = 1 [default = -1];
  if (has_alarmtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->alarmtype(), output);
  }

  // optional string devCode = 2 [default = ""];
  if (has_devcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devcode().data(), this->devcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "devcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->devcode(), output);
  }

  // optional int32 chnSeq = 3 [default = 0];
  if (has_chnseq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->chnseq(), output);
  }

  // optional int32 limit = 4 [default = 0];
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->limit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmRecordMessage.AlarmParam)
}

::google::protobuf::uint8* AlarmRecordMessage_AlarmParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmRecordMessage.AlarmParam)
  // optional int64 alarmType = 1 [default = -1];
  if (has_alarmtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->alarmtype(), target);
  }

  // optional string devCode = 2 [default = ""];
  if (has_devcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devcode().data(), this->devcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "devcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->devcode(), target);
  }

  // optional int32 chnSeq = 3 [default = 0];
  if (has_chnseq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->chnseq(), target);
  }

  // optional int32 limit = 4 [default = 0];
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->limit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmRecordMessage.AlarmParam)
  return target;
}

int AlarmRecordMessage_AlarmParam::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 alarmType = 1 [default = -1];
    if (has_alarmtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->alarmtype());
    }

    // optional string devCode = 2 [default = ""];
    if (has_devcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devcode());
    }

    // optional int32 chnSeq = 3 [default = 0];
    if (has_chnseq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chnseq());
    }

    // optional int32 limit = 4 [default = 0];
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmRecordMessage_AlarmParam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmRecordMessage_AlarmParam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmRecordMessage_AlarmParam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmRecordMessage_AlarmParam::MergeFrom(const AlarmRecordMessage_AlarmParam& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_alarmtype()) {
      set_alarmtype(from.alarmtype());
    }
    if (from.has_devcode()) {
      set_devcode(from.devcode());
    }
    if (from.has_chnseq()) {
      set_chnseq(from.chnseq());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmRecordMessage_AlarmParam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmRecordMessage_AlarmParam::CopyFrom(const AlarmRecordMessage_AlarmParam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmRecordMessage_AlarmParam::IsInitialized() const {

  return true;
}

void AlarmRecordMessage_AlarmParam::Swap(AlarmRecordMessage_AlarmParam* other) {
  if (other != this) {
    std::swap(alarmtype_, other->alarmtype_);
    std::swap(devcode_, other->devcode_);
    std::swap(chnseq_, other->chnseq_);
    std::swap(limit_, other->limit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmRecordMessage_AlarmParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmRecordMessage_AlarmParam_descriptor_;
  metadata.reflection = AlarmRecordMessage_AlarmParam_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AlarmRecordMessage::kRequestTypeFieldNumber;
const int AlarmRecordMessage::kResultFieldNumber;
const int AlarmRecordMessage::kResultDescribeFieldNumber;
const int AlarmRecordMessage::kDatasFieldNumber;
const int AlarmRecordMessage::kStartTimeFieldNumber;
const int AlarmRecordMessage::kEndTimeFieldNumber;
const int AlarmRecordMessage::kParamsFieldNumber;
const int AlarmRecordMessage::kNginxConfFieldNumber;
const int AlarmRecordMessage::kNginxOutFieldNumber;
#endif  // !_MSC_VER

AlarmRecordMessage::AlarmRecordMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.AlarmRecordMessage)
}

void AlarmRecordMessage::InitAsDefaultInstance() {
}

AlarmRecordMessage::AlarmRecordMessage(const AlarmRecordMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.AlarmRecordMessage)
}

void AlarmRecordMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  requesttype_ = -1;
  result_ = -1;
  resultdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  starttime_ = GOOGLE_LONGLONG(-1);
  endtime_ = GOOGLE_LONGLONG(-1);
  nginxconf_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nginxout_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AlarmRecordMessage::~AlarmRecordMessage() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.AlarmRecordMessage)
  SharedDtor();
}

void AlarmRecordMessage::SharedDtor() {
  if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdescribe_;
  }
  if (nginxconf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nginxconf_;
  }
  if (nginxout_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nginxout_;
  }
  if (this != default_instance_) {
  }
}

void AlarmRecordMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmRecordMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlarmRecordMessage_descriptor_;
}

const AlarmRecordMessage& AlarmRecordMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AlarmBean_2eproto();
  return *default_instance_;
}

AlarmRecordMessage* AlarmRecordMessage::default_instance_ = NULL;

AlarmRecordMessage* AlarmRecordMessage::New() const {
  return new AlarmRecordMessage;
}

void AlarmRecordMessage::Clear() {
  if (_has_bits_[0 / 32] & 183) {
    requesttype_ = -1;
    result_ = -1;
    if (has_resultdescribe()) {
      if (resultdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resultdescribe_->clear();
      }
    }
    starttime_ = GOOGLE_LONGLONG(-1);
    endtime_ = GOOGLE_LONGLONG(-1);
    if (has_nginxconf()) {
      if (nginxconf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        nginxconf_->clear();
      }
    }
  }
  if (has_nginxout()) {
    if (nginxout_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      nginxout_->clear();
    }
  }
  datas_.Clear();
  params_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AlarmRecordMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.AlarmRecordMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 requestType = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requesttype_)));
          set_has_requesttype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional int32 result = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_resultDescribe;
        break;
      }

      // optional bytes resultDescribe = 3 [default = ""];
      case 3: {
        if (tag == 26) {
         parse_resultDescribe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_resultdescribe()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_datas;
        break;
      }

      // repeated .com.arges.file.proto.AlarmRecordData datas = 4;
      case 4: {
        if (tag == 34) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_datas;
        if (input->ExpectTag(40)) goto parse_startTime;
        break;
      }

      // optional int64 startTime = 5 [default = -1];
      case 5: {
        if (tag == 40) {
         parse_startTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &starttime_)));
          set_has_starttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_endTime;
        break;
      }

      // optional int64 endTime = 6 [default = -1];
      case 6: {
        if (tag == 48) {
         parse_endTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_params;
        break;
      }

      // repeated .com.arges.file.proto.AlarmRecordMessage.AlarmParam params = 7;
      case 7: {
        if (tag == 58) {
         parse_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_params;
        if (input->ExpectTag(66)) goto parse_nginxConf;
        break;
      }

      // optional string nginxConf = 8 [default = ""];
      case 8: {
        if (tag == 66) {
         parse_nginxConf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nginxconf()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nginxconf().data(), this->nginxconf().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nginxconf");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_nginxOut;
        break;
      }

      // optional string nginxOut = 9 [default = ""];
      case 9: {
        if (tag == 74) {
         parse_nginxOut:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nginxout()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nginxout().data(), this->nginxout().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nginxout");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.AlarmRecordMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.AlarmRecordMessage)
  return false;
#undef DO_
}

void AlarmRecordMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.AlarmRecordMessage)
  // optional int32 requestType = 1 [default = -1];
  if (has_requesttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requesttype(), output);
  }

  // optional int32 result = 2 [default = -1];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  // optional bytes resultDescribe = 3 [default = ""];
  if (has_resultdescribe()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->resultdescribe(), output);
  }

  // repeated .com.arges.file.proto.AlarmRecordData datas = 4;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->datas(i), output);
  }

  // optional int64 startTime = 5 [default = -1];
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->starttime(), output);
  }

  // optional int64 endTime = 6 [default = -1];
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->endtime(), output);
  }

  // repeated .com.arges.file.proto.AlarmRecordMessage.AlarmParam params = 7;
  for (int i = 0; i < this->params_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->params(i), output);
  }

  // optional string nginxConf = 8 [default = ""];
  if (has_nginxconf()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nginxconf().data(), this->nginxconf().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nginxconf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->nginxconf(), output);
  }

  // optional string nginxOut = 9 [default = ""];
  if (has_nginxout()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nginxout().data(), this->nginxout().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nginxout");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->nginxout(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.AlarmRecordMessage)
}

::google::protobuf::uint8* AlarmRecordMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.AlarmRecordMessage)
  // optional int32 requestType = 1 [default = -1];
  if (has_requesttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requesttype(), target);
  }

  // optional int32 result = 2 [default = -1];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  // optional bytes resultDescribe = 3 [default = ""];
  if (has_resultdescribe()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->resultdescribe(), target);
  }

  // repeated .com.arges.file.proto.AlarmRecordData datas = 4;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->datas(i), target);
  }

  // optional int64 startTime = 5 [default = -1];
  if (has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->starttime(), target);
  }

  // optional int64 endTime = 6 [default = -1];
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->endtime(), target);
  }

  // repeated .com.arges.file.proto.AlarmRecordMessage.AlarmParam params = 7;
  for (int i = 0; i < this->params_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->params(i), target);
  }

  // optional string nginxConf = 8 [default = ""];
  if (has_nginxconf()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nginxconf().data(), this->nginxconf().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nginxconf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->nginxconf(), target);
  }

  // optional string nginxOut = 9 [default = ""];
  if (has_nginxout()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nginxout().data(), this->nginxout().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nginxout");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->nginxout(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.AlarmRecordMessage)
  return target;
}

int AlarmRecordMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 requestType = 1 [default = -1];
    if (has_requesttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->requesttype());
    }

    // optional int32 result = 2 [default = -1];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional bytes resultDescribe = 3 [default = ""];
    if (has_resultdescribe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->resultdescribe());
    }

    // optional int64 startTime = 5 [default = -1];
    if (has_starttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->starttime());
    }

    // optional int64 endTime = 6 [default = -1];
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->endtime());
    }

    // optional string nginxConf = 8 [default = ""];
    if (has_nginxconf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nginxconf());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string nginxOut = 9 [default = ""];
    if (has_nginxout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nginxout());
    }

  }
  // repeated .com.arges.file.proto.AlarmRecordData datas = 4;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  // repeated .com.arges.file.proto.AlarmRecordMessage.AlarmParam params = 7;
  total_size += 1 * this->params_size();
  for (int i = 0; i < this->params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->params(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmRecordMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AlarmRecordMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AlarmRecordMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AlarmRecordMessage::MergeFrom(const AlarmRecordMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  datas_.MergeFrom(from.datas_);
  params_.MergeFrom(from.params_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requesttype()) {
      set_requesttype(from.requesttype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_resultdescribe()) {
      set_resultdescribe(from.resultdescribe());
    }
    if (from.has_starttime()) {
      set_starttime(from.starttime());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
    if (from.has_nginxconf()) {
      set_nginxconf(from.nginxconf());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_nginxout()) {
      set_nginxout(from.nginxout());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AlarmRecordMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmRecordMessage::CopyFrom(const AlarmRecordMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmRecordMessage::IsInitialized() const {

  return true;
}

void AlarmRecordMessage::Swap(AlarmRecordMessage* other) {
  if (other != this) {
    std::swap(requesttype_, other->requesttype_);
    std::swap(result_, other->result_);
    std::swap(resultdescribe_, other->resultdescribe_);
    datas_.Swap(&other->datas_);
    std::swap(starttime_, other->starttime_);
    std::swap(endtime_, other->endtime_);
    params_.Swap(&other->params_);
    std::swap(nginxconf_, other->nginxconf_);
    std::swap(nginxout_, other->nginxout_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AlarmRecordMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlarmRecordMessage_descriptor_;
  metadata.reflection = AlarmRecordMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace file
}  // namespace arges
}  // namespace com

// @@protoc_insertion_point(global_scope)
