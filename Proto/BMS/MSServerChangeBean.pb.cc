// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MSServerChangeBean.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MSServerChangeBean.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace arges {
namespace file {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* MSServerChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSServerChange_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MSServerChangeBean_2eproto() {
  protobuf_AddDesc_MSServerChangeBean_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MSServerChangeBean.proto");
  GOOGLE_CHECK(file != NULL);
  MSServerChange_descriptor_ = file->message_type(0);
  static const int MSServerChange_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSServerChange, operation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSServerChange, listmsid_),
  };
  MSServerChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSServerChange_descriptor_,
      MSServerChange::default_instance_,
      MSServerChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSServerChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSServerChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSServerChange));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MSServerChangeBean_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSServerChange_descriptor_, &MSServerChange::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MSServerChangeBean_2eproto() {
  delete MSServerChange::default_instance_;
  delete MSServerChange_reflection_;
}

void protobuf_AddDesc_MSServerChangeBean_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030MSServerChangeBean.proto\022\024com.arges.fi"
    "le.proto\"8\n\016MSServerChange\022\024\n\toperation\030"
    "\001 \002(\005:\0010\022\020\n\010listMsId\030\002 \003(\t", 106);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MSServerChangeBean.proto", &protobuf_RegisterTypes);
  MSServerChange::default_instance_ = new MSServerChange();
  MSServerChange::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MSServerChangeBean_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MSServerChangeBean_2eproto {
  StaticDescriptorInitializer_MSServerChangeBean_2eproto() {
    protobuf_AddDesc_MSServerChangeBean_2eproto();
  }
} static_descriptor_initializer_MSServerChangeBean_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MSServerChange::kOperationFieldNumber;
const int MSServerChange::kListMsIdFieldNumber;
#endif  // !_MSC_VER

MSServerChange::MSServerChange()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.arges.file.proto.MSServerChange)
}

void MSServerChange::InitAsDefaultInstance() {
}

MSServerChange::MSServerChange(const MSServerChange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.arges.file.proto.MSServerChange)
}

void MSServerChange::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  operation_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSServerChange::~MSServerChange() {
  // @@protoc_insertion_point(destructor:com.arges.file.proto.MSServerChange)
  SharedDtor();
}

void MSServerChange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MSServerChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSServerChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSServerChange_descriptor_;
}

const MSServerChange& MSServerChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSServerChangeBean_2eproto();
  return *default_instance_;
}

MSServerChange* MSServerChange::default_instance_ = NULL;

MSServerChange* MSServerChange::New() const {
  return new MSServerChange;
}

void MSServerChange::Clear() {
  operation_ = 0;
  listmsid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSServerChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.arges.file.proto.MSServerChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 operation = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operation_)));
          set_has_operation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_listMsId;
        break;
      }

      // repeated string listMsId = 2;
      case 2: {
        if (tag == 18) {
         parse_listMsId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_listmsid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->listmsid(this->listmsid_size() - 1).data(),
            this->listmsid(this->listmsid_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "listmsid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_listMsId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.arges.file.proto.MSServerChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.arges.file.proto.MSServerChange)
  return false;
#undef DO_
}

void MSServerChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.arges.file.proto.MSServerChange)
  // required int32 operation = 1 [default = 0];
  if (has_operation()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->operation(), output);
  }

  // repeated string listMsId = 2;
  for (int i = 0; i < this->listmsid_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->listmsid(i).data(), this->listmsid(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "listmsid");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->listmsid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.arges.file.proto.MSServerChange)
}

::google::protobuf::uint8* MSServerChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.arges.file.proto.MSServerChange)
  // required int32 operation = 1 [default = 0];
  if (has_operation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->operation(), target);
  }

  // repeated string listMsId = 2;
  for (int i = 0; i < this->listmsid_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->listmsid(i).data(), this->listmsid(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "listmsid");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->listmsid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.arges.file.proto.MSServerChange)
  return target;
}

int MSServerChange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 operation = 1 [default = 0];
    if (has_operation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->operation());
    }

  }
  // repeated string listMsId = 2;
  total_size += 1 * this->listmsid_size();
  for (int i = 0; i < this->listmsid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->listmsid(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSServerChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSServerChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSServerChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSServerChange::MergeFrom(const MSServerChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  listmsid_.MergeFrom(from.listmsid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_operation()) {
      set_operation(from.operation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSServerChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSServerChange::CopyFrom(const MSServerChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSServerChange::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MSServerChange::Swap(MSServerChange* other) {
  if (other != this) {
    std::swap(operation_, other->operation_);
    listmsid_.Swap(&other->listmsid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSServerChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSServerChange_descriptor_;
  metadata.reflection = MSServerChange_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace file
}  // namespace arges
}  // namespace com

// @@protoc_insertion_point(global_scope)
